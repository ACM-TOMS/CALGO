#!/bin/sh
#
# Part of rksuite_90 v1.2 (December 1995)
#         software for initial value problems in ODEs
#
# Authors: R.W. Brankin (NAG Ltd., Oxford, England)
#          I. Gladwell  (Math Dept., SMU, Dallas, TX, USA)
#          see main doc for contact details
#
# Script to make rksuite_90 with usual real vectors or
# to create script with all options available
#
# USAGE makerk opt 
#                  where opt = r0  dependent variable is a  real   scalar
#                              r1    ..        ..      ..    ..    1d array
#                              r2    ..        ..      ..    ..    2d array
#                              c0    ..        ..      ..  complex scalar
#                              c1    ..        ..      ..    ..    1d array
#                              c2    ..        ..      ..    ..    2d array
#                              all - all the above are treated
#
# NOTE this script is not meant to be neat/fast/efficient/...
#      however, it does work!
# 
choice=$1
case $choice in
  r0)  do_1_to_0 <rksuite_90.bas >rksuite_90.f90;;
  c0)  do_1_to_0 <rksuite_90.bas | do_r_to_c >rksuite_90.f90;;
  r1)  cp rksuite_90.bas rksuite_90.f90;;
  c1)  do_r_to_c <rksuite_90.bas >rksuite_90.f90;;
  r2)  do_1_to_2 <rksuite_90.bas >rksuite_90.f90;;
  c2)  do_1_to_2 <rksuite_90.bas | do_r_to_c >rksuite_90.f90;;
  all) 
       do_1_to_0 <rksuite_90.bas >r0temp$$
       do_1_to_0 <rksuite_90.bas | do_r_to_c >c0temp$$
       cp rksuite_90.bas r1temp$$
       do_r_to_c <rksuite_90.bas >c1temp$$
       do_1_to_2 <rksuite_90.bas >r2temp$$
       do_1_to_2 <rksuite_90.bas | do_r_to_c >c2temp$$
       sed -e '/\!starta\!/q' <r0temp$$ >fintemp$$
       for i in [rc]*temp$$
       do
         sed -n  '/\!starta\!/,/\!enda\!/p' <$i >> fintemp$$ 
       done
       cat >> fintemp$$ << end-of-input1

interface setup
   module procedure setup_r1, setup_r0, setup_r2, setup_c1, setup_c0, setup_c2
end interface
interface range_integrate
   module procedure range_integrate_r1, range_integrate_r0, &
                    range_integrate_r2, range_integrate_c1,&
                    range_integrate_c0, range_integrate_c2
end interface
interface step_integrate
   module procedure step_integrate_r1, step_integrate_r0, &
                    step_integrate_r2, step_integrate_c1, &
                    step_integrate_c0, step_integrate_c2
end interface
interface statistics
   module procedure statistics_r1, statistics_r0, statistics_r2, &
                    statistics_c1, statistics_c0, statistics_c2
end interface
interface global_error
   module procedure global_error_r1, global_error_r0, global_error_r2, &
                    global_error_c1, global_error_c0, global_error_c2
end interface
interface reset_t_end
   module procedure reset_t_end_r1, reset_t_end_r0, reset_t_end_r2, &
                    reset_t_end_c1, reset_t_end_c0, reset_t_end_c2
end interface
interface interpolate
   module procedure interpolate_r1, interpolate_r0, interpolate_r2, &
                    interpolate_c1, interpolate_c0, interpolate_c2
end interface
interface set_stop_on_fatal
   module procedure set_stop_on_fatal_r1, set_stop_on_fatal_r0, &
                    set_stop_on_fatal_r2, set_stop_on_fatal_c1, &
                    set_stop_on_fatal_c0, set_stop_on_fatal_c2
end interface
interface get_saved_fatal
   module procedure get_saved_fatal_r1, get_saved_fatal_r0, &
                    get_saved_fatal_r2, get_saved_fatal_c1, & 
                    get_saved_fatal_c0, get_saved_fatal_c2
end interface
interface collect_garbage
   module procedure collect_garbage_r1, collect_garbage_r0, &
                    collect_garbage_r2, collect_garbage_c1, &
                    collect_garbage_c0, collect_garbage_c2
end interface

contains

end-of-input1
       sed -n '/\!startb\!/,/\!endb\!/p' <r0temp$$ >> fintemp$$
       for i in [rc]*temp$$
       do
         sed -n '/\!startc\!/,/\!endc\!/p' <$i >> fintemp$$ 
       done
       cat >> fintemp$$ << end-of-input2
end module rksuite_90
end-of-input2
       mv fintemp$$ rksuite_90.f90
       rm *temp*
       ;;
  *) 
       echo "invalid choice $choice - must be r0|c0|r1|c1|r2|c2|all"
       exit 1;;
esac
exit 0
