
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00662_legendre_qvm_vary_02 : public TestCaseReal
    {
    public:
      TestCase_case_00662_legendre_qvm_vary_02() { }
      virtual ~TestCase_case_00662_legendre_qvm_vary_02() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00662_legendre_qvm_vary_02");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_3 = ef::sqrt(ef::third());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const e_float v  = -((10 - k) * 13) - sqrt_1_3;
          const INT32   m  = -((10 - k) * 11);
          data[k] = ef::legendre_q(v, m, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("1.9021784389961982356703146461841909597227800149301092141252846780050548908454796700149380146055244503544640650969856572550304768553198798947292335789477987333165439670932019331074416674558871401036535951876230059753849720948700078468102925970371411945104256122083283345389053116557817638121348758715270472215658607336269727765524364361116171883515713299636358284700288866462967305581927177771231026958e-135"),
           e_float("4.4403073550858136075969375082313285650014509739056440238382847166930432542653522583662563552542166854625633764474851263145720382373842816157628471232490933500694039434921479461495758051803288221098230308492476297394952566026777516230829439590235442464145135040633779347012913895773017116298950162699026656726160443688697976795198522916346434267102211738160511184188529895047237066443857450031203537986e-190"),
           e_float("1.354957259746056554279093569327038232489117286590761233661567579231871771913075905603461246067761700301976905507713280084235983161748859312083483772114409719274414149597680135245380472522145160898378919367867647259755619663710102114172389104100216240823301403344425134295614726718909181331617660665033253583034956932399720965710488910639644528832016452804831845100684422587907166893990677462958031203e-172"),
           e_float("-7.4019110728796764888895950487962206247531833699036591086347500423460074607163002068012959527458516094300452752242020261520124071383536323496780000239996773454662368949377168547432927813797048447344743730091712647211204054974587628757384025860340945275614808755113388036543893573289333318273167110126022465756854942773023246797743643437687992942979530863100234139760142600626058725033601273140122802173e-147"),
           e_float("-6.4131913418239737206905152827200259984160224757543300611567523288329112424430762668035323663926694091781507532857824333815164394615589059336406924631715849442431243558946786689523976053628717707833036318947497204097188534469929953433917851504010939546311451754416387339351555122517493954329482978902001989676735388951464882687058871002458212248440037558080342607132766333853833002342641574424353728011e-122"),
           e_float("-2.8480216334971692611367356980217408034401335345952054434830836007687799372455517855752500050507000736052930192164297363359041647149912658303868512238660279173582955629078129977030880006587558153940872437790164880232082278653919551873076820214655115968114712168780725213203159179061796457252183789869436326613380625535886283002003334547538291155615645538228210610160081432414534816105225416770551738403e-97"),
           e_float("1.8750712432234152003902300072089701203000021722289893644831227007566127428414709394477754240978911914673102347748780108675378156521275789697844996602529623659997987292395240435084486189151636496158615805691798723173333673958233336394686541167601479382282550205208918987187803198233550250058065008442114694270120634997496610102159937662770938188400374115279246393947521729105627914635992244359264779363e-74"),
           e_float("-9.2742097462061134775165829796658491641243818593766117524503993547061127510782433478441803689993327447293707881244163936567604792776307065818390310953050723893321087890369420296060239807986156116018397286657333723904721376563197178916878721120813717421564975351772392227827200394517528502221468123381099395224009946711067110126601957642321949632790190019350086516475084097489039040320022285659109130501e-52"),
           e_float("1.9134791030114448539544613948924034902872383293902160754906438494162540132704163043540881349865212657505248734036929317705016542139951795016871767876670401237338445796782441325060198225814326118891897233529307548878214251643301342541156004138931909356795513300438122202056923761391867279647587964975666700813498865332461506076713355837303983151817632479915218072445221803721456645450682238904599072291e-30"),
           e_float("1.662323841395063632029888748322353715271815962739819720761306537922243216168723931077881679034485387312670979318991463369981683050289118104177002431556942745556985435242205876100937036352748654903929659221444248130201423071796826541202689374205193394080211187115779575622612623604930551529368092642782089918874072316895250081147209379945066778523624093446578546306489118829153051495176095619316508791e-11"),
           e_float("4.7537600722871229706417355380759147687043969895436784293354171540929477518750349826283984615712697728477308621140381216271048827692623805450495740005279872788866402377977971212016388650670461543380532966027566959875675892694091104633192546606845191224925652698000225711499023835090084199943039937411958882093668259880154373033256794455125285162363514050672636940561305999823202527283549502484461485745"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00662_legendre_qvm_vary_02(const bool b_write_output)
    {
      return TestCase_case_00662_legendre_qvm_vary_02().execute(b_write_output);
    }
  }
}
