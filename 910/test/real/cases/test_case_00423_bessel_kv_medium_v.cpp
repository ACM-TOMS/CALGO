
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00423_bessel_kv_medium_v : public TestCaseReal
    {
    public:
      TestCase_case_00423_bessel_kv_medium_v() { }
      virtual ~TestCase_case_00423_bessel_kv_medium_v() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00423_bessel_kv_medium_v");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          data[static_cast<std::size_t>(k)] = ef::cyl_bessel_k(ef::euler_gamma() + (k * 2000),
                                                               ef::hundred() + (500 * (k * k)));
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("4.6643536645396681457274750641032073033304054021778843765120293434506543379173112569274772118688517999391020753463878657313284676549478900465458967168617743917003063864978957227474904610704710930928507901362230309250373665327028637707751965515025078421021465170018299052918168819501890989868966813290332280370156144074177963323567851555599169063890233387800512236748395079255410880341985044534206580661e-45"),
           e_float("6.576704551953970966675524223590787177869957597238903467507906660503341154881438674757201647366062234516545171303315813567782791760408591592293256032005873297052443127488119374886307452632937045231547887096259646453679494201817864612080026812593374778099890359014834658470526983168166101516268539340499026792760637727498433562331398261592498549922600361400820444763018077113430424660934815699892059853e758"),
           e_float("1.0274081459581706027730168844846543264937556456097402612325229010090848328399393915488328913290347359051836869383219437636765165374208628189441271583464593047312711029419047820593257515786490487835072276173513039023411745482770483374290443342420245201088272085307849071179722320441809267147490944309188728259178284740967791793571560279811689222084294287595529301430322617495308651697818598696129910527e469"),
           e_float("1.1807893820417631227172341485887763817255270191843881203776808534562070481987357535240111762932352228200843929409262214902412477821054067390690324315441031798725779814436355584410104248962881990523627494191939758808190612355759521986508145086011130740196217056284903942597925258533730686898581272459115722562680656671253378660745635006433814582451205079521224013359076763217864386136021972995736698776e-468"),
           e_float("6.086927370984054327449468453439293552422220939884876780527250934917586397745798645246095037043322075861643754424830271801575843206238847865609472129502781126762534330668066527699880968205977792519304330218680102129426945955227209595774131104571950929485511703333087911489211809827178390719647519986865543513641688925110663141872818220063989474058077456206002939751876282508224231740700399557670433433e-1915"),
           e_float("3.0244071483633373138944642343362276807277891126629765282462224962947416366674907963620190214431756541742679354729765262684977834493512110881258852395804865310153387418063060881653331076138555881418767787056801431210066600454249847630537587339961684564036475590195068620223097984038961719672345593054459478801194858099080314217824022484256792396038238314102865006192748530351266790081801627247902322909e-3828"),
           e_float("4.7103694738145704794721098332294355731287352674404107949968576020830649603211117468330521693756178065218983117693883140973397355380533694657483199480368011176068448907774721156884460697699727795945282499695601514199327226380965235541926752368808219694009703708546549392017030213630429411801766139702146743430742063594623087131854457514863031943687431589066790808998108397288544772117757383882936566197e-6192"),
           e_float("5.7792980274631471268178063470432217440297311244414232778601033144266144085079943628850812667638736185697667551811987318058357151531363332495245153446608190427733447971569376415531948034236087194619053814038821334279592359433205391088276701283739967384241902972660517533194219120681092440368270806334743201464351035891005234466413885158716678621808949606743777025089860238630527401145215628117911102337e-8999"),
           e_float("2.5764979638718657885404903578925172032695860582674354307753562908287493604475323777789225811904045646191281305488677332061948321991551426508666723832366781091941324536187474032527415573182790258224782769750433016804450660449077040532199911946982783842025680515366548964397534026376986911927647718036744339950208368762284365341064178145432871732297320451356177912122244531738018982563744830689749352935e-12245"),
           e_float("3.8150836406049534573088393554728491882534412545796969362949826220346084527411616705347716020502395639418974567614147816680037418787519558171527319191661193032009255877588132601948223285127644372088803206277960135184548378157661592112270074738038375641936844189573966573574847612239386797355888722427452866354449670353169594963840121189680682638737624021605463141741037549849947456677681527541912036115e-15929"),
           e_float("2.4621287716688082462822488916878886593329016815941103447241036061505768301796180698040520668339948714767471432971404514266345116378026913081090616126756834354808283492242609171620657501858559334452240825224007504040853436168457817108727929084302222332899520202880329199172734807134153135156548140857312925305513878456301258165776791203917877489901062219604796358734468680058879252790892906413375651148e-20049"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00423_bessel_kv_medium_v(const bool b_write_output)
    {
      return TestCase_case_00423_bessel_kv_medium_v().execute(b_write_output);
    }
  }
}
