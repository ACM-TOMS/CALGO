
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00855_weber_d_med_x_med_v : public TestCaseReal
    {
    public:
      TestCase_case_00855_weber_d_med_x_med_v() { }
      virtual ~TestCase_case_00855_weber_d_med_x_med_v() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00855_weber_d_med_x_med_v");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        const e_float pi_over_ten = ef::pi() / static_cast<INT32>(10);
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float v = static_cast<INT32>((k + 1) * 100) + ef::pi();
          const e_float x = 150 + ef::third();
          data[k] = ef::weber_d(v, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("4.6492320134817891956313719484500935597432693622547458713036365428458031292186768718362721007876095050353375184062328220836102051004065794963594796877902703865333880531537793050331786575668243847755506506232308777262908192140449626446200989093024857238343588910010320044038388052592180498690147522841409669771439168305235283668686738159946476975244015807945149648246300947510050102072302989120411483641e-2230"),
           e_float("1.1925368870336942987724403017914280494123021988524977421115639182974016214062635575576041044403821847949887892918963617737604230053150122125355135021022487008489159642194126871468266708275560944844431917876522168067746446819418547404484886527597261556644216765142508331869636017121322023119718546534367488759459931469305519318643126236939673269468282884682317226148870572367603868629638452741862506019e-2012"),
           e_float("1.9412061909210029196451831021213590150031340420389063653301201645867096786555362925658195528731710310431749598642856023298043331305763706922749325409563783371685938559867581987348089464373902052911251020830390365509314150405316755421966883440700762627687070399696526697191932386647187743208928968660496288186645342820600270656951305320165830216742473950035129722403148100911718521712928716446567045076e-1795"),
           e_float("1.9926363066842324396620312280597277351814869805222561334961886512234552261636868233631177321692004515010594092775036916789260468550601306182462390015926674745845782157615144991094615167945310925853871977654155750280994271732071817858854504069921794623369770734671709888111067345379489660479025509770363775466400998123123928180662750113434820936976196693778481583974733413990217651727347282379925437512e-1578"),
           e_float("1.2814488300057176326263802266269436437270798717331920913923294048694488627173376004392236312851508073881155387087999718512425382141068859792234261145844440350067122054429951049612215440445897796476257105875820267231753356730632695866067875959281204623052230697741694372683394356364918510935283769741527329186966824151834746692520487489886706512996052064647694753352749397289269468831638914960958705231e-1361"),
           e_float("5.1281454334408157522770352262656774948256046519675479958281007840925287621396641870157104381513923358514279821567179830195994834220088098892976754382978199682653808487443694511683957275724480621121733089121945275202061107804610450416382606086657676794148328643506066377635453278082788779162649324151399901182124437295187625859379936800637204181515441835590661470310917222614362087913901603870881146611e-1145"),
           e_float("1.2681719044372223847469418011879810766888834579268105367976053854303156858735209432544428663894077706104037889561526447985568087592802366065279387366833041720416232004869677644767969150294317546778372906112539319090409688368919802145346863900837920877641939770270308293151145668808712555224303784565077867585657305319621959249801519049973005362691987557361952288832891588893312048095199204518488849121e-928"),
           e_float("1.9240945135173038269538249290986410262622971568300849114683224461159642111274558657402200764281317691135221601395893174286453376557958560678573981636885661998076292750279590253162260459418657571643404180694331014890204398321035114731330131555329934561648724106469252062574351236392899481754692253340889113153470309551529002125490703464881190216428055507877900386778802060287193432436139665602246993667e-712"),
           e_float("1.7777484945832964401666018730688295393326935544895368774715997531780983129144115019296612693092113413888726849004195939857469592443282028647919176392346419266301285289999238575615338545372103614795389763043261137296991074241387277714315977735585903203491032167835014620367847545397509359117059874163999433550023094116443869187014367686128138204588312957225681912878710031438950494804576960475133057827e-496"),
           e_float("9.9257335797735145476562428711073055945607083230416425237957686380501639935434946210118441072207925734076742348388461473847380076786041936554716807583955142207665604958485315550821112420127001068041249205987853430127142253743292966703194908091460482946358198657444949281951367334346902685237763408674439033183124429881175533964759129958579035685643933457364299070016135551671042179065618662356694724928e-281"),
           e_float("3.3222880489656644189630462159356233572445856510029511530856887660497639678552429215850816954948719327893998076416898857857637157671431611814206423350312242227312929317445589210458734662362476227492207540200760490882203300603856252866368281601858012633388748064605093942143834081713997554005489409432432626452030921284796245701963605561552982684457583461930242018946278161919062573885755662677225007837e-65"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00855_weber_d_med_x_med_v(const bool b_write_output)
    {
      return TestCase_case_00855_weber_d_med_x_med_v().execute(b_write_output);
    }
  }
}
