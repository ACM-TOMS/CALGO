
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00954_polylog_neg_x_neg_n : public TestCaseReal
    {
    public:
      TestCase_case_00954_polylog_neg_x_neg_n() { }
      virtual ~TestCase_case_00954_polylog_neg_x_neg_n() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00954_polylog_neg_x_neg_n");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(21u);
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          data[static_cast<std::size_t>(k)] = ef::poly_logarithm(-(k * 5) - 1, -(20 * k) - ef::euler_gamma());
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 21u> a =
        {{
           e_float("-0.2320363071747300278222016581612590382148137354221830701287681784338548633708050752799387218414670969358054669850185740475747842410247145559526003534237333507546342578760670300289740377289423107700509288367254753969364340554526880277963565521288173082269226082503930897937642978171455551397868299575074697521625019580492904217689542068516162558395562861004011118113523147127036490060447169157971716879"),
           e_float("-0.038040018911455505794981781657270868573477024497980467167220604129482115131125436890172797478151863784424318712147085270235927053731086253636065610537356543872602095790376774039125700107585598320694318886092804160029518558236807549816808457744913042865139399362738350164186078041220386943409189808227269940614013354357140148196607319159711182743870338700724090690939268198830420782501138635044185979996"),
           e_float("-0.25757046300967707354132273300545415429166949749634620674725374276161202494099212815427997418330161384942640287987336136841668881246929945551298733634630786841434197294132978581830946624499738935895799932127662105821759347004972624124183257292908656380469689650096292240224125663337483564986287240171535322841991068531568356606847705119884477018108308211740449709867353255340120982710279313491745090619"),
           e_float("-3.4742669052504668627108990913691931670786160345992827561750716449781075757483839953754052490545540624053863015420762644783571765784818110354982217950960938838883530772673204709506188485546655478830056130963218897289553245454017316643574065066384698463192021358986996042971168532931557825066797489154733475964793700703592610098863693579964850655123745081018485602509840683111654161808079614225919563531"),
           e_float("3606.6573179088398868036105379240943516168808298252757738327198778152457779326207818680186656948115261146443923630940663566134514728513340785945751178819729031327748187883362066268523533877299978694578109474955568227204399012293062147542898928026689309971352019216885407083731232326192654121550882250167807047115122352543986684829966518395689160960246575196695665431850749975451805505313173931341583521"),
           e_float("5.0712958797984383724914705738523398655174262388099043370590868334935587076985454872653503509904997521420429583680033830849640582434758269607589730563452422257625754350654396887922602296435821683205736379005216744401067898689741255522252881890624362333251264907042210990404147172206965767842154999131199472671473990421492927408040328613782702930673500639266117331197193985386654456243338411784896286819e6"),
           e_float("8.6526085259876041154828120628101004764643077281500828325975857159790691615416986030475422301776383799909267235622690837250546797862613028473510763193128436690328758458329468955392701080071384654377166257682049681366882981442577108094533710449262168255899947855664393001552893432737394998459827131464782404673984087072005023619682362904762304274664869858532624535558510257193087971349407755881846303041e9"),
           e_float("1.4337508522350211059090878103126207233873620067166042873371842336251588178888836098997015059658834444844305842237647018286585933892711143046854773075737718117347269992866115550221372751402325600824320762270974986251299185183627062206313181247159281853524621244401279734610730185676646099417601797068001818871805395563929028722384137633702301580414530454849783003269773203428218968730208415116440744929e13"),
           e_float("-4.9304110546518966695445580062711012587658366335340973969159811507713715496421870721512993013707069477894720879791066167252688619569283699099879281037982700050993309051232384038219818473762457325508910490716637196092409061732318064681184593866137369359102239959818143240173554278150183121717012283408335151775277379902878797651537076005301171698403392531627939582403135905826131596206115580687280852895e16"),
           e_float("-1.5285987002847295359245456213285763113151026778285726493260498862427009774065544024859750469971227475683150540385235426788537258831550173435892092550610521544033153171979460498208311374848877547915413784202509424207032200069731949233290480604421259640213104273931907132724752594940985736860804293743607313521574485063908943180465455004224343792535078327261957304613036369340792180280333788729144182677e21"),
           e_float("-2.3921893792688936336427237485479954833935750544880495218545161532824601165351561976555788554399232641802575665303452216892991230525792984302399198150374200174201529205643687523445571929111362225541827114023185336544309874769842831247873911647199779568818069764536593121235329263686250335707123859145246056285392613779022138008687664237427653763390464778984899914354217427842982606650429008246174061333e25"),
           e_float("-1.3242656920967536496966382889972380755456649675010276960757837613841247776211061036807530523381750608537487909088867864769107283064121836087370339461976344402986956653234731632069889865841307212886047768367873765909335860910232074569993664476182435300472328262947108700029982045050093535570671538491197077089560062360789513415441019496573560843419066467817183722367338326664865034895760691080193700258e29"),
           e_float("1.5421989750226127398281175954932194641864978405768481456852737770043384990237050005565541004633364903655450841430203531287851880851341390838238462703575804520927383193909524753169628799423687233690013438767863237858498796230724880712474687109049209142968637700420160185377228294180797382984109265371583927908119958301121602927851740253650639485770112912246230945222527270200075196560528956567762899513e34"),
           e_float("1.178895638591269197701257630831303026706651107199260708013564824494786049674221641798922976544065221697269466648387541727207364704784617336817208547562448506018697138961557230092951248038929786152990512567243681207828061978999708159963448723094129959040626238670410631225798358339224890993173100180312125188867180532475469427949287735539607001686686152801297693213131967890662030613664732751485409892e39"),
           e_float("3.9057249461080480856152751175980396704134911953975630835633147074347851561315858193138620891491390379818607637534120203279078395632124529157803705146362740166811689313605649338801158963082968149608344530396652273499182344554951522997092765290499622399564944466962718529267867886986989128793702704546004461715395141954591084264564060044311054101806930100771669543491064770864114421447951025337640172884e43"),
           e_float("-4.0339279169172628939543822218880152159752948054320405530158129641808227742875968806898327482340725851430705172461466006148624893433172767424361246133060038264263813855310453749131061322501839331928221582337800755069670337938145515101328946885722327056469655445408476634909525422043091546128980077885336382485089185754060127654482390632062683782129992025524081809603133025138114045597814752158703814682e48"),
           e_float("-1.0565432420478160295748358911923968151700066152868782314560896753103911195672337587367854230495451102003644752262360235895310273740522879068621850584123397195700308716090490771071948844039824547104915819344952201409609983365083111094529374662813984912069900853895529049404534005952063583451685680985323915044625775110453554335701457018446055543947473977883496717886355113763567353001561999364197560622e54"),
           e_float("-9.8781885057984594809826652298778729694706832454458037644520532467718544506022772083588795602117229623263505567690536394290813345916961299509643505928927232710640520010168993127412748581604037852422877066738453433933439430668141835189469959661380506582941192159474124725475313143197427247999845146753205308371710884234197409690686593363892251615627537643747464109567652496586441904891737705588999776842e58"),
           e_float("1.731092271117861645058214092598062649244942655832345915011982500619571652457144559247423381561777642203634821950897151263174004215717285303921740484497348779704800494191221803769236497046067556774344640854055790652415169049980633450327725946388945031081396716197717749563641764008307032846987818256847726497175236024477466550638396218170683089975019324680228368794261058814437239513025145024185345162e64"),
           e_float("1.0839420774176377047126126130338626820463056047186461126117560276287747115585155745332018177333978215300609316800137060831993434286821257430160011085484861467126961509246398170395233242511465716553001040380521132241396128944737083308297951248195489702667963211668006446887307838902400341414942911268626548174237937415072300189724859227358132597208157846367844878467503030769362947566448722654856526777e70"),
           e_float("1.9954488803233073816025700243978745730104105429312437233318866988118671651436795015462373931438568568998333789377463899186198803097030106604319668615639923723138300453554877072106356456432506386668844482269346441177428070875718677003388331649604927241528426791157340721070887021950213743981327520989500760005024087099960091800335077598775068378147928845353589598919603249576124536297463925599632049729e75"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00954_polylog_neg_x_neg_n(const bool b_write_output)
    {
      return TestCase_case_00954_polylog_neg_x_neg_n().execute(b_write_output);
    }
  }
}
