
// (Manually Modified) Automatically generated file
// Reason: N::meprec: Internal precision limit $MaxExtraPrecision = 50.` reached while evaluating Zeta[-101-Catalan,242/3]
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00936_various_hurw_zeta : public TestCaseReal
    {
    public:
      TestCase_case_00936_various_hurw_zeta() { }
      virtual ~TestCase_case_00936_various_hurw_zeta() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00936_various_hurw_zeta");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.clear();
        data.push_back(ef::hurwitz_zeta(-101 - ef::catalan(), ef::two_third() + 80));
        data.push_back(ef::hurwitz_zeta(ef::catalan(), 0));
        data.push_back(ef::hurwitz_zeta(ef::catalan(), 1));
        data.push_back(ef::hurwitz_zeta(ef::catalan(), 2));
        data.push_back(ef::hurwitz_zeta(ef::catalan(), 17));
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 5u> a =
        {{
           e_float("-8.122454466067158893184936326871152815478093910517521466840287166330397733126142812197540338943496039004766853690430152160992201203787992843565808158004509004609810085710882181545212833017539401196059242832667017847077285634512730679977138300140448189156037077019001388676145754489879044801064312839640645356150342966123215650439521732429142505232907124414569082122880773491440748186946114646734927744e193"),
           e_float("-11.328825171520513276729070529751645926467901612151020697207835264316557079522346109602885462147096350109778149930057870683514001859888989646551716377785099143657737962006018495413790671198077226738317400297727340788446666220042243951029569235370982761226622866591316522264440906902051253227563289875789938905523794445282186145966818607096822144423443158766958142152001274193405783671204849544380616752"),
           e_float("-11.328825171520513276729070529751645926467901612151020697207835264316557079522346109602885462147096350109778149930057870683514001859888989646551716377785099143657737962006018495413790671198077226738317400297727340788446666220042243951029569235370982761226622866591316522264440906902051253227563289875789938905523794445282186145966818607096822144423443158766958142152001274193405783671204849544380616752"),
           e_float("-12.328825171520513276729070529751645926467901612151020697207835264316557079522346109602885462147096350109778149930057870683514001859888989646551716377785099143657737962006018495413790671198077226738317400297727340788446666220042243951029569235370982761226622866591316522264440906902051253227563289875789938905523794445282186145966818607096822144423443158766958142152001274193405783671204849544380616752"),
           e_float("-15.061163364129310887240075262967886005706532136389359455343229219697209972229028602233792657064533385326401123508844933409351009401711975573510364989385002696805719531403759075241226478939487141402589977192334589102698670531159049580469699626680089417959798473015566977566494998485961380125061596165145911280878815941186435005026051419280620430847966309853932502881639529202722223543865536771639117092"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };
    bool test_case_00936_various_hurw_zeta(const bool b_write_output)
    {
      return TestCase_case_00936_various_hurw_zeta().execute(b_write_output);
    }
  }
}
