      LOGICAL FUNCTION isdnan(x)
************************************************************************
*     (Is x a NaN?)
*     Return .TRUE. if x is a NaN, and .FALSE. otherwise.
*
*     This version uses low-level bit operations to examine
*     the bit patterns of x dynamically determining the endian-ness,
*     so that it works on all IEEE 754 systems with support for the
*     MILSTD and Fortran 95 bit manipulation functions, iand() and
*     ishft().
*
*     Some compilers generate incorrect code for the much simpler test:
*
*         isdnan = (x .NE. x)
*
*     so this version provides a reasonably portable workaround.
*
*     [12-Jun-2000]
************************************************************************
*
      INTEGER             iand,        ishft
*
*     Argument variables
*
      DOUBLE PRECISION    x
*
*     Local variables
*
      DOUBLE PRECISION    xx
*
      INTEGER             hi,          ix(2),       lo
*
      EQUIVALENCE         (ix(1), xx)
*
      xx = 1.0d+00
      IF (ix(1) .EQ. 0) THEN
*         little endian
          hi = 2
          lo = 1
      ELSE
*         big endian
          hi = 1
          lo = 2
      END IF
*
      xx = x
*
      isdnan = ((iand(2047,ishft(ix(hi), -20)) .EQ. 2047) .AND.
     X         ((iand(ix(hi),1048575) .NE. 0) .OR. (ix(lo) .NE. 0)))
*
      END
