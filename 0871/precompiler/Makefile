#############################################################################
# Makefile for building: precompile
# Generated by qmake (1.07a) (Qt 3.3.3) on: Wed Aug 10 18:33:57 2005
# Project:  precompile.pro
# Template: app
# Command: $(QMAKE) -o Makefile precompile.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -O2 -fmessage-length=0 -Wall -Wall -W -O2 -fmessage-length=0 -Wall  
CXXFLAGS = -pipe -O2 -fmessage-length=0 -Wall -Wall -W -O2 -fmessage-length=0 -Wall  
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt33/mkspecs/default -I. -Iinclude -Iinclude/xml -I/usr/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/lib64/ 
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = obj/

####### Files

HEADERS = include/xml/attribute.h \
		include/xml/commentnode.h \
		include/xml/elementnode.h \
		include/xml/pinode.h \
		include/xml/textnode.h \
		include/xml/xmlnode.h \
		include/xml/XMLParseFunctions.h \
		include/error.h \
		include/ConfigElem.h \
		include/ConfigFile.h \
		include/Convert.h \
		include/defs.h \
		include/ParseCmdLine.h \
		include/ParseElem.h \
		include/ParseQueue.h \
		include/Parser.h \
		include/ParserConf.h \
		include/PreParser.h \
		include/PrintArg.h \
		include/PrintConverter.h \
		include/Reserved.h \
		include/Var.h \
		include/Variables.h \
		include/ConvertElem.h \
		include/MatchElem.h \
		include/Matcher.h \
		include/Graph.h \
		include/ConvertConfig.h \
		include/finder.h \
		include/xml/XMLParser.h
SOURCES = src/xml/attribute.cpp \
		src/xml/commentnode.cpp \
		src/xml/elementnode.cpp \
		src/xml/pinode.cpp \
		src/xml/textnode.cpp \
		src/xml/xmlnode.cpp \
		src/ConfigElem.cpp \
		src/ConfigFile.cpp \
		src/Convert.cpp \
		src/ParseCmdLine.cpp \
		src/ParseElem.cpp \
		src/ParseQueue.cpp \
		src/Parser.cpp \
		src/ParserConf.cpp \
		src/precompile.cpp \
		src/PreParser.cpp \
		src/PrintArg.cpp \
		src/PrintConverter.cpp \
		src/Reserved.cpp \
		src/Var.cpp \
		src/Variables.cpp \
		src/ConvertElem.cpp \
		src/MatchElem.cpp \
		src/Matcher.cpp \
		src/Graph.cpp \
		src/ConvertConfig.cpp \
		src/finder.cpp \
		src/xml/XMLLexer.cpp \
		src/xml/XMLParser.cpp \
		src/lex.yy.cpp
OBJECTS = obj/attribute.o \
		obj/commentnode.o \
		obj/elementnode.o \
		obj/pinode.o \
		obj/textnode.o \
		obj/xmlnode.o \
		obj/ConfigElem.o \
		obj/ConfigFile.o \
		obj/Convert.o \
		obj/ParseCmdLine.o \
		obj/ParseElem.o \
		obj/ParseQueue.o \
		obj/Parser.o \
		obj/ParserConf.o \
		obj/precompile.o \
		obj/PreParser.o \
		obj/PrintArg.o \
		obj/PrintConverter.o \
		obj/Reserved.o \
		obj/Var.o \
		obj/Variables.o \
		obj/ConvertElem.o \
		obj/MatchElem.o \
		obj/Matcher.o \
		obj/Graph.o \
		obj/ConvertConfig.o \
		obj/finder.o \
		obj/XMLLexer.o \
		obj/XMLParser.o \
		obj/lex.yy.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = precompile.pro
QMAKE_TARGET = precompile
DESTDIR  = 
TARGET   = precompile

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

# Deactivated for algorithm submission!
#
#Makefile: precompile.pro  /usr/lib/qt3/mkspecs/default/qmake.conf 
#	$(QMAKE) -o Makefile precompile.pro
#qmake: 
#	@$(QMAKE) -o Makefile precompile.pro

dist: 
	@mkdir -p obj/precompile && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) obj/precompile/ && ( cd `dirname obj/precompile` && $(TAR) precompile.tar precompile && $(GZIP) precompile.tar ) && $(MOVE) `dirname obj/precompile`/precompile.tar.gz . && $(DEL_FILE) -r obj/precompile

mocclean:
uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

obj/attribute.o: src/xml/attribute.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/attribute.o src/xml/attribute.cpp

obj/commentnode.o: src/xml/commentnode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/commentnode.o src/xml/commentnode.cpp

obj/elementnode.o: src/xml/elementnode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/elementnode.o src/xml/elementnode.cpp

obj/pinode.o: src/xml/pinode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/pinode.o src/xml/pinode.cpp

obj/textnode.o: src/xml/textnode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/textnode.o src/xml/textnode.cpp

obj/xmlnode.o: src/xml/xmlnode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/xmlnode.o src/xml/xmlnode.cpp

obj/ConfigElem.o: src/ConfigElem.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ConfigElem.o src/ConfigElem.cpp

obj/ConfigFile.o: src/ConfigFile.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ConfigFile.o src/ConfigFile.cpp

obj/Convert.o: src/Convert.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Convert.o src/Convert.cpp

obj/ParseCmdLine.o: src/ParseCmdLine.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ParseCmdLine.o src/ParseCmdLine.cpp

obj/ParseElem.o: src/ParseElem.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ParseElem.o src/ParseElem.cpp

obj/ParseQueue.o: src/ParseQueue.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ParseQueue.o src/ParseQueue.cpp

obj/Parser.o: src/Parser.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Parser.o src/Parser.cpp

obj/ParserConf.o: src/ParserConf.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ParserConf.o src/ParserConf.cpp

obj/precompile.o: src/precompile.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/precompile.o src/precompile.cpp

obj/PreParser.o: src/PreParser.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/PreParser.o src/PreParser.cpp

obj/PrintArg.o: src/PrintArg.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/PrintArg.o src/PrintArg.cpp

obj/PrintConverter.o: src/PrintConverter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/PrintConverter.o src/PrintConverter.cpp

obj/Reserved.o: src/Reserved.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Reserved.o src/Reserved.cpp

obj/Var.o: src/Var.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Var.o src/Var.cpp

obj/Variables.o: src/Variables.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Variables.o src/Variables.cpp

obj/ConvertElem.o: src/ConvertElem.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ConvertElem.o src/ConvertElem.cpp

obj/MatchElem.o: src/MatchElem.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/MatchElem.o src/MatchElem.cpp

obj/Matcher.o: src/Matcher.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Matcher.o src/Matcher.cpp

obj/Graph.o: src/Graph.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Graph.o src/Graph.cpp

obj/ConvertConfig.o: src/ConvertConfig.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ConvertConfig.o src/ConvertConfig.cpp

obj/finder.o: src/finder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/finder.o src/finder.cpp

obj/XMLLexer.o: src/xml/XMLLexer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/XMLLexer.o src/xml/XMLLexer.cpp

obj/XMLParser.o: src/xml/XMLParser.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/XMLParser.o src/xml/XMLParser.cpp

obj/lex.yy.o: src/lex.yy.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/lex.yy.o src/lex.yy.cpp

####### Install

install:  

uninstall:  

