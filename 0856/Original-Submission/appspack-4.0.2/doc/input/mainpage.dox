// $Id: mainpage.dox,v 1.4.2.10 2005/12/15 02:40:03 tgkolda Exp $ 
// $Source: /space/CVS-Acro/acro/packages/appspack/appspack/doc/input/mainpage.dox,v $ 

/*!

\mainpage Asynchronous Parallel Pattern Search

<center><b>Version 4.0.2</b><br>Released December 15, 2005</center>

\section mainpage_intro Introduction
  
  %APPSPACK is serial or parallel, derivative-free optimization software for
  solving nonlinear unconstrained and bound-constrained optimization
  problems, with possibly noisy and expensive objective functions.
  The basic optimization problem is of the form
  \f[
  \begin{array}{ll}
  \min & f(x) \\
  \mbox{subject to} & \ell_i \leq x_i \leq u_i \mbox{ for } i = 1,\dots, n.
  \end{array}
  \f]
  Here \f$f: \Re^n \rightarrow \Re \cup \{+\infty\}\f$ and
  \f$\ell,u\in\Re^n\f$.  (The upper and lower bounds are each optional
  on an component-by-component basis.) To find a solution of this problem,
  %APPSPACK implements asynchronous parallel pattern search, which
  uses a pattern of search directions to drive the search and
  determine new trial points for evaluation.  
  %APPSPACK is written in C++ and uses MPI for
  parallelism.  Using %APPSPACK to solve optimization problems has the
  following advantages:

  <ul>
  <li> \e Only function values are required for the optimization, so
  it can be applied to a wide variety of problems. The user need
  simply provide a program (written in any language such as Fortran,
  C, C++, Perl, etc.)  that can evaluate the objective function at a
  given point.
  <li> The target applications are simulation-based optimization problems
  characterized by a small number of variables (i.e., n < 100) and by
  expensive objective function evaluations (typically complex
  simulations that take minutes or hours to run). The procedure for
  evaluating the objective function does not need to be encapsulated
  in a subroutine and can, in fact, be an entirely separate program.
  <li> The code can be run in parallel on a cluster of computers,
  greatly reducing the total solution time. Parallelism is achieved
  by assigning the individual function evaluations 
  to different processors.  The (optional) asynchronism enables better
  load balancing.
  <li> The software is freely available under the terms of the GNU
  Lesser General Public License. 
  </ul>

<b>Key words:</b>
 optimization, derivative-free, parallel,
direct search, pattern search, engineering design 


\section mainpage_GettingStarted Getting Started

<ul>
<li> \ref pageDownloads 
<li> \ref pageLicense 
<li> \ref pageConfigure 
</ul>

\section mainpage_UsingTheCode Using the Code

<ul>
<li> \ref pagePubs 
<li> \ref pageExecutables <!--<li> \ref pageLibrary [Using the Library]-->
<li> \ref pageParameters 
<li> \ref pageBoundsParameters
<li> \ref pageCustomize (for advanced users only)
</ul>

\section mainpage_Results Results with APPSPACK

<ul>
<li> \ref pagePubs_howtocite
<li> \ref pageUsers
</ul>

\section mainpage_MoreInfo More Information

<ul> 
<li> \ref pageFAQ
<li> \ref pageBugs 
<li> \ref pageMailingLists 
<li> \ref pageDevInfo 
<li> \ref pageDoxygen
<li> <a href="http://software.sandia.gov/appspack/dev/">Current development version</a>
<li> <a href="http://software.sandia.gov/appspack/versions.html">Other versions</a>
</ul>


\section mainpage_Contributors Contributors

The following people have contributed code to %APPSPACK:

<ul>
<li> <a href="http://csmr.ca.sandia.gov/~tgkolda/">Tamara G. Kolda</a>,  
     Sandia National Labs, 
     tgkolda@sandia.gov
<li> <a href="http://csmr.ca.sandia.gov/~pdhough/">Patricia D. Hough</a>,  
     Sandia National Labs, 
     pdhough@sandia.gov
<li> <a href="http://csmr.ca.sandia.gov/~gagray/">Genetha Gray</a>, 
     Sandia National Labs,
     gagray@sandia.gov
<li> Robert Darwin  (Sandia Summer Intern, 2004)
<li> Daniel Dunlavy (Sandia Summer Intern, 2001)
<li> H. Alton Patrick (Sandia Summer Intern, 2000)
<li> Sarah Brown (Sandia Summer Intern, 2000)
</ul>

\section mainpage_questions For All Other Questions and Comments...

Please contact \ref pagePrimaryContact.


*/


