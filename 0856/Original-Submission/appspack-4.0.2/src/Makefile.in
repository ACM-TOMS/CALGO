# Makefile.in generated by automake 1.8.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# @HEADER
# ************************************************************************
# 
#          APPSPACK: Asynchronous Parallel Pattern Search
#                 Copyright (2003) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#                                                                                 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA.                                                                           .
# 
# Questions? Contact Tammy Kolda (tgkolda@sandia.gov) 
# 
# ************************************************************************
# @HEADER

# ------------------------------------------------------------------------
# List of all programs
# ------------------------------------------------------------------------



SOURCES = $(libappspack_a_SOURCES) $(appspack_mpi_SOURCES) $(appspack_serial_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
@BUILD_EXECUTABLES_TRUE@bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2)
subdir = src
DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)/APPSPACK_Config.hpp.in \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = APPSPACK_Config.hpp
CONFIG_CLEAN_FILES =
AR = ar
ARFLAGS = cru
am__installdirs = $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) $(DESTDIR)$(pkgincludedir)
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
libappspack_a_LIBADD =
am_libappspack_a_OBJECTS = APPSPACK_Cache_Manager.$(OBJEXT) \
	APPSPACK_Cache_Point.$(OBJEXT) \
	APPSPACK_Constraints_Bounds.$(OBJEXT) \
	APPSPACK_Conveyor.$(OBJEXT) APPSPACK_Counter.$(OBJEXT) \
	APPSPACK_Directions.$(OBJEXT) \
	APPSPACK_Evaluator_SystemCall.$(OBJEXT) \
	APPSPACK_Executor_Serial.$(OBJEXT) \
	APPSPACK_Executor_MPI.$(OBJEXT) APPSPACK_GCI.$(OBJEXT) \
	APPSPACK_List.$(OBJEXT) APPSPACK_Parameter_Entry.$(OBJEXT) \
	APPSPACK_Parameter_List.$(OBJEXT) APPSPACK_Point.$(OBJEXT) \
	APPSPACK_Print.$(OBJEXT) APPSPACK_Solver.$(OBJEXT) \
	APPSPACK_Utils.$(OBJEXT) APPSPACK_Value.$(OBJEXT) \
	APPSPACK_Vector.$(OBJEXT)
libappspack_a_OBJECTS = $(am_libappspack_a_OBJECTS)
@BUILD_SERIAL_TRUE@am__EXEEXT_1 = appspack_serial$(EXEEXT)
@BUILD_MPI_TRUE@am__EXEEXT_2 = appspack_mpi$(EXEEXT)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_appspack_mpi_OBJECTS = APPSPACK_Main_MPI.$(OBJEXT)
appspack_mpi_OBJECTS = $(am_appspack_mpi_OBJECTS)
am__DEPENDENCIES_1 = $(top_builddir)/src/libappspack.a
am_appspack_serial_OBJECTS = APPSPACK_Main_Serial.$(OBJEXT)
appspack_serial_OBJECTS = $(am_appspack_serial_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/APPSPACK_Cache_Manager.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Cache_Point.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Constraints_Bounds.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Conveyor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Counter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Directions.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Executor_MPI.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Executor_Serial.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_GCI.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_List.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Main_MPI.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Main_Serial.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Parameter_Entry.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Parameter_List.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Point.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Print.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Solver.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Utils.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Value.Po \
@AMDEP_TRUE@	./$(DEPDIR)/APPSPACK_Vector.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libappspack_a_SOURCES) $(appspack_mpi_SOURCES) \
	$(appspack_serial_SOURCES)
DIST_SOURCES = $(libappspack_a_SOURCES) $(appspack_mpi_SOURCES) \
	$(appspack_serial_SOURCES)
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALTERNATE_AR = @ALTERNATE_AR@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_EXECUTABLES_FALSE = @BUILD_EXECUTABLES_FALSE@
BUILD_EXECUTABLES_TRUE = @BUILD_EXECUTABLES_TRUE@
BUILD_MPI_FALSE = @BUILD_MPI_FALSE@
BUILD_MPI_TRUE = @BUILD_MPI_TRUE@
BUILD_SERIAL_FALSE = @BUILD_SERIAL_FALSE@
BUILD_SERIAL_TRUE = @BUILD_SERIAL_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXREPOS = @CXXREPOS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_ALTERNATE_AR_FALSE = @USE_ALTERNATE_AR_FALSE@
USE_ALTERNATE_AR_TRUE = @USE_ALTERNATE_AR_TRUE@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
@BUILD_SERIAL_TRUE@APPSPACK_SERIAL = appspack_serial
@BUILD_MPI_TRUE@APPSPACK_MPI = appspack_mpi

# ------------------------------------------------------------------------
# Executables
# ------------------------------------------------------------------------
appspack_serial_SOURCES = $(srcdir)/APPSPACK_Main_Serial.cpp
appspack_serial_DEPENDENCIES = $(top_builddir)/src/libappspack.a 
appspack_serial_LDADD = $(appspack_serial_DEPENDENCIES)
appspack_mpi_SOURCES = $(srcdir)/APPSPACK_Main_MPI.cpp
appspack_mpi_DEPENDENCIES = $(top_builddir)/src/libappspack.a 
appspack_mpi_LDADD = $(appspack_mpi_DEPENDENCIES)

# ------------------------------------------------------------------------
# List of all libraries to install in $(libdir)
# ------------------------------------------------------------------------
lib_LIBRARIES = libappspack.a
@USE_ALTERNATE_AR_FALSE@libappspack_a_AR = $(AR) cru

# ------------------------------------------------------------------------
# Library AR Command
# ------------------------------------------------------------------------
@USE_ALTERNATE_AR_TRUE@libappspack_a_AR = $(ALTERNATE_AR)

# ------------------------------------------------------------------------
# General CPP flags
# ------------------------------------------------------------------------
AM_CPPFLAGS = 

# ------------------------------------------------------------------------
# Library source
# ------------------------------------------------------------------------
libappspack_a_SOURCES = \
	$(srcdir)/APPSPACK_Cache_Manager.cpp \
	$(srcdir)/APPSPACK_Cache_Point.cpp \
	$(srcdir)/APPSPACK_Constraints_Bounds.cpp \
	$(srcdir)/APPSPACK_Conveyor.cpp \
	$(srcdir)/APPSPACK_Counter.cpp \
	$(srcdir)/APPSPACK_Directions.cpp \
	$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp \
	$(srcdir)/APPSPACK_Executor_Serial.cpp \
	$(srcdir)/APPSPACK_Executor_MPI.cpp \
	$(srcdir)/APPSPACK_GCI.cpp \
	$(srcdir)/APPSPACK_List.cpp \
	$(srcdir)/APPSPACK_Parameter_Entry.cpp \
	$(srcdir)/APPSPACK_Parameter_List.cpp \
	$(srcdir)/APPSPACK_Point.cpp \
	$(srcdir)/APPSPACK_Print.cpp \
	$(srcdir)/APPSPACK_Solver.cpp \
	$(srcdir)/APPSPACK_Utils.cpp \
	$(srcdir)/APPSPACK_Value.cpp \
	$(srcdir)/APPSPACK_Vector.cpp


# ------------------------------------------------------------------------
# Header files to install
# ------------------------------------------------------------------------
pkginclude_HEADERS = \
	$(srcdir)/APPSPACK_Cache_Manager.hpp \
	$(srcdir)/APPSPACK_Cache_Point.hpp \
	$(srcdir)/APPSPACK_Cache_SplayTree.hpp \
	$(srcdir)/APPSPACK_Common.hpp \
	$(srcdir)/APPSPACK_Constraints_Bounds.hpp \
	$(srcdir)/APPSPACK_Constraints_Interface.hpp \
	$(srcdir)/APPSPACK_Conveyor.hpp \
	$(srcdir)/APPSPACK_Counter.hpp \
	$(srcdir)/APPSPACK_Directions.hpp \
	$(srcdir)/APPSPACK_Evaluator_Interface.hpp \
	$(srcdir)/APPSPACK_Evaluator_SystemCall.hpp \
	$(srcdir)/APPSPACK_Executor_Interface.hpp \
	$(srcdir)/APPSPACK_Executor_Serial.hpp \
	$(srcdir)/APPSPACK_Executor_MPI.hpp \
	$(srcdir)/APPSPACK_GCI.hpp \
	$(srcdir)/APPSPACK_List.hpp \
	$(srcdir)/APPSPACK_Parameter_Entry.hpp \
	$(srcdir)/APPSPACK_Parameter_List.hpp \
	$(srcdir)/APPSPACK_Point.hpp \
	$(srcdir)/APPSPACK_Print.hpp \
	$(srcdir)/APPSPACK_Solver.hpp \
	$(srcdir)/APPSPACK_Utils.hpp \
	$(srcdir)/APPSPACK_Value.hpp \
	$(srcdir)/APPSPACK_Vector.hpp 


# ------------------------------------------------------------------------
# Extra files to distribute
# ------------------------------------------------------------------------
EXTRA_DIST = 

# ------------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# ------------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 
all: APPSPACK_Config.hpp
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

APPSPACK_Config.hpp: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/APPSPACK_Config.hpp.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/APPSPACK_Config.hpp
$(srcdir)/APPSPACK_Config.hpp.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f APPSPACK_Config.hpp stamp-h1
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkdir_p) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libappspack.a: $(libappspack_a_OBJECTS) $(libappspack_a_DEPENDENCIES) 
	-rm -f libappspack.a
	$(libappspack_a_AR) libappspack.a $(libappspack_a_OBJECTS) $(libappspack_a_LIBADD)
	$(RANLIB) libappspack.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkdir_p) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
appspack_mpi$(EXEEXT): $(appspack_mpi_OBJECTS) $(appspack_mpi_DEPENDENCIES) 
	@rm -f appspack_mpi$(EXEEXT)
	$(CXXLINK) $(appspack_mpi_LDFLAGS) $(appspack_mpi_OBJECTS) $(appspack_mpi_LDADD) $(LIBS)
appspack_serial$(EXEEXT): $(appspack_serial_OBJECTS) $(appspack_serial_DEPENDENCIES) 
	@rm -f appspack_serial$(EXEEXT)
	$(CXXLINK) $(appspack_serial_LDFLAGS) $(appspack_serial_OBJECTS) $(appspack_serial_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Cache_Manager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Cache_Point.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Constraints_Bounds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Conveyor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Counter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Directions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Executor_MPI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Executor_Serial.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_GCI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_List.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Main_MPI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Main_Serial.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Parameter_Entry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Parameter_List.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Point.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Solver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Value.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/APPSPACK_Vector.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

APPSPACK_Cache_Manager.o: $(srcdir)/APPSPACK_Cache_Manager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Cache_Manager.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Cache_Manager.Tpo" -c -o APPSPACK_Cache_Manager.o `test -f '$(srcdir)/APPSPACK_Cache_Manager.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Cache_Manager.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Cache_Manager.Tpo" "$(DEPDIR)/APPSPACK_Cache_Manager.Po"; else rm -f "$(DEPDIR)/APPSPACK_Cache_Manager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Cache_Manager.cpp' object='APPSPACK_Cache_Manager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Cache_Manager.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Cache_Manager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Cache_Manager.o `test -f '$(srcdir)/APPSPACK_Cache_Manager.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Cache_Manager.cpp

APPSPACK_Cache_Manager.obj: $(srcdir)/APPSPACK_Cache_Manager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Cache_Manager.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Cache_Manager.Tpo" -c -o APPSPACK_Cache_Manager.obj `if test -f '$(srcdir)/APPSPACK_Cache_Manager.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Cache_Manager.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Cache_Manager.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Cache_Manager.Tpo" "$(DEPDIR)/APPSPACK_Cache_Manager.Po"; else rm -f "$(DEPDIR)/APPSPACK_Cache_Manager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Cache_Manager.cpp' object='APPSPACK_Cache_Manager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Cache_Manager.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Cache_Manager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Cache_Manager.obj `if test -f '$(srcdir)/APPSPACK_Cache_Manager.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Cache_Manager.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Cache_Manager.cpp'; fi`

APPSPACK_Cache_Point.o: $(srcdir)/APPSPACK_Cache_Point.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Cache_Point.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Cache_Point.Tpo" -c -o APPSPACK_Cache_Point.o `test -f '$(srcdir)/APPSPACK_Cache_Point.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Cache_Point.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Cache_Point.Tpo" "$(DEPDIR)/APPSPACK_Cache_Point.Po"; else rm -f "$(DEPDIR)/APPSPACK_Cache_Point.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Cache_Point.cpp' object='APPSPACK_Cache_Point.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Cache_Point.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Cache_Point.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Cache_Point.o `test -f '$(srcdir)/APPSPACK_Cache_Point.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Cache_Point.cpp

APPSPACK_Cache_Point.obj: $(srcdir)/APPSPACK_Cache_Point.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Cache_Point.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Cache_Point.Tpo" -c -o APPSPACK_Cache_Point.obj `if test -f '$(srcdir)/APPSPACK_Cache_Point.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Cache_Point.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Cache_Point.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Cache_Point.Tpo" "$(DEPDIR)/APPSPACK_Cache_Point.Po"; else rm -f "$(DEPDIR)/APPSPACK_Cache_Point.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Cache_Point.cpp' object='APPSPACK_Cache_Point.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Cache_Point.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Cache_Point.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Cache_Point.obj `if test -f '$(srcdir)/APPSPACK_Cache_Point.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Cache_Point.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Cache_Point.cpp'; fi`

APPSPACK_Constraints_Bounds.o: $(srcdir)/APPSPACK_Constraints_Bounds.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Constraints_Bounds.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Constraints_Bounds.Tpo" -c -o APPSPACK_Constraints_Bounds.o `test -f '$(srcdir)/APPSPACK_Constraints_Bounds.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Constraints_Bounds.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Constraints_Bounds.Tpo" "$(DEPDIR)/APPSPACK_Constraints_Bounds.Po"; else rm -f "$(DEPDIR)/APPSPACK_Constraints_Bounds.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Constraints_Bounds.cpp' object='APPSPACK_Constraints_Bounds.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Constraints_Bounds.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Constraints_Bounds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Constraints_Bounds.o `test -f '$(srcdir)/APPSPACK_Constraints_Bounds.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Constraints_Bounds.cpp

APPSPACK_Constraints_Bounds.obj: $(srcdir)/APPSPACK_Constraints_Bounds.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Constraints_Bounds.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Constraints_Bounds.Tpo" -c -o APPSPACK_Constraints_Bounds.obj `if test -f '$(srcdir)/APPSPACK_Constraints_Bounds.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Constraints_Bounds.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Constraints_Bounds.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Constraints_Bounds.Tpo" "$(DEPDIR)/APPSPACK_Constraints_Bounds.Po"; else rm -f "$(DEPDIR)/APPSPACK_Constraints_Bounds.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Constraints_Bounds.cpp' object='APPSPACK_Constraints_Bounds.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Constraints_Bounds.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Constraints_Bounds.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Constraints_Bounds.obj `if test -f '$(srcdir)/APPSPACK_Constraints_Bounds.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Constraints_Bounds.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Constraints_Bounds.cpp'; fi`

APPSPACK_Conveyor.o: $(srcdir)/APPSPACK_Conveyor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Conveyor.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Conveyor.Tpo" -c -o APPSPACK_Conveyor.o `test -f '$(srcdir)/APPSPACK_Conveyor.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Conveyor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Conveyor.Tpo" "$(DEPDIR)/APPSPACK_Conveyor.Po"; else rm -f "$(DEPDIR)/APPSPACK_Conveyor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Conveyor.cpp' object='APPSPACK_Conveyor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Conveyor.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Conveyor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Conveyor.o `test -f '$(srcdir)/APPSPACK_Conveyor.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Conveyor.cpp

APPSPACK_Conveyor.obj: $(srcdir)/APPSPACK_Conveyor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Conveyor.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Conveyor.Tpo" -c -o APPSPACK_Conveyor.obj `if test -f '$(srcdir)/APPSPACK_Conveyor.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Conveyor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Conveyor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Conveyor.Tpo" "$(DEPDIR)/APPSPACK_Conveyor.Po"; else rm -f "$(DEPDIR)/APPSPACK_Conveyor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Conveyor.cpp' object='APPSPACK_Conveyor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Conveyor.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Conveyor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Conveyor.obj `if test -f '$(srcdir)/APPSPACK_Conveyor.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Conveyor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Conveyor.cpp'; fi`

APPSPACK_Counter.o: $(srcdir)/APPSPACK_Counter.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Counter.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Counter.Tpo" -c -o APPSPACK_Counter.o `test -f '$(srcdir)/APPSPACK_Counter.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Counter.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Counter.Tpo" "$(DEPDIR)/APPSPACK_Counter.Po"; else rm -f "$(DEPDIR)/APPSPACK_Counter.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Counter.cpp' object='APPSPACK_Counter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Counter.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Counter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Counter.o `test -f '$(srcdir)/APPSPACK_Counter.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Counter.cpp

APPSPACK_Counter.obj: $(srcdir)/APPSPACK_Counter.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Counter.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Counter.Tpo" -c -o APPSPACK_Counter.obj `if test -f '$(srcdir)/APPSPACK_Counter.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Counter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Counter.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Counter.Tpo" "$(DEPDIR)/APPSPACK_Counter.Po"; else rm -f "$(DEPDIR)/APPSPACK_Counter.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Counter.cpp' object='APPSPACK_Counter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Counter.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Counter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Counter.obj `if test -f '$(srcdir)/APPSPACK_Counter.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Counter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Counter.cpp'; fi`

APPSPACK_Directions.o: $(srcdir)/APPSPACK_Directions.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Directions.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Directions.Tpo" -c -o APPSPACK_Directions.o `test -f '$(srcdir)/APPSPACK_Directions.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Directions.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Directions.Tpo" "$(DEPDIR)/APPSPACK_Directions.Po"; else rm -f "$(DEPDIR)/APPSPACK_Directions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Directions.cpp' object='APPSPACK_Directions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Directions.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Directions.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Directions.o `test -f '$(srcdir)/APPSPACK_Directions.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Directions.cpp

APPSPACK_Directions.obj: $(srcdir)/APPSPACK_Directions.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Directions.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Directions.Tpo" -c -o APPSPACK_Directions.obj `if test -f '$(srcdir)/APPSPACK_Directions.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Directions.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Directions.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Directions.Tpo" "$(DEPDIR)/APPSPACK_Directions.Po"; else rm -f "$(DEPDIR)/APPSPACK_Directions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Directions.cpp' object='APPSPACK_Directions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Directions.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Directions.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Directions.obj `if test -f '$(srcdir)/APPSPACK_Directions.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Directions.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Directions.cpp'; fi`

APPSPACK_Evaluator_SystemCall.o: $(srcdir)/APPSPACK_Evaluator_SystemCall.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Evaluator_SystemCall.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Tpo" -c -o APPSPACK_Evaluator_SystemCall.o `test -f '$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Tpo" "$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Po"; else rm -f "$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp' object='APPSPACK_Evaluator_SystemCall.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Evaluator_SystemCall.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Evaluator_SystemCall.o `test -f '$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp

APPSPACK_Evaluator_SystemCall.obj: $(srcdir)/APPSPACK_Evaluator_SystemCall.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Evaluator_SystemCall.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Tpo" -c -o APPSPACK_Evaluator_SystemCall.obj `if test -f '$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Tpo" "$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Po"; else rm -f "$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp' object='APPSPACK_Evaluator_SystemCall.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Evaluator_SystemCall.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Evaluator_SystemCall.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Evaluator_SystemCall.obj `if test -f '$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Evaluator_SystemCall.cpp'; fi`

APPSPACK_Executor_Serial.o: $(srcdir)/APPSPACK_Executor_Serial.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Executor_Serial.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Executor_Serial.Tpo" -c -o APPSPACK_Executor_Serial.o `test -f '$(srcdir)/APPSPACK_Executor_Serial.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Executor_Serial.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Executor_Serial.Tpo" "$(DEPDIR)/APPSPACK_Executor_Serial.Po"; else rm -f "$(DEPDIR)/APPSPACK_Executor_Serial.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Executor_Serial.cpp' object='APPSPACK_Executor_Serial.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Executor_Serial.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Executor_Serial.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Executor_Serial.o `test -f '$(srcdir)/APPSPACK_Executor_Serial.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Executor_Serial.cpp

APPSPACK_Executor_Serial.obj: $(srcdir)/APPSPACK_Executor_Serial.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Executor_Serial.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Executor_Serial.Tpo" -c -o APPSPACK_Executor_Serial.obj `if test -f '$(srcdir)/APPSPACK_Executor_Serial.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Executor_Serial.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Executor_Serial.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Executor_Serial.Tpo" "$(DEPDIR)/APPSPACK_Executor_Serial.Po"; else rm -f "$(DEPDIR)/APPSPACK_Executor_Serial.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Executor_Serial.cpp' object='APPSPACK_Executor_Serial.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Executor_Serial.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Executor_Serial.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Executor_Serial.obj `if test -f '$(srcdir)/APPSPACK_Executor_Serial.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Executor_Serial.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Executor_Serial.cpp'; fi`

APPSPACK_Executor_MPI.o: $(srcdir)/APPSPACK_Executor_MPI.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Executor_MPI.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Executor_MPI.Tpo" -c -o APPSPACK_Executor_MPI.o `test -f '$(srcdir)/APPSPACK_Executor_MPI.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Executor_MPI.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Executor_MPI.Tpo" "$(DEPDIR)/APPSPACK_Executor_MPI.Po"; else rm -f "$(DEPDIR)/APPSPACK_Executor_MPI.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Executor_MPI.cpp' object='APPSPACK_Executor_MPI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Executor_MPI.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Executor_MPI.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Executor_MPI.o `test -f '$(srcdir)/APPSPACK_Executor_MPI.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Executor_MPI.cpp

APPSPACK_Executor_MPI.obj: $(srcdir)/APPSPACK_Executor_MPI.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Executor_MPI.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Executor_MPI.Tpo" -c -o APPSPACK_Executor_MPI.obj `if test -f '$(srcdir)/APPSPACK_Executor_MPI.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Executor_MPI.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Executor_MPI.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Executor_MPI.Tpo" "$(DEPDIR)/APPSPACK_Executor_MPI.Po"; else rm -f "$(DEPDIR)/APPSPACK_Executor_MPI.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Executor_MPI.cpp' object='APPSPACK_Executor_MPI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Executor_MPI.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Executor_MPI.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Executor_MPI.obj `if test -f '$(srcdir)/APPSPACK_Executor_MPI.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Executor_MPI.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Executor_MPI.cpp'; fi`

APPSPACK_GCI.o: $(srcdir)/APPSPACK_GCI.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_GCI.o -MD -MP -MF "$(DEPDIR)/APPSPACK_GCI.Tpo" -c -o APPSPACK_GCI.o `test -f '$(srcdir)/APPSPACK_GCI.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_GCI.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_GCI.Tpo" "$(DEPDIR)/APPSPACK_GCI.Po"; else rm -f "$(DEPDIR)/APPSPACK_GCI.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_GCI.cpp' object='APPSPACK_GCI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_GCI.Po' tmpdepfile='$(DEPDIR)/APPSPACK_GCI.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_GCI.o `test -f '$(srcdir)/APPSPACK_GCI.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_GCI.cpp

APPSPACK_GCI.obj: $(srcdir)/APPSPACK_GCI.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_GCI.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_GCI.Tpo" -c -o APPSPACK_GCI.obj `if test -f '$(srcdir)/APPSPACK_GCI.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_GCI.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_GCI.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_GCI.Tpo" "$(DEPDIR)/APPSPACK_GCI.Po"; else rm -f "$(DEPDIR)/APPSPACK_GCI.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_GCI.cpp' object='APPSPACK_GCI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_GCI.Po' tmpdepfile='$(DEPDIR)/APPSPACK_GCI.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_GCI.obj `if test -f '$(srcdir)/APPSPACK_GCI.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_GCI.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_GCI.cpp'; fi`

APPSPACK_List.o: $(srcdir)/APPSPACK_List.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_List.o -MD -MP -MF "$(DEPDIR)/APPSPACK_List.Tpo" -c -o APPSPACK_List.o `test -f '$(srcdir)/APPSPACK_List.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_List.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_List.Tpo" "$(DEPDIR)/APPSPACK_List.Po"; else rm -f "$(DEPDIR)/APPSPACK_List.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_List.cpp' object='APPSPACK_List.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_List.Po' tmpdepfile='$(DEPDIR)/APPSPACK_List.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_List.o `test -f '$(srcdir)/APPSPACK_List.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_List.cpp

APPSPACK_List.obj: $(srcdir)/APPSPACK_List.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_List.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_List.Tpo" -c -o APPSPACK_List.obj `if test -f '$(srcdir)/APPSPACK_List.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_List.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_List.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_List.Tpo" "$(DEPDIR)/APPSPACK_List.Po"; else rm -f "$(DEPDIR)/APPSPACK_List.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_List.cpp' object='APPSPACK_List.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_List.Po' tmpdepfile='$(DEPDIR)/APPSPACK_List.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_List.obj `if test -f '$(srcdir)/APPSPACK_List.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_List.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_List.cpp'; fi`

APPSPACK_Parameter_Entry.o: $(srcdir)/APPSPACK_Parameter_Entry.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Parameter_Entry.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Parameter_Entry.Tpo" -c -o APPSPACK_Parameter_Entry.o `test -f '$(srcdir)/APPSPACK_Parameter_Entry.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Parameter_Entry.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Parameter_Entry.Tpo" "$(DEPDIR)/APPSPACK_Parameter_Entry.Po"; else rm -f "$(DEPDIR)/APPSPACK_Parameter_Entry.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Parameter_Entry.cpp' object='APPSPACK_Parameter_Entry.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Parameter_Entry.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Parameter_Entry.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Parameter_Entry.o `test -f '$(srcdir)/APPSPACK_Parameter_Entry.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Parameter_Entry.cpp

APPSPACK_Parameter_Entry.obj: $(srcdir)/APPSPACK_Parameter_Entry.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Parameter_Entry.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Parameter_Entry.Tpo" -c -o APPSPACK_Parameter_Entry.obj `if test -f '$(srcdir)/APPSPACK_Parameter_Entry.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Parameter_Entry.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Parameter_Entry.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Parameter_Entry.Tpo" "$(DEPDIR)/APPSPACK_Parameter_Entry.Po"; else rm -f "$(DEPDIR)/APPSPACK_Parameter_Entry.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Parameter_Entry.cpp' object='APPSPACK_Parameter_Entry.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Parameter_Entry.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Parameter_Entry.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Parameter_Entry.obj `if test -f '$(srcdir)/APPSPACK_Parameter_Entry.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Parameter_Entry.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Parameter_Entry.cpp'; fi`

APPSPACK_Parameter_List.o: $(srcdir)/APPSPACK_Parameter_List.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Parameter_List.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Parameter_List.Tpo" -c -o APPSPACK_Parameter_List.o `test -f '$(srcdir)/APPSPACK_Parameter_List.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Parameter_List.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Parameter_List.Tpo" "$(DEPDIR)/APPSPACK_Parameter_List.Po"; else rm -f "$(DEPDIR)/APPSPACK_Parameter_List.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Parameter_List.cpp' object='APPSPACK_Parameter_List.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Parameter_List.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Parameter_List.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Parameter_List.o `test -f '$(srcdir)/APPSPACK_Parameter_List.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Parameter_List.cpp

APPSPACK_Parameter_List.obj: $(srcdir)/APPSPACK_Parameter_List.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Parameter_List.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Parameter_List.Tpo" -c -o APPSPACK_Parameter_List.obj `if test -f '$(srcdir)/APPSPACK_Parameter_List.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Parameter_List.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Parameter_List.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Parameter_List.Tpo" "$(DEPDIR)/APPSPACK_Parameter_List.Po"; else rm -f "$(DEPDIR)/APPSPACK_Parameter_List.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Parameter_List.cpp' object='APPSPACK_Parameter_List.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Parameter_List.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Parameter_List.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Parameter_List.obj `if test -f '$(srcdir)/APPSPACK_Parameter_List.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Parameter_List.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Parameter_List.cpp'; fi`

APPSPACK_Point.o: $(srcdir)/APPSPACK_Point.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Point.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Point.Tpo" -c -o APPSPACK_Point.o `test -f '$(srcdir)/APPSPACK_Point.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Point.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Point.Tpo" "$(DEPDIR)/APPSPACK_Point.Po"; else rm -f "$(DEPDIR)/APPSPACK_Point.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Point.cpp' object='APPSPACK_Point.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Point.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Point.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Point.o `test -f '$(srcdir)/APPSPACK_Point.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Point.cpp

APPSPACK_Point.obj: $(srcdir)/APPSPACK_Point.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Point.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Point.Tpo" -c -o APPSPACK_Point.obj `if test -f '$(srcdir)/APPSPACK_Point.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Point.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Point.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Point.Tpo" "$(DEPDIR)/APPSPACK_Point.Po"; else rm -f "$(DEPDIR)/APPSPACK_Point.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Point.cpp' object='APPSPACK_Point.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Point.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Point.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Point.obj `if test -f '$(srcdir)/APPSPACK_Point.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Point.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Point.cpp'; fi`

APPSPACK_Print.o: $(srcdir)/APPSPACK_Print.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Print.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Print.Tpo" -c -o APPSPACK_Print.o `test -f '$(srcdir)/APPSPACK_Print.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Print.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Print.Tpo" "$(DEPDIR)/APPSPACK_Print.Po"; else rm -f "$(DEPDIR)/APPSPACK_Print.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Print.cpp' object='APPSPACK_Print.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Print.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Print.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Print.o `test -f '$(srcdir)/APPSPACK_Print.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Print.cpp

APPSPACK_Print.obj: $(srcdir)/APPSPACK_Print.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Print.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Print.Tpo" -c -o APPSPACK_Print.obj `if test -f '$(srcdir)/APPSPACK_Print.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Print.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Print.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Print.Tpo" "$(DEPDIR)/APPSPACK_Print.Po"; else rm -f "$(DEPDIR)/APPSPACK_Print.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Print.cpp' object='APPSPACK_Print.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Print.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Print.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Print.obj `if test -f '$(srcdir)/APPSPACK_Print.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Print.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Print.cpp'; fi`

APPSPACK_Solver.o: $(srcdir)/APPSPACK_Solver.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Solver.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Solver.Tpo" -c -o APPSPACK_Solver.o `test -f '$(srcdir)/APPSPACK_Solver.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Solver.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Solver.Tpo" "$(DEPDIR)/APPSPACK_Solver.Po"; else rm -f "$(DEPDIR)/APPSPACK_Solver.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Solver.cpp' object='APPSPACK_Solver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Solver.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Solver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Solver.o `test -f '$(srcdir)/APPSPACK_Solver.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Solver.cpp

APPSPACK_Solver.obj: $(srcdir)/APPSPACK_Solver.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Solver.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Solver.Tpo" -c -o APPSPACK_Solver.obj `if test -f '$(srcdir)/APPSPACK_Solver.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Solver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Solver.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Solver.Tpo" "$(DEPDIR)/APPSPACK_Solver.Po"; else rm -f "$(DEPDIR)/APPSPACK_Solver.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Solver.cpp' object='APPSPACK_Solver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Solver.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Solver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Solver.obj `if test -f '$(srcdir)/APPSPACK_Solver.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Solver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Solver.cpp'; fi`

APPSPACK_Utils.o: $(srcdir)/APPSPACK_Utils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Utils.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Utils.Tpo" -c -o APPSPACK_Utils.o `test -f '$(srcdir)/APPSPACK_Utils.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Utils.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Utils.Tpo" "$(DEPDIR)/APPSPACK_Utils.Po"; else rm -f "$(DEPDIR)/APPSPACK_Utils.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Utils.cpp' object='APPSPACK_Utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Utils.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Utils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Utils.o `test -f '$(srcdir)/APPSPACK_Utils.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Utils.cpp

APPSPACK_Utils.obj: $(srcdir)/APPSPACK_Utils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Utils.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Utils.Tpo" -c -o APPSPACK_Utils.obj `if test -f '$(srcdir)/APPSPACK_Utils.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Utils.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Utils.Tpo" "$(DEPDIR)/APPSPACK_Utils.Po"; else rm -f "$(DEPDIR)/APPSPACK_Utils.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Utils.cpp' object='APPSPACK_Utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Utils.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Utils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Utils.obj `if test -f '$(srcdir)/APPSPACK_Utils.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Utils.cpp'; fi`

APPSPACK_Value.o: $(srcdir)/APPSPACK_Value.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Value.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Value.Tpo" -c -o APPSPACK_Value.o `test -f '$(srcdir)/APPSPACK_Value.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Value.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Value.Tpo" "$(DEPDIR)/APPSPACK_Value.Po"; else rm -f "$(DEPDIR)/APPSPACK_Value.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Value.cpp' object='APPSPACK_Value.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Value.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Value.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Value.o `test -f '$(srcdir)/APPSPACK_Value.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Value.cpp

APPSPACK_Value.obj: $(srcdir)/APPSPACK_Value.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Value.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Value.Tpo" -c -o APPSPACK_Value.obj `if test -f '$(srcdir)/APPSPACK_Value.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Value.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Value.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Value.Tpo" "$(DEPDIR)/APPSPACK_Value.Po"; else rm -f "$(DEPDIR)/APPSPACK_Value.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Value.cpp' object='APPSPACK_Value.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Value.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Value.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Value.obj `if test -f '$(srcdir)/APPSPACK_Value.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Value.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Value.cpp'; fi`

APPSPACK_Vector.o: $(srcdir)/APPSPACK_Vector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Vector.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Vector.Tpo" -c -o APPSPACK_Vector.o `test -f '$(srcdir)/APPSPACK_Vector.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Vector.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Vector.Tpo" "$(DEPDIR)/APPSPACK_Vector.Po"; else rm -f "$(DEPDIR)/APPSPACK_Vector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Vector.cpp' object='APPSPACK_Vector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Vector.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Vector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Vector.o `test -f '$(srcdir)/APPSPACK_Vector.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Vector.cpp

APPSPACK_Vector.obj: $(srcdir)/APPSPACK_Vector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Vector.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Vector.Tpo" -c -o APPSPACK_Vector.obj `if test -f '$(srcdir)/APPSPACK_Vector.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Vector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Vector.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Vector.Tpo" "$(DEPDIR)/APPSPACK_Vector.Po"; else rm -f "$(DEPDIR)/APPSPACK_Vector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Vector.cpp' object='APPSPACK_Vector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Vector.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Vector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Vector.obj `if test -f '$(srcdir)/APPSPACK_Vector.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Vector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Vector.cpp'; fi`

APPSPACK_Main_MPI.o: $(srcdir)/APPSPACK_Main_MPI.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Main_MPI.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Main_MPI.Tpo" -c -o APPSPACK_Main_MPI.o `test -f '$(srcdir)/APPSPACK_Main_MPI.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Main_MPI.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Main_MPI.Tpo" "$(DEPDIR)/APPSPACK_Main_MPI.Po"; else rm -f "$(DEPDIR)/APPSPACK_Main_MPI.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Main_MPI.cpp' object='APPSPACK_Main_MPI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Main_MPI.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Main_MPI.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Main_MPI.o `test -f '$(srcdir)/APPSPACK_Main_MPI.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Main_MPI.cpp

APPSPACK_Main_MPI.obj: $(srcdir)/APPSPACK_Main_MPI.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Main_MPI.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Main_MPI.Tpo" -c -o APPSPACK_Main_MPI.obj `if test -f '$(srcdir)/APPSPACK_Main_MPI.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Main_MPI.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Main_MPI.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Main_MPI.Tpo" "$(DEPDIR)/APPSPACK_Main_MPI.Po"; else rm -f "$(DEPDIR)/APPSPACK_Main_MPI.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Main_MPI.cpp' object='APPSPACK_Main_MPI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Main_MPI.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Main_MPI.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Main_MPI.obj `if test -f '$(srcdir)/APPSPACK_Main_MPI.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Main_MPI.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Main_MPI.cpp'; fi`

APPSPACK_Main_Serial.o: $(srcdir)/APPSPACK_Main_Serial.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Main_Serial.o -MD -MP -MF "$(DEPDIR)/APPSPACK_Main_Serial.Tpo" -c -o APPSPACK_Main_Serial.o `test -f '$(srcdir)/APPSPACK_Main_Serial.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Main_Serial.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Main_Serial.Tpo" "$(DEPDIR)/APPSPACK_Main_Serial.Po"; else rm -f "$(DEPDIR)/APPSPACK_Main_Serial.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Main_Serial.cpp' object='APPSPACK_Main_Serial.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Main_Serial.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Main_Serial.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Main_Serial.o `test -f '$(srcdir)/APPSPACK_Main_Serial.cpp' || echo '$(srcdir)/'`$(srcdir)/APPSPACK_Main_Serial.cpp

APPSPACK_Main_Serial.obj: $(srcdir)/APPSPACK_Main_Serial.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT APPSPACK_Main_Serial.obj -MD -MP -MF "$(DEPDIR)/APPSPACK_Main_Serial.Tpo" -c -o APPSPACK_Main_Serial.obj `if test -f '$(srcdir)/APPSPACK_Main_Serial.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Main_Serial.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Main_Serial.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/APPSPACK_Main_Serial.Tpo" "$(DEPDIR)/APPSPACK_Main_Serial.Po"; else rm -f "$(DEPDIR)/APPSPACK_Main_Serial.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/APPSPACK_Main_Serial.cpp' object='APPSPACK_Main_Serial.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/APPSPACK_Main_Serial.Po' tmpdepfile='$(DEPDIR)/APPSPACK_Main_Serial.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o APPSPACK_Main_Serial.obj `if test -f '$(srcdir)/APPSPACK_Main_Serial.cpp'; then $(CYGPATH_W) '$(srcdir)/APPSPACK_Main_Serial.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/APPSPACK_Main_Serial.cpp'; fi`
uninstall-info-am:
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkdir_p) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) APPSPACK_Config.hpp.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) APPSPACK_Config.hpp.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) APPSPACK_Config.hpp.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) APPSPACK_Config.hpp.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS) \
		APPSPACK_Config.hpp
installdirs:
	$(mkdir_p) $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) $(DESTDIR)$(pkgincludedir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-pkgincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLIBRARIES install-man \
	install-pkgincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-pkgincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
