LV = function lv_grid(varargin);
%lv_grid Creates a Lorentz vertical grid with 
% Input:  KK
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  The data structure contains
%    KK           the number of layers
%    zk   -  the KK layer coordinates dividing (0,1) into layers( k=1,KK)
%    zh   -  the KK+1 surface coordinates with half indexing from 1/2 to KK+1/2
%    zdot -  time derivative of surface coordinate
%    P    -  hydrostatic pressure at surfaces
% 

switch nargin
case 0 
% no input arguments so create a default component
 LV.KK     = 0;
 LV.zk     = [];
 LV.zh     = [];
 LV.zdot   = [];
 LV.P      = [];
 LV = class(LV,'LorentzV_grid');
case 1
% one input argument so initialize name and other variables
 LV.KK  = varargin{1};
 KK = LV.KK;
 %Fill the coordinate arrays
 h = 1/KK;
 LV.zh = (0:KK)'*h;   % surface coordinates evenly spaced
 % define layer coordinates as average between surface coordinates
 LV.zk = zeros(KK);
 for k = 1:KK
     LV.zk(k)= 0.5*(LV.zh(k) + LV.zh(k+1));
 end
 LV.zdot = zeros(KK+1);
 LV = class(LV,'LorentzV_grid');
otherwise
 error('Wrong number of input arguments to LorentzV_grid class constructor')
end
