.TH ISANAN 3 "10 June 2000" "Version 1.00"
.\" WARNING: This file was produced automatically from file common/isanan.f
.\" by fortran-to-man-page.awk on Sun Dec 31 09:02:14 MST 2000.
.\" Any manual changes will be lost if this file is regenerated!
.SH NAME
isanan \- Is single-precision x a NaN?
.\"=====================================================================
.SH SYNOPSIS
Fortran (77, 90, 95, HPF):
.RS
.B f77
.I "[ flags ] file(s) .\|.\|. -L/usr/local/lib -lgjl"
.RS
.nf
.B "LOGICAL FUNCTION isanan(x)"
.B "REAL                x"
.fi
.RE
.RE
C (K&R, 89, 99), C++ (98):
.RS
.B cc
.I "[ flags ] -I/usr/local/include file(s) .\|.\|. -L/usr/local/lib -lgjl"
.br
Use
.RS
.B "#include <gampsi.h>"
.RE
to get this prototype:
.RS
.B "fortran_logical isanan(const fortran_real * x_);"
.RE
.RE
.PP
NB: The definition of C/C++ data types
.B fortran_
.IR xxx ,
and the mapping of Fortran external names to C/C++ external names,
is handled by the C/C++ header file.  That way, the same function
or subroutine name can be used in C, C++, and Fortran code,
independent of compiler conventions for mangling of external
names in these programming languages.
.PP
Last code modification: 10-Jun-2000
.\"=====================================================================
.SH DESCRIPTION
Return .TRUE. if \fBx\fP\& is a NaN, and .FALSE. otherwise.
.PP
This function should be implementable as a simple inline test
for inequality of \fBx\fP\& with itself:
.PP
.RS
.nf
\fBisanan\fP\& = (\fBx\fP\& .ne. \fBx\fP\&)
.fi
.RE
.PP
in ALL compilers for ALL programming languages on ALL systems
with IEEE 754 arithmetic.
.PP
Unfortunately, some compilers, even without optimization,
incorrectly reduce this test to .FALSE. This happens with all
optimization levels on SGI IRIX 6.\fBx\fP\& f77 and f90 compilers.
Thus, we have to obfuscate the test by wrapping one operand in
a function call. This successfully foiled the SGI compilers,
without requiring disassembly and examination of the bit
patterns of \fBx\fP\&.
.\"=====================================================================
.SH "SEE ALSO"
.BR anan (3),
.BR dnan (3),
.BR isdnan (3),
.BR isqnan (3),
.BR qnan (3).
.\"=====================================================================
.SH AUTHORS
The algorithms and code are described in detail in
the paper
.RS
.I "Algorithm xxx: Quadruple-Precision Gamma(x) and psi(x) Functions for Real Arguments"
.RE
in ACM Transactions on Mathematical Software,
Volume ??, Number ??, Pages ????--???? and
????--????, 2001, by
.RS
.nf
Nelson H. F. Beebe
Center for Scientific Computing
University of Utah
Department of Mathematics, 110 LCB
155 S 1400 E RM 233
Salt Lake City, UT 84112-0090
Tel: +1 801 581 5254
FAX: +1 801 581 4148
Email: \fCbeebe@math.utah.edu\fP, \fCbeebe@acm.org\fP, \fCbeebe@computer.org\fP
WWW URL: \fChttp://www.math.utah.edu/~beebe\fP
.fi
.RE
and
.RS
.nf
James S. Ball
University of Utah
Department of Physics
Salt Lake City, UT 84112-0830
USA
Tel: +1 801 581 8397
FAX: +1 801 581 6256
Email: \fCball@physics.utah.edu\fP
WWW URL: \fChttp://www.physics.utah.edu/people/faculty/ball.html\fP
.fi
.RE
.\"==============================[The End]==============================
.\"=====================================================================
.\" This is for GNU Emacs file-specific customization:
.\" Local Variables:
.\" fill-column: 50
.\" End:
