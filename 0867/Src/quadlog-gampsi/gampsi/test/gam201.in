Gamma
1000
1
-31 -20
0 2147483647
8.40525785778023376565669454330438231589208829186930e-4933 
1755.5483429044629170038892160702033617807855330336e+00
0 0
************************************************************************
*     xrange = 2146602755.0 * 2^(-31) .. 724915882.0 * 2^(-20)
*            = 0.99959  ..  691.334
*
*     In IEEE-754 floating-point arithmetic, the largest
*     quadruple-precision number is about 1.18e+4932.  IBM RS/6000 AIX
*     and SGI quadruple-precision formats limit this to about the same
*     value as in double precision, 1.79e+308.
*
*     For x > 0, Gamma(x) decreases from +infinity at x = 0 to a minimum
*     at x = xlow, where xlow is between 1 and 2, and then increases
*     monotonically toward +infinity for x > xlow.
*
*     The minimum occurs when the derivative of Gamma(x) with respect to
*     x is zero, and can be found by this simple Maple V program, using
*     the fact that the zero derivative occurs where the psi() function
*     (i.e., the derivative of ln(Gamma(x)) with respect to x) is zero:
*
*         Digits := 50;
*         fsolve(Psi(x) = 0, x);
*             1.4616321449683623412626595423257213284681962040064
*         GAMMA(%)
*             0.88560319441088870027881590058258873320795153366990
*
*     For x > xlow, Gamma(x) increases uniformly towards infinity.  To
*     find the largest and smallest positive arguments of Gamma(x)
*     producing a representable result, use this simple Maple V program:
*
*         # DEC, HP, IBM S/390 IEEE 754, Sun:
*         xinf := (1 - 2^(-113)) * 2^(16384);
*             1.1897314953572317650857593266280070161964690526417e+4932
*         xmax := evalf(fsolve(GAMMA(x) = xinf, x, 1755..1756));
*             1755.5483429044629170038892160702033617807855330336
*         xmin := evalf(fsolve(GAMMA(x) = xinf, x, 0 .. 1.0e-4930));
*             8.40525785778023376565669454330438231589208829186930e-4933
*
*         # IBM RS/6000, SGI:
*         xinf := (2 - 2^(-53)) * 2^1023;
*             1.7976931348623158079372897e+308
*         xmax := evalf(fsolve(GAMMA(x) = xinf, x, 170..175));
*             171.62437695630272080164956763112001049938379858174
*         xmin := evalf(fsolve(GAMMA(x) = xinf, x, 0 .. 1.0e-307));
*             5.56268464626800376651661044411011741224902578286180e-309
*
*     A similar request in Mathematica 3 failed:
*
*        In[27]:= Assume[x > 0]
*        In[29]:= FindRoot[Gamma[x] == 0.1797693134862315*^309, {x,170}]
*        FindRoot::cvnwt:
*          Newtons method failed to converge to the prescribed accuracy
*          after 15 iterations.
*        Out[29]= {x -> 171.624}
*
************************************************************************
