C--**--CH2919--705--P:FIX--28:10:1999
C--**--CH2910--705--P:LAP--28:10:1999
C--**--CH2896--705--B:FIX--28:10:1999
C--**--CH2887--705--B:MA--28:10:1999
C--**--CH2865--705--A:H--28:10:1999
C--**--CH2859--705--P:RW--28:10:1999
C     -- PROGRAM TSYLGF --
C
C     THIS PROGRAM TESTS THE SOFTWARE FOR SOLVING THE GENERAL
C     SYLVESTER EQUATION
C
C        A * X * B' +  C * X * D' =  E    (' DENOTES TRANSPOSE)
C
C     READING THE COEFFICIENT MATRICES FROM A FILE.
C
C     THE SOLUTION IS CHECKED BY COMPUTING THE RESIDUAL AND ITS RELATIVE
C     1-NORM.  THE CONDITION ESTIMATE IS CHECKED FOR SMALL SYSTEMS ONLY
C     (M*N <= 40) BY FORMING THE KRONECKER PRODUCT MATRIX AND COMPUTING
C     ITS SINGULAR VALUE DECOMPOSITION.
C
C     INPUT FILE FORMAT (SEE EXAMPLE FILE TEST1.IN):
C       INPUT IS FREE FORMAT; MATRICES ARE READ BY ROWS.
C       DIMENSIONS M AND N (INTEGER)
C       A; EACH ROW MUST BEGIN ON A NEW LINE AND MAY TAKE AS MANY LINES
C       AS NECESSARY.
C       B; C; D; E; SAME COMMENT.
C
C     SUBROUTINES AND FUNCTIONS CALLED -
C       SYLG; (LINPACK) DSVDC;
C       (MATU) MSAVE, D1NRM, MSUB, MULC, TRNATA
C
C     WRITTEN -
C       12DEC90 J. GARDINER, OSU CIS, COLUMBUS, OH  43210  (614)292-8658
C
C     -- MAXIMUM M IS 9, MAXIMUM N IS 8 --
      INTEGER NAC, NBD, NE, NW, M, N, IERR
      INTEGER MMAX, NMAX, MNMAX, WRKLEN, MAXSVD
      PARAMETER (MMAX=9, NMAX=8, MNMAX=9, MAXSVD=40,
     +  WRKLEN = 2*MMAX*MMAX+NMAX*NMAX+NMAX*MMAX+7*MMAX+MNMAX*MNMAX)
      DOUBLE PRECISION A0(MMAX,MMAX), B0(NMAX,NMAX), C0(MMAX,MMAX),
     +                 D0(NMAX,NMAX), E0(MMAX,NMAX)
      DOUBLE PRECISION A1(MMAX,MMAX), B1(NMAX,NMAX), C1(MMAX,MMAX),
     +                 D1(NMAX,NMAX), E1(MMAX,NMAX)
      DOUBLE PRECISION WKM1(MMAX,MMAX), WKM2(NMAX,NMAX), 
     +                 WRKSVD(MAXSVD,MAXSVD), WKV(WRKLEN)
      INTEGER IWKV(2*MMAX)
C
      INTEGER I, J, II, JJ, INDX, JNDX, MXN
      INTEGER IDMY
      DOUBLE PRECISION NRMR, NRME, RCOND, RCDSVD
      DOUBLE PRECISION DUMY(1), RATIO
      DOUBLE PRECISION D1NRM
C     CHARACTER*20 INNAME, OUTNAM
      CHARACTER YESNO
C
      NAC = MMAX
      NBD = NMAX
      NE = MMAX
      NW = NMAX
C
C     -- INITIALIZE --
      WRITE(*,90000)
      WRITE(*,90001)
90000 FORMAT("             T        T")
C
C      WRITE(*,91002)
C91002 FORMAT(/' ENTER NAME OF FILE CONTAINING COEFFICIENT MATRICES ')
C      READ(5,91003) INNAME
C91003 FORMAT(A)
C      OPEN(2,FILE=INNAME)
C      WRITE(*,91004)
C91004 FORMAT(/' ENTER NAME OF FILE FOR OUTPUT OF SOLUTION MATRIX')
C      READ(5,91003) OUTNAM
C      OPEN(3,FILE=OUTNAM)
C
C     -- READ COEFFICIENT MATRICES --
90001 FORMAT(" SOLVE  A*X*B  + C*X*D  = E  USING SYLG")
      READ(*,*) M, N
      IF (M .GT. NAC  .OR.  N .GT. NBD) THEN
         WRITE(*,91005) M, N, NAC, NBD
91005    FORMAT(/' DIMENSION OF PROBLEM IS TOO LARGE:  M =',I2,', N =', 
     +         I2 / ' MAXIMUM:  M =',I2,', N =',I2)
         STOP
      ENDIF
      WRITE(*,91008) M, N
C
91008 FORMAT(/' M =',I2,', N =',I2)
      DO 201 I=1,M
         READ(*,*)(A0(I,J),J=1,M)
 201  CONTINUE
      DO 202 I=1,N
         READ(*,*)(B0(I,J),J=1,N)
 202  CONTINUE
      DO 203 I=1,M
         READ(*,*)(C0(I,J),J=1,M)
 203  CONTINUE
      DO 204 I=1,N
         READ(*,*)(D0(I,J),J=1,N)
 204  CONTINUE
      DO 205 I=1,M
         READ(*,*)(E0(I,J),J=1,N)
 205  CONTINUE
C
C        -- SAVE A COPY --
         CALL MSAVE(NAC, NAC, M, M, A0, A1)
         CALL MSAVE(NAC, NAC, M, M, C0, C1)
         CALL MSAVE(NBD, NBD, N, N, B0, B1)
         CALL MSAVE(NBD, NBD, N, N, D0, D1)
         CALL MSAVE(NE, NE, M, N, E0, E1)
C
C        -- COMPUTE NORM OF E --
         NRME = D1NRM(NE, M, N, E0)
C
C        -- COMPUTE SOLUTION AND ESTIMATE CONDITION
         IERR = 1
         CALL SYLG(NAC, NBD, NE, M, N, A0, B0, C0, D0, E0, WKV, IWKV,
     *             IERR, RCOND)
         IF (IERR .NE. 0) THEN
            WRITE(*,90003) IERR
90003       FORMAT(" ERROR FROM SYLG, IERR=", I2)
         ENDIF
C
C        -- SAVE SOLUTION --
         DO 301 I=1,M
            WRITE(*,92001) (E0(I,J),J=1,N)
92001       FORMAT(1X,6E12.4)
 301     CONTINUE
C
C        -- COMPUTE RESIDUAL --
         CALL MULC(NAC, NE, NW, M, M, N, A1, E0, WKM1)
         CALL TRNATA(NBD, N, B1)
         CALL MULC(NW, NBD, NW, M, N, N, WKM1, B1, WKM2)
         CALL TRNATA(NBD, N, B1)
         CALL MSUB(NE, NW, NE, M, N, E1, WKM2, E1)
         CALL MULC(NAC, NE, NW, M, M, N, C1, E0, WKM1)
         CALL TRNATA(NBD, N, D1)
         CALL MULC(NW, NBD, NW, M, N, N, WKM1, D1, WKM2)
         CALL TRNATA(NBD, N, D1)
         CALL MSUB(NE, NW, NE, M, N, E1, WKM2, E1)
C
C        -- COMPUTE NORM OF RESIDUAL --
         NRMR = D1NRM(NE, M, N, E1) / NRME
C
C        -- PRINT RESULTS --
         WRITE(*,90002) NRMR, RCOND
C
C     -- COMPUTE REAL CONDITION NUMBER IF REQUESTED --
90002    FORMAT(1X, '  (NRM RESID)/(NRM E)=', E10.3,          '  RCOND(E
     +ST)=', E10.3)
      MXN = M*N
      IF (MXN .LE. MAXSVD) THEN
         WRITE(*,91006)
91006    FORMAT(/' DO YOU WISH TO HAVE THE ACTUAL CONDITION NUMBER',    
     +      ' COMPUTED? (Y OR N) ')
         READ(5,*)YESNO
         IF (YESNO .EQ. 'y'  .OR.  YESNO .EQ. 'Y') THEN
            DO 40 J = 1,N
               DO 30 JJ = 1,M
                  DO 20 I = 1,N
                     DO 10 II = 1,M
                        INDX = M*(I-1) + II
                        JNDX = M*(J-1) + JJ
                        WRKSVD(INDX,JNDX) = A1(II,JJ)*B1(I,J)
     *                                    + C1(II,JJ)*D1(I,J)
   10                CONTINUE
   20             CONTINUE
   30          CONTINUE
   40       CONTINUE
            IDMY = 1
            CALL DSVDC(WRKSVD, MAXSVD, MXN, MXN, WKV, WKV(MXN+1), DUMY,
     *                 IDMY, DUMY, IDMY, WKM1, 00, IERR)
            IF (IERR .NE. 0) THEN
               WRITE(*,90006)
90006          FORMAT(" SVD FAILED")
               RCDSVD = 0.0D0
            ELSE
               RCDSVD = WKV(MXN) / WKV(1)
            ENDIF
            RATIO = RCOND / RCDSVD
C
            WRITE(*,90007) RCDSVD, RATIO
90007       FORMAT(1X, '  RCOND(TRUE)=', E10.3, ' EST/TRUE=', E10.3)
         ENDIF
      ENDIF
C
      CLOSE(2)
      CLOSE(3)
      STOP
C --- LAST LINE OF TSYLGF ---
      END
