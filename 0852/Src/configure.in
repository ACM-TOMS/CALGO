dnl /****************************************************************************
dnl  * RealPaver v. 0.4                                                         *
dnl  *--------------------------------------------------------------------------*
dnl  * Author: Laurent Granvilliers                                             *
dnl  * Copyright (c) 1999-2003 Institut de Recherche en Informatique de Nantes  *
dnl  * Copyright (c) 2004      Laboratoire d'Informatique de Nantes Atlantique  *
dnl  *--------------------------------------------------------------------------*
dnl  * RealPaver is distributed WITHOUT ANY WARRANTY. Read the associated       *
dnl  * COPYRIGHT file for more details.                                         *
dnl  *--------------------------------------------------------------------------*
dnl  * configure.in                                                             *
dnl  ****************************************************************************/


AC_INIT(src/constraint.h)
AM_INIT_AUTOMAKE(realpaver, 0.4)
AM_CONFIG_HEADER(src/config.h)
AC_PREREQ(1.8)

AC_DEFINE(SOFTWARE_NAME,"RealPaver",[Define the name of the software])


dnl -----------------------------------------------------------------------------------------
dnl Debugging and Profiling options
dnl -----------------------------------------------------------------------------------------
AC_ARG_ENABLE(debug, [  --enable-debug    ** debugging mode],enabledebug=yes,enabledebug=no)
AC_ARG_ENABLE(profile, [  --enable-profile  ** profiling mode],enableprofile=yes,enableprofile=no)

if test $enabledebug = yes; then
   CFLAGS="-O0 -g"
   AC_DEFINE(SOFTWARE_DEBUG,1,
      [Define this to 1 to use the embedded debugging facilities.])
else
   CFLAGS="-O2 -ffloat-store -funroll-loops"
   AC_DEFINE(SOFTWARE_DEBUG,0,
      [Define this to 1 to use the embedded debugging facilities.])
fi

if test $enableprofile = yes; then
   AC_DEFINE(SOFTWARE_PROFILE,1,
      [Define this to 1 to use the embedded profiling facilities.])
else
   AC_DEFINE(SOFTWARE_PROFILE,0,
      [Define this to 1 to use the embedded profiling facilities.])
fi


echo
echo "-----------------------------------------------------------"
echo "Configuration of RealPaver v. 0.4                          "
echo "by Laurent Granvilliers                                    "
echo "(c) IRIN, France, 1999-2003                                "
echo "(c) LINA, France, 2004                                     "
echo "***********************************************************"
echo "RealPaver is distributed WITHOUT ANY WARRANTY.             "
echo "Read the associated COPYRIGHT for more details.            "
echo "***********************************************************"
echo "Options:                                                   "
echo "   >> debugging mode: $enabledebug                         "
echo "   >> profiling mode: $enableprofile                       "
echo "-----------------------------------------------------------"
echo


dnl -------------------------------------------------------------------------
dnl Compiler, language,lexical analyser, parser
dnl -------------------------------------------------------------------------

AC_PROG_CC
AC_PROG_CPP
AC_C_INLINE
AC_LANG_C
AC_PROG_YACC
AM_PROG_LEX
AC_PROG_INSTALL


dnl -------------------------------------------------------------------------
dnl Headers and libraries for all systems
dnl -------------------------------------------------------------------------

MATH_LIB=-lm

AC_CHECK_HEADER(time.h,time_found=yes,time_found=no)
if test $time_found = no; then
	AC_MSG_ERROR(Fatal: time.h not found.)
fi

AC_CHECK_HEADER(sys/resource.h,sys_resource_found=yes,sys_resource_found=no)
if test $sys_resource_found = no; then
	AC_MSG_ERROR(Fatal: sys/resource.h not found.)
fi

AC_CHECK_HEADER(string.h,string_found=yes,string_found=no)
if test $string_found = no; then
	AC_MSG_ERROR(Fatal: string.h not found.)
fi

AC_CHECK_HEADER(ctype.h,ctype_found=yes,ctype_found=no)
if test $ctype_found = no; then
	AC_MSG_ERROR(Fatal: ctype.h not found.)
fi


dnl -------------------------------------------------------------------------
dnl Options for specific systems
dnl -------------------------------------------------------------------------

AC_CANONICAL_HOST

case "$host" in
i?86-*-linux*)
   AC_DEFINE(SYSTEM_LINUX_IX86,1,
        [Define this if your system is a Linux based PC.])

   CFLAGS="$CFLAGS -malign-double"

   AC_CHECK_HEADER(values.h,values_found=yes,values_found=no)
   if test $values_found = no; then
	AC_MSG_ERROR(Fatal: values.h not found.)
   fi

   AC_CHECK_HEADER(fenv.h,fenv_found=yes,fenv_found=no)
   if test $fenv_found = no; then
	AC_MSG_ERROR(Fatal: fenv.h not found.)
   fi

   AC_TRY_COMPILE(, fesetround(0), fesetround_found=yes,fesetround_found=no)
   if test $fesetround_found = no; then
 	AC_MSG_ERROR(Fatal: function fesetround not found.)
   else
	AC_MSG_RESULT(checking for function fesetround... yes)
   fi
   ;;

sparc*)
   AC_DEFINE(SYSTEM_SPARC,1,
        [Define this if your system is a SPARC based.])

   AC_CHECK_HEADER(floatingpoint.h,floatingpoint_found=yes,floatingpoint_found=no)
   if test $floatingpoint_found = no; then
	AC_MSG_ERROR(Fatal: floatingpoint.h not found.)
   fi

   AC_CHECK_HEADER(sys/ieeefp.h,sys_ieeefp_found=yes,sys_ieeefp_found=no)
   if test $sys_ieeefp_found = no; then
	AC_MSG_ERROR(Fatal: sys/ieeefp.h not found.)
   fi
   ;;

mips-sgi-irix*)
   AC_DEFINE(SYSTEM_SGI,1,
        [Define this if your system is a SGI based.])

   AC_CHECK_HEADER(float.h,float_found=yes,float_found=no)
   if test $float_found = no; then
	AC_MSG_ERROR(Fatal: float.h not found.)
   fi

   AC_CHECK_HEADER(ieeefp.h,ieeefp_found=yes,ieeefp_found=no)
   if test $ieeefp_found = no; then
	AC_MSG_ERROR(Fatal: ieeefp.h not found.)
   fi
   ;;

*)
   AC_MSG_ERROR(Sorry, this architecture is not supported by RealPaver...)
   ;;
esac


AC_SUBST(CFLAGS)
AC_SUBST(MATH_LIB)

AC_OUTPUT([Makefile src/Makefile])

echo
echo ------------------------------------------------------------------
echo Configuration complete. Run GNU Make [gmake] to compile RealPaver.
echo ------------------------------------------------------------------
echo
