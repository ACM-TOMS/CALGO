/* config.h.in.  Generated from configure.ac by autoheader.  */

/* Define if avx2 instructions are supported */
#undef HAVE_AVX2_INSTRUCTIONS

/* Define if avx512f instructions are supported */
#undef HAVE_AVX512F_INSTRUCTIONS

/* Define if avx instructions are supported */
#undef HAVE_AVX_INSTRUCTIONS

/* Define if bmi2 instructions are supported */
#undef HAVE_BMI2_INSTRUCTIONS

/* Define if bmi instructions are supported */
#undef HAVE_BMI_INSTRUCTIONS

/* Define if fma4 instructions are supported */
#undef HAVE_FMA4_INSTRUCTIONS

/* Define if fma instructions are supported */
#undef HAVE_FMA_INSTRUCTIONS

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if your system has a GNU libc compatible `malloc' function, and
   to 0 otherwise. */
#undef HAVE_MALLOC

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define if mmx instructions are supported */
#undef HAVE_MMX_INSTRUCTIONS

/* Define if popcnt instructions are supported */
#undef HAVE_POPCNT_INSTRUCTIONS

/* Define if sse2 instructions are supported */
#undef HAVE_SSE2_INSTRUCTIONS

/* Define if sse3 instructions are supported */
#undef HAVE_SSE3_INSTRUCTIONS

/* Define if sse4a instructions are supported */
#undef HAVE_SSE4A_INSTRUCTIONS

/* Define if sse4.1 instructions are supported */
#undef HAVE_SSE4_1_INSTRUCTIONS

/* Define if sse4.2 instructions are supported */
#undef HAVE_SSE4_2_INSTRUCTIONS

/* Define if sse instructions are supported */
#undef HAVE_SSE_INSTRUCTIONS

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to 1 if you have the <x86intrin.h> header file. */
#undef HAVE_X86INTRIN_H

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* "Automatic vectorization support was automatically detected and set to
   AVX2" */
#undef USE_AVX2

/* "Automatic vectorization support was automatically detected and set to
   AVX512" */
#undef USE_AVX512

/* "Automatic vectorization support was automatically detected and set to
   SSE2" */
#undef USE_SSE

/* "Automatic vectorization support was requested by user" */
#undef USE_VECTORIZATION

/* Version number of package */
#undef VERSION

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#undef _UINT32_T

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#undef _UINT64_T

/* Define for Solaris 2.5.1 so the uint8_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#undef _UINT8_T

/* Define to rpl_malloc if the replacement function should be used. */
#undef malloc

/* Define to `unsigned int' if <sys/types.h> does not define. */
#undef size_t

/* Define to the type of an unsigned integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#undef uint16_t

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#undef uint32_t

/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#undef uint64_t

/* Define to the type of an unsigned integer type of width exactly 8 bits if
   such a type exists and the standard includes do not define it. */
#undef uint8_t
