% Generated by ADiMat 0.6.0-4870
% Copyright 2009-2013 Johannes Willkomm, Fachgebiet Scientific Computing,
% TU Darmstadt, 64289 Darmstadt, Germany
% Copyright 2001-2008 Andre Vehreschild, Institute for Scientific Computing,
% RWTH Aachen University, 52056 Aachen, Germany.
% Visit us on the web at http://www.adimat.de
% Report bugs to adimat-users@lists.sc.informatik.tu-darmstadt.de
%
%
%                             DISCLAIMER
%
% ADiMat was prepared as part of an employment at the Institute
% for Scientific Computing, RWTH Aachen University, Germany and is
% provided AS IS. NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL
% REPUBLIC OF GERMANY NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY,
% EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY
% FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY INFORMATION OR
% PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE WOULD NOT INFRINGE
% PRIVATELY OWNED RIGHTS.
%
% Global flags were:
% FORWARDMODE -- Apply the forward mode to the files.
% NOOPEROPTIM -- Do not use optimized operators. I.e.:
%		 g_a*b*g_c -/-> mtimes3(g_a, b, g_c)
% NOLOCALCSE  -- Do not use local common subexpression elimination when
%		 canonicalizing the code.
% NOGLOBALCSE -- Prevents the application of global common subexpression
%		 elimination after canonicalizing the code.
% NOPRESCALARFOLDING -- Switch off folding of scalar constants before
%		 augmentation.
% NOPOSTSCALARFOLDING -- Switch off folding of scalar constants after
%		 augmentation.
% NOCONSTFOLDMULT0 -- Switch off folding of product with one factor
%		 being zero: b*0=0.
% FUNCMODE    -- Inputfile is a function (This flag can not be set explicitly).
% NOTMPCLEAR  -- Suppress generation of clear g_* instructions.
% UNBOUND_XML  -- Write list of unbound identifiers in XML format.
% DEPENDENCIES_XML  -- Write list of functions in XML format.
% UNBOUND_ERROR	-- Stop with error if unbound identifiers found (default).
% FUNCTION_LIST_XML	-- Write list of functions to XML file.
% VERBOSITYLEVEL=5
% AD_IVARS= y
% AD_DVARS= out

function [g_out, out]= g_burgersfun(t, g_y, y, N)
   %   Jacek Kierzenka and Lawrence F. Shampine
   %   Copyright 1984-2014 The MathWorks, Inc.
   % Derivative function.
   tmp_burgersfun_00000= 1: N;
   g_tmp_y_00000= g_y(tmp_burgersfun_00000);
   tmp_y_00000= y(tmp_burgersfun_00000);
   g_a= g_tmp_y_00000;
   a= tmp_y_00000; 
   g_tmp_y_00001= g_y(N+ 1: end);
   tmp_y_00001= y(N+ 1: end);
   g_x= g_tmp_y_00001;
   x= tmp_y_00001; 
   x0= 0; 
   a0= 0; 
   xNP1= 1; 
   aNP1= 0; 
   g_tmp_y_00002= g_y(1);
   tmp_y_00002= y(1);
   g_y1= g_tmp_y_00002;
   y1= tmp_y_00002; 
   g_g= zeros(2* N, 1).* g_y1;
   g= zeros(2* N, 1).* y1; 
   tmp_burgersfun_00001= N- 1;
   for i= 2: tmp_burgersfun_00001
      tmp_burgersfun_00002= i+ 1;
      g_tmp_x_00000= g_x(tmp_burgersfun_00002);
      tmp_x_00000= x(tmp_burgersfun_00002);
      tmp_burgersfun_00003= i- 1;
      g_tmp_x_00001= g_x(tmp_burgersfun_00003);
      tmp_x_00001= x(tmp_burgersfun_00003);
      g_delx= g_tmp_x_00000- g_tmp_x_00001;
      delx= tmp_x_00000- tmp_x_00001; 
      tmp_burgersfun_00004= i+ 1;
      g_tmp_a_00000= g_a(tmp_burgersfun_00004);
      tmp_a_00000= a(tmp_burgersfun_00004);
      g_tmp_a_00001= g_a(i);
      tmp_a_00001= a(i);
      g_tmp_burgersfun_00005= g_tmp_a_00000- g_tmp_a_00001;
      tmp_burgersfun_00005= tmp_a_00000- tmp_a_00001;
      tmp_burgersfun_00006= i+ 1;
      g_tmp_x_00002= g_x(tmp_burgersfun_00006);
      tmp_x_00002= x(tmp_burgersfun_00006);
      g_tmp_x_00003= g_x(i);
      tmp_x_00003= x(i);
      g_tmp_burgersfun_00007= g_tmp_x_00002- g_tmp_x_00003;
      tmp_burgersfun_00007= tmp_x_00002- tmp_x_00003;
      g_tmp_burgersfun_00008= adimat_g_mrdivide((g_tmp_burgersfun_00005), (tmp_burgersfun_00005), (g_tmp_burgersfun_00007), (tmp_burgersfun_00007));
      tmp_burgersfun_00008= tmp_burgersfun_00005/ tmp_burgersfun_00007;
      g_tmp_a_00002= g_a(i);
      tmp_a_00002= a(i);
      tmp_burgersfun_00009= i- 1;
      g_tmp_a_00003= g_a(tmp_burgersfun_00009);
      tmp_a_00003= a(tmp_burgersfun_00009);
      g_tmp_burgersfun_00010= g_tmp_a_00002- g_tmp_a_00003;
      tmp_burgersfun_00010= tmp_a_00002- tmp_a_00003;
      g_tmp_x_00004= g_x(i);
      tmp_x_00004= x(i);
      tmp_burgersfun_00011= i- 1;
      g_tmp_x_00005= g_x(tmp_burgersfun_00011);
      tmp_x_00005= x(tmp_burgersfun_00011);
      g_tmp_burgersfun_00012= g_tmp_x_00004- g_tmp_x_00005;
      tmp_burgersfun_00012= tmp_x_00004- tmp_x_00005;
      g_tmp_burgersfun_00013= adimat_g_mrdivide((g_tmp_burgersfun_00010), (tmp_burgersfun_00010), (g_tmp_burgersfun_00012), (tmp_burgersfun_00012));
      tmp_burgersfun_00013= tmp_burgersfun_00010/ tmp_burgersfun_00012;
      g_tmp_burgersfun_00014= g_tmp_burgersfun_00008- g_tmp_burgersfun_00013;
      tmp_burgersfun_00014= tmp_burgersfun_00008- tmp_burgersfun_00013;
      g_tmp_burgersfun_00015= 1e-4* g_tmp_burgersfun_00014;
      tmp_burgersfun_00015= 1e-4* tmp_burgersfun_00014;
      g_tmp_burgersfun_00016= 0.5* g_delx;
      tmp_burgersfun_00016= 0.5* delx;
      g_tmp_burgersfun_00017= adimat_g_mrdivide(g_tmp_burgersfun_00015, tmp_burgersfun_00015, (g_tmp_burgersfun_00016), (tmp_burgersfun_00016));
      tmp_burgersfun_00017= tmp_burgersfun_00015/ tmp_burgersfun_00016;
      tmp_burgersfun_00018= i+ 1;
      g_tmp_a_00004= g_a(tmp_burgersfun_00018);
      tmp_a_00004= a(tmp_burgersfun_00018);
      g_tmp_burgersfun_00019= adimat_g_pow_left(g_tmp_a_00004, tmp_a_00004, 2);
      tmp_burgersfun_00019= tmp_a_00004^ 2;
      tmp_burgersfun_00020= i- 1;
      g_tmp_a_00005= g_a(tmp_burgersfun_00020);
      tmp_a_00005= a(tmp_burgersfun_00020);
      g_tmp_burgersfun_00021= adimat_g_pow_left(g_tmp_a_00005, tmp_a_00005, 2);
      tmp_burgersfun_00021= tmp_a_00005^ 2;
      g_tmp_burgersfun_00022= g_tmp_burgersfun_00019- g_tmp_burgersfun_00021;
      tmp_burgersfun_00022= tmp_burgersfun_00019- tmp_burgersfun_00021;
      g_tmp_burgersfun_00023= 0.5* g_tmp_burgersfun_00022;
      tmp_burgersfun_00023= 0.5* tmp_burgersfun_00022;
      g_tmp_burgersfun_00024= adimat_g_mrdivide(g_tmp_burgersfun_00023, tmp_burgersfun_00023, g_delx, delx);
      tmp_burgersfun_00024= tmp_burgersfun_00023/ delx;
      g_g(i)= g_tmp_burgersfun_00017- g_tmp_burgersfun_00024;
      g(i)= tmp_burgersfun_00017- tmp_burgersfun_00024; 
      tmp_burgersfun_00001= N- 1;
   end
   g_tmp_x_00006= g_x(2);
   tmp_x_00006= x(2);
   g_delx= g_tmp_x_00006+ g_zeros(size(x0));
   delx= tmp_x_00006- x0; 
   g_tmp_a_00006= g_a(2);
   tmp_a_00006= a(2);
   g_tmp_a_00007= g_a(1);
   tmp_a_00007= a(1);
   g_tmp_burgersfun_00025= g_tmp_a_00006- g_tmp_a_00007;
   tmp_burgersfun_00025= tmp_a_00006- tmp_a_00007;
   g_tmp_x_00007= g_x(2);
   tmp_x_00007= x(2);
   g_tmp_x_00008= g_x(1);
   tmp_x_00008= x(1);
   g_tmp_burgersfun_00026= g_tmp_x_00007- g_tmp_x_00008;
   tmp_burgersfun_00026= tmp_x_00007- tmp_x_00008;
   g_tmp_burgersfun_00027= adimat_g_mrdivide((g_tmp_burgersfun_00025), (tmp_burgersfun_00025), (g_tmp_burgersfun_00026), (tmp_burgersfun_00026));
   tmp_burgersfun_00027= tmp_burgersfun_00025/ tmp_burgersfun_00026;
   g_tmp_a_00008= g_a(1);
   tmp_a_00008= a(1);
   g_tmp_burgersfun_00028= g_tmp_a_00008+ g_zeros(size(a0));
   tmp_burgersfun_00028= tmp_a_00008- a0;
   g_tmp_x_00009= g_x(1);
   tmp_x_00009= x(1);
   g_tmp_burgersfun_00029= g_tmp_x_00009+ g_zeros(size(x0));
   tmp_burgersfun_00029= tmp_x_00009- x0;
   g_tmp_burgersfun_00030= adimat_g_mrdivide((g_tmp_burgersfun_00028), (tmp_burgersfun_00028), (g_tmp_burgersfun_00029), (tmp_burgersfun_00029));
   tmp_burgersfun_00030= tmp_burgersfun_00028/ tmp_burgersfun_00029;
   g_tmp_burgersfun_00031= g_tmp_burgersfun_00027- g_tmp_burgersfun_00030;
   tmp_burgersfun_00031= tmp_burgersfun_00027- tmp_burgersfun_00030;
   g_tmp_burgersfun_00032= 1e-4* g_tmp_burgersfun_00031;
   tmp_burgersfun_00032= 1e-4* tmp_burgersfun_00031;
   g_tmp_burgersfun_00033= 0.5* g_delx;
   tmp_burgersfun_00033= 0.5* delx;
   g_tmp_burgersfun_00034= adimat_g_mrdivide(g_tmp_burgersfun_00032, tmp_burgersfun_00032, (g_tmp_burgersfun_00033), (tmp_burgersfun_00033));
   tmp_burgersfun_00034= tmp_burgersfun_00032/ tmp_burgersfun_00033;
   g_tmp_a_00009= g_a(2);
   tmp_a_00009= a(2);
   g_tmp_burgersfun_00035= adimat_g_pow_left(g_tmp_a_00009, tmp_a_00009, 2);
   tmp_burgersfun_00035= tmp_a_00009^ 2;
   tmp_burgersfun_00036= a0^ 2;
   g_tmp_burgersfun_00037= g_tmp_burgersfun_00035+ g_zeros(size(tmp_burgersfun_00036));
   tmp_burgersfun_00037= tmp_burgersfun_00035- tmp_burgersfun_00036;
   g_tmp_burgersfun_00038= 0.5* g_tmp_burgersfun_00037;
   tmp_burgersfun_00038= 0.5* tmp_burgersfun_00037;
   g_tmp_burgersfun_00039= adimat_g_mrdivide(g_tmp_burgersfun_00038, tmp_burgersfun_00038, g_delx, delx);
   tmp_burgersfun_00039= tmp_burgersfun_00038/ delx;
   g_g(1)= g_tmp_burgersfun_00034- g_tmp_burgersfun_00039;
   g(1)= tmp_burgersfun_00034- tmp_burgersfun_00039; 
   tmp_burgersfun_00040= N- 1;
   g_tmp_x_00010= g_x(tmp_burgersfun_00040);
   tmp_x_00010= x(tmp_burgersfun_00040);
   g_delx= -g_tmp_x_00010+ g_zeros(size(xNP1));
   delx= xNP1- tmp_x_00010; 
   g_tmp_a_00010= g_a(N);
   tmp_a_00010= a(N);
   g_tmp_burgersfun_00041= -g_tmp_a_00010+ g_zeros(size(aNP1));
   tmp_burgersfun_00041= aNP1- tmp_a_00010;
   g_tmp_x_00011= g_x(N);
   tmp_x_00011= x(N);
   g_tmp_burgersfun_00042= -g_tmp_x_00011+ g_zeros(size(xNP1));
   tmp_burgersfun_00042= xNP1- tmp_x_00011;
   g_tmp_burgersfun_00043= adimat_g_mrdivide((g_tmp_burgersfun_00041), (tmp_burgersfun_00041), (g_tmp_burgersfun_00042), (tmp_burgersfun_00042));
   tmp_burgersfun_00043= tmp_burgersfun_00041/ tmp_burgersfun_00042;
   g_tmp_a_00011= g_a(N);
   tmp_a_00011= a(N);
   tmp_burgersfun_00044= N- 1;
   g_tmp_a_00012= g_a(tmp_burgersfun_00044);
   tmp_a_00012= a(tmp_burgersfun_00044);
   g_tmp_burgersfun_00045= g_tmp_a_00011- g_tmp_a_00012;
   tmp_burgersfun_00045= tmp_a_00011- tmp_a_00012;
   g_tmp_x_00012= g_x(N);
   tmp_x_00012= x(N);
   tmp_burgersfun_00046= N- 1;
   g_tmp_x_00013= g_x(tmp_burgersfun_00046);
   tmp_x_00013= x(tmp_burgersfun_00046);
   g_tmp_burgersfun_00047= g_tmp_x_00012- g_tmp_x_00013;
   tmp_burgersfun_00047= tmp_x_00012- tmp_x_00013;
   g_tmp_burgersfun_00048= adimat_g_mrdivide((g_tmp_burgersfun_00045), (tmp_burgersfun_00045), (g_tmp_burgersfun_00047), (tmp_burgersfun_00047));
   tmp_burgersfun_00048= tmp_burgersfun_00045/ tmp_burgersfun_00047;
   g_tmp_burgersfun_00049= g_tmp_burgersfun_00043- g_tmp_burgersfun_00048;
   tmp_burgersfun_00049= tmp_burgersfun_00043- tmp_burgersfun_00048;
   g_tmp_burgersfun_00050= 1e-4* g_tmp_burgersfun_00049;
   tmp_burgersfun_00050= 1e-4* tmp_burgersfun_00049;
   g_tmp_burgersfun_00051= adimat_g_mrdivide(g_tmp_burgersfun_00050, tmp_burgersfun_00050, g_delx, delx);
   tmp_burgersfun_00051= tmp_burgersfun_00050/ delx;
   tmp_burgersfun_00052= aNP1^ 2;
   tmp_burgersfun_00053= N- 1;
   g_tmp_a_00013= g_a(tmp_burgersfun_00053);
   tmp_a_00013= a(tmp_burgersfun_00053);
   g_tmp_burgersfun_00054= adimat_g_pow_left(g_tmp_a_00013, tmp_a_00013, 2);
   tmp_burgersfun_00054= tmp_a_00013^ 2;
   g_tmp_burgersfun_00055= -g_tmp_burgersfun_00054+ g_zeros(size(tmp_burgersfun_00052));
   tmp_burgersfun_00055= tmp_burgersfun_00052- tmp_burgersfun_00054;
   g_tmp_burgersfun_00056= 0.5* g_tmp_burgersfun_00055;
   tmp_burgersfun_00056= 0.5* tmp_burgersfun_00055;
   g_tmp_burgersfun_00057= adimat_g_mrdivide(g_tmp_burgersfun_00056, tmp_burgersfun_00056, g_delx, delx);
   tmp_burgersfun_00057= tmp_burgersfun_00056/ delx;
   g_g(N)= g_tmp_burgersfun_00051- g_tmp_burgersfun_00057;
   g(N)= tmp_burgersfun_00051- tmp_burgersfun_00057; 
   % Evaluate monitor function.
   g_M= zeros(N, 1).* g_y1;
   M= zeros(N, 1).* y1; 
   tmp_burgersfun_00058= N- 1;
   for i= 2: tmp_burgersfun_00058
      tmp_burgersfun_00059= i+ 1;
      g_tmp_a_00014= g_a(tmp_burgersfun_00059);
      tmp_a_00014= a(tmp_burgersfun_00059);
      tmp_burgersfun_00060= i- 1;
      g_tmp_a_00015= g_a(tmp_burgersfun_00060);
      tmp_a_00015= a(tmp_burgersfun_00060);
      g_tmp_burgersfun_00061= g_tmp_a_00014- g_tmp_a_00015;
      tmp_burgersfun_00061= tmp_a_00014- tmp_a_00015;
      tmp_burgersfun_00062= i+ 1;
      g_tmp_x_00014= g_x(tmp_burgersfun_00062);
      tmp_x_00014= x(tmp_burgersfun_00062);
      tmp_burgersfun_00063= i- 1;
      g_tmp_x_00015= g_x(tmp_burgersfun_00063);
      tmp_x_00015= x(tmp_burgersfun_00063);
      g_tmp_burgersfun_00064= g_tmp_x_00014- g_tmp_x_00015;
      tmp_burgersfun_00064= tmp_x_00014- tmp_x_00015;
      g_tmp_burgersfun_00065= adimat_g_mrdivide((g_tmp_burgersfun_00061), (tmp_burgersfun_00061), (g_tmp_burgersfun_00064), (tmp_burgersfun_00064));
      tmp_burgersfun_00065= tmp_burgersfun_00061/ tmp_burgersfun_00064;
      g_tmp_burgersfun_00066= adimat_g_pow_left((g_tmp_burgersfun_00065), (tmp_burgersfun_00065), 2);
      tmp_burgersfun_00066= tmp_burgersfun_00065^ 2;
      g_tmp_burgersfun_00067= g_tmp_burgersfun_00066+ g_zeros(1);
      tmp_burgersfun_00067= 1+ tmp_burgersfun_00066;
      M(i)= sqrt(tmp_burgersfun_00067); 
      g_M(i)= g_tmp_burgersfun_00067./ (2.* M(i));
      tmp_burgersfun_00058= N- 1;
   end
   g_tmp_a_00016= g_a(1);
   tmp_a_00016= a(1);
   g_tmp_burgersfun_00068= g_tmp_a_00016+ g_zeros(size(a0));
   tmp_burgersfun_00068= tmp_a_00016- a0;
   g_tmp_x_00016= g_x(1);
   tmp_x_00016= x(1);
   g_tmp_burgersfun_00069= g_tmp_x_00016+ g_zeros(size(x0));
   tmp_burgersfun_00069= tmp_x_00016- x0;
   g_tmp_burgersfun_00070= adimat_g_mrdivide((g_tmp_burgersfun_00068), (tmp_burgersfun_00068), (g_tmp_burgersfun_00069), (tmp_burgersfun_00069));
   tmp_burgersfun_00070= tmp_burgersfun_00068/ tmp_burgersfun_00069;
   g_tmp_burgersfun_00071= adimat_g_pow_left((g_tmp_burgersfun_00070), (tmp_burgersfun_00070), 2);
   tmp_burgersfun_00071= tmp_burgersfun_00070^ 2;
   g_tmp_burgersfun_00072= g_tmp_burgersfun_00071+ g_zeros(1);
   tmp_burgersfun_00072= 1+ tmp_burgersfun_00071;
   M0= sqrt(tmp_burgersfun_00072); 
   g_M0= g_tmp_burgersfun_00072./ (2.* M0);
   g_tmp_a_00017= g_a(2);
   tmp_a_00017= a(2);
   g_tmp_burgersfun_00073= g_tmp_a_00017+ g_zeros(size(a0));
   tmp_burgersfun_00073= tmp_a_00017- a0;
   g_tmp_x_00017= g_x(2);
   tmp_x_00017= x(2);
   g_tmp_burgersfun_00074= g_tmp_x_00017+ g_zeros(size(x0));
   tmp_burgersfun_00074= tmp_x_00017- x0;
   g_tmp_burgersfun_00075= adimat_g_mrdivide((g_tmp_burgersfun_00073), (tmp_burgersfun_00073), (g_tmp_burgersfun_00074), (tmp_burgersfun_00074));
   tmp_burgersfun_00075= tmp_burgersfun_00073/ tmp_burgersfun_00074;
   g_tmp_burgersfun_00076= adimat_g_pow_left((g_tmp_burgersfun_00075), (tmp_burgersfun_00075), 2);
   tmp_burgersfun_00076= tmp_burgersfun_00075^ 2;
   g_tmp_burgersfun_00077= g_tmp_burgersfun_00076+ g_zeros(1);
   tmp_burgersfun_00077= 1+ tmp_burgersfun_00076;
   M(1)= sqrt(tmp_burgersfun_00077); 
   g_M(1)= g_tmp_burgersfun_00077./ (2.* M(1));
   tmp_burgersfun_00078= N- 1;
   g_tmp_a_00018= g_a(tmp_burgersfun_00078);
   tmp_a_00018= a(tmp_burgersfun_00078);
   g_tmp_burgersfun_00079= -g_tmp_a_00018+ g_zeros(size(aNP1));
   tmp_burgersfun_00079= aNP1- tmp_a_00018;
   tmp_burgersfun_00080= N- 1;
   g_tmp_x_00018= g_x(tmp_burgersfun_00080);
   tmp_x_00018= x(tmp_burgersfun_00080);
   g_tmp_burgersfun_00081= -g_tmp_x_00018+ g_zeros(size(xNP1));
   tmp_burgersfun_00081= xNP1- tmp_x_00018;
   g_tmp_burgersfun_00082= adimat_g_mrdivide((g_tmp_burgersfun_00079), (tmp_burgersfun_00079), (g_tmp_burgersfun_00081), (tmp_burgersfun_00081));
   tmp_burgersfun_00082= tmp_burgersfun_00079/ tmp_burgersfun_00081;
   g_tmp_burgersfun_00083= adimat_g_pow_left((g_tmp_burgersfun_00082), (tmp_burgersfun_00082), 2);
   tmp_burgersfun_00083= tmp_burgersfun_00082^ 2;
   g_tmp_burgersfun_00084= g_tmp_burgersfun_00083+ g_zeros(1);
   tmp_burgersfun_00084= 1+ tmp_burgersfun_00083;
   M(N)= sqrt(tmp_burgersfun_00084); 
   g_M(N)= g_tmp_burgersfun_00084./ (2.* M(N));
   g_tmp_a_00019= g_a(N);
   tmp_a_00019= a(N);
   g_tmp_burgersfun_00085= -g_tmp_a_00019+ g_zeros(size(aNP1));
   tmp_burgersfun_00085= aNP1- tmp_a_00019;
   g_tmp_x_00019= g_x(N);
   tmp_x_00019= x(N);
   g_tmp_burgersfun_00086= -g_tmp_x_00019+ g_zeros(size(xNP1));
   tmp_burgersfun_00086= xNP1- tmp_x_00019;
   g_tmp_burgersfun_00087= adimat_g_mrdivide((g_tmp_burgersfun_00085), (tmp_burgersfun_00085), (g_tmp_burgersfun_00086), (tmp_burgersfun_00086));
   tmp_burgersfun_00087= tmp_burgersfun_00085/ tmp_burgersfun_00086;
   g_tmp_burgersfun_00088= adimat_g_pow_left((g_tmp_burgersfun_00087), (tmp_burgersfun_00087), 2);
   tmp_burgersfun_00088= tmp_burgersfun_00087^ 2;
   g_tmp_burgersfun_00089= g_tmp_burgersfun_00088+ g_zeros(1);
   tmp_burgersfun_00089= 1+ tmp_burgersfun_00088;
   MNP1= sqrt(tmp_burgersfun_00089); 
   % Spatial smoothing with gamma = 2, p = 2.
   g_MNP1= g_tmp_burgersfun_00089./ (2.* MNP1);
   g_SM= zeros(N, 1).* g_y1;
   SM= zeros(N, 1).* y1; 
   tmp_burgersfun_00090= N- 2;
   for i= 3: tmp_burgersfun_00090
      tmp_burgersfun_00091= i- 2;
      g_tmp_M_00000= g_M(tmp_burgersfun_00091);
      tmp_M_00000= M(tmp_burgersfun_00091);
      g_tmp_burgersfun_00092= adimat_g_pow_left(g_tmp_M_00000, tmp_M_00000, 2);
      tmp_burgersfun_00092= tmp_M_00000^ 2;
      g_tmp_burgersfun_00093= 4* g_tmp_burgersfun_00092;
      tmp_burgersfun_00093= 4* tmp_burgersfun_00092;
      tmp_burgersfun_00094= i- 1;
      g_tmp_M_00001= g_M(tmp_burgersfun_00094);
      tmp_M_00001= M(tmp_burgersfun_00094);
      g_tmp_burgersfun_00095= adimat_g_pow_left(g_tmp_M_00001, tmp_M_00001, 2);
      tmp_burgersfun_00095= tmp_M_00001^ 2;
      g_tmp_burgersfun_00096= 6* g_tmp_burgersfun_00095;
      tmp_burgersfun_00096= 6* tmp_burgersfun_00095;
      g_tmp_M_00002= g_M(i);
      tmp_M_00002= M(i);
      g_tmp_burgersfun_00097= adimat_g_pow_left(g_tmp_M_00002, tmp_M_00002, 2);
      tmp_burgersfun_00097= tmp_M_00002^ 2;
      g_tmp_burgersfun_00098= 9* g_tmp_burgersfun_00097;
      tmp_burgersfun_00098= 9* tmp_burgersfun_00097;
      tmp_burgersfun_00099= i+ 1;
      g_tmp_M_00003= g_M(tmp_burgersfun_00099);
      tmp_M_00003= M(tmp_burgersfun_00099);
      g_tmp_burgersfun_00100= adimat_g_pow_left(g_tmp_M_00003, tmp_M_00003, 2);
      tmp_burgersfun_00100= tmp_M_00003^ 2;
      g_tmp_burgersfun_00101= 6* g_tmp_burgersfun_00100;
      tmp_burgersfun_00101= 6* tmp_burgersfun_00100;
      tmp_burgersfun_00102= i+ 2;
      g_tmp_M_00004= g_M(tmp_burgersfun_00102);
      tmp_M_00004= M(tmp_burgersfun_00102);
      g_tmp_burgersfun_00103= adimat_g_pow_left(g_tmp_M_00004, tmp_M_00004, 2);
      tmp_burgersfun_00103= tmp_M_00004^ 2;
      g_tmp_burgersfun_00104= 4* g_tmp_burgersfun_00103;
      tmp_burgersfun_00104= 4* tmp_burgersfun_00103;
      g_tmp_burgersfun_00105= g_tmp_burgersfun_00093+ g_tmp_burgersfun_00096+ g_tmp_burgersfun_00098+ g_tmp_burgersfun_00101+ g_tmp_burgersfun_00104;
      tmp_burgersfun_00105= tmp_burgersfun_00093+ tmp_burgersfun_00096+ tmp_burgersfun_00098+ tmp_burgersfun_00101+ tmp_burgersfun_00104;
      g_tmp_burgersfun_00106= adimat_g_mrdivide1((g_tmp_burgersfun_00105), (tmp_burgersfun_00105), 29);
      tmp_burgersfun_00106= tmp_burgersfun_00105/ 29;
      SM(i)= sqrt(tmp_burgersfun_00106); 
      g_SM(i)= g_tmp_burgersfun_00106./ (2.* SM(i));
      tmp_burgersfun_00090= N- 2;
   end
   g_tmp_burgersfun_00107= adimat_g_pow_left(g_M0, M0, 2);
   tmp_burgersfun_00107= M0^ 2;
   g_tmp_burgersfun_00108= 9* g_tmp_burgersfun_00107;
   tmp_burgersfun_00108= 9* tmp_burgersfun_00107;
   g_tmp_M_00005= g_M(1);
   tmp_M_00005= M(1);
   g_tmp_burgersfun_00109= adimat_g_pow_left(g_tmp_M_00005, tmp_M_00005, 2);
   tmp_burgersfun_00109= tmp_M_00005^ 2;
   g_tmp_burgersfun_00110= 6* g_tmp_burgersfun_00109;
   tmp_burgersfun_00110= 6* tmp_burgersfun_00109;
   g_tmp_M_00006= g_M(2);
   tmp_M_00006= M(2);
   g_tmp_burgersfun_00111= adimat_g_pow_left(g_tmp_M_00006, tmp_M_00006, 2);
   tmp_burgersfun_00111= tmp_M_00006^ 2;
   g_tmp_burgersfun_00112= 4* g_tmp_burgersfun_00111;
   tmp_burgersfun_00112= 4* tmp_burgersfun_00111;
   g_tmp_burgersfun_00113= g_tmp_burgersfun_00108+ g_tmp_burgersfun_00110+ g_tmp_burgersfun_00112;
   tmp_burgersfun_00113= tmp_burgersfun_00108+ tmp_burgersfun_00110+ tmp_burgersfun_00112;
   g_tmp_burgersfun_00114= adimat_g_mrdivide1((g_tmp_burgersfun_00113), (tmp_burgersfun_00113), 19);
   tmp_burgersfun_00114= tmp_burgersfun_00113/ 19;
   SM0= sqrt(tmp_burgersfun_00114); 
   g_SM0= g_tmp_burgersfun_00114./ (2.* SM0);
   g_tmp_burgersfun_00115= adimat_g_pow_left(g_M0, M0, 2);
   tmp_burgersfun_00115= M0^ 2;
   g_tmp_burgersfun_00116= 6* g_tmp_burgersfun_00115;
   tmp_burgersfun_00116= 6* tmp_burgersfun_00115;
   g_tmp_M_00007= g_M(1);
   tmp_M_00007= M(1);
   g_tmp_burgersfun_00117= adimat_g_pow_left(g_tmp_M_00007, tmp_M_00007, 2);
   tmp_burgersfun_00117= tmp_M_00007^ 2;
   g_tmp_burgersfun_00118= 9* g_tmp_burgersfun_00117;
   tmp_burgersfun_00118= 9* tmp_burgersfun_00117;
   g_tmp_M_00008= g_M(2);
   tmp_M_00008= M(2);
   g_tmp_burgersfun_00119= adimat_g_pow_left(g_tmp_M_00008, tmp_M_00008, 2);
   tmp_burgersfun_00119= tmp_M_00008^ 2;
   g_tmp_burgersfun_00120= 6* g_tmp_burgersfun_00119;
   tmp_burgersfun_00120= 6* tmp_burgersfun_00119;
   g_tmp_M_00009= g_M(3);
   tmp_M_00009= M(3);
   g_tmp_burgersfun_00121= adimat_g_pow_left(g_tmp_M_00009, tmp_M_00009, 2);
   tmp_burgersfun_00121= tmp_M_00009^ 2;
   g_tmp_burgersfun_00122= 4* g_tmp_burgersfun_00121;
   tmp_burgersfun_00122= 4* tmp_burgersfun_00121;
   g_tmp_burgersfun_00123= g_tmp_burgersfun_00116+ g_tmp_burgersfun_00118+ g_tmp_burgersfun_00120+ g_tmp_burgersfun_00122;
   tmp_burgersfun_00123= tmp_burgersfun_00116+ tmp_burgersfun_00118+ tmp_burgersfun_00120+ tmp_burgersfun_00122;
   g_tmp_burgersfun_00124= adimat_g_mrdivide1((g_tmp_burgersfun_00123), (tmp_burgersfun_00123), 25);
   tmp_burgersfun_00124= tmp_burgersfun_00123/ 25;
   SM(1)= sqrt(tmp_burgersfun_00124); 
   g_SM(1)= g_tmp_burgersfun_00124./ (2.* SM(1));
   g_tmp_burgersfun_00125= adimat_g_pow_left(g_M0, M0, 2);
   tmp_burgersfun_00125= M0^ 2;
   g_tmp_burgersfun_00126= 4* g_tmp_burgersfun_00125;
   tmp_burgersfun_00126= 4* tmp_burgersfun_00125;
   g_tmp_M_00010= g_M(1);
   tmp_M_00010= M(1);
   g_tmp_burgersfun_00127= adimat_g_pow_left(g_tmp_M_00010, tmp_M_00010, 2);
   tmp_burgersfun_00127= tmp_M_00010^ 2;
   g_tmp_burgersfun_00128= 6* g_tmp_burgersfun_00127;
   tmp_burgersfun_00128= 6* tmp_burgersfun_00127;
   g_tmp_M_00011= g_M(2);
   tmp_M_00011= M(2);
   g_tmp_burgersfun_00129= adimat_g_pow_left(g_tmp_M_00011, tmp_M_00011, 2);
   tmp_burgersfun_00129= tmp_M_00011^ 2;
   g_tmp_burgersfun_00130= 9* g_tmp_burgersfun_00129;
   tmp_burgersfun_00130= 9* tmp_burgersfun_00129;
   g_tmp_M_00012= g_M(3);
   tmp_M_00012= M(3);
   g_tmp_burgersfun_00131= adimat_g_pow_left(g_tmp_M_00012, tmp_M_00012, 2);
   tmp_burgersfun_00131= tmp_M_00012^ 2;
   g_tmp_burgersfun_00132= 6* g_tmp_burgersfun_00131;
   tmp_burgersfun_00132= 6* tmp_burgersfun_00131;
   g_tmp_M_00013= g_M(4);
   tmp_M_00013= M(4);
   g_tmp_burgersfun_00133= adimat_g_pow_left(g_tmp_M_00013, tmp_M_00013, 2);
   tmp_burgersfun_00133= tmp_M_00013^ 2;
   g_tmp_burgersfun_00134= 4* g_tmp_burgersfun_00133;
   tmp_burgersfun_00134= 4* tmp_burgersfun_00133;
   g_tmp_burgersfun_00135= g_tmp_burgersfun_00126+ g_tmp_burgersfun_00128+ g_tmp_burgersfun_00130+ g_tmp_burgersfun_00132+ g_tmp_burgersfun_00134;
   tmp_burgersfun_00135= tmp_burgersfun_00126+ tmp_burgersfun_00128+ tmp_burgersfun_00130+ tmp_burgersfun_00132+ tmp_burgersfun_00134;
   g_tmp_burgersfun_00136= adimat_g_mrdivide1((g_tmp_burgersfun_00135), (tmp_burgersfun_00135), 29);
   tmp_burgersfun_00136= tmp_burgersfun_00135/ 29;
   SM(2)= sqrt(tmp_burgersfun_00136); 
   g_SM(2)= g_tmp_burgersfun_00136./ (2.* SM(2));
   tmp_burgersfun_00137= N- 3;
   g_tmp_M_00014= g_M(tmp_burgersfun_00137);
   tmp_M_00014= M(tmp_burgersfun_00137);
   g_tmp_burgersfun_00138= adimat_g_pow_left(g_tmp_M_00014, tmp_M_00014, 2);
   tmp_burgersfun_00138= tmp_M_00014^ 2;
   g_tmp_burgersfun_00139= 4* g_tmp_burgersfun_00138;
   tmp_burgersfun_00139= 4* tmp_burgersfun_00138;
   tmp_burgersfun_00140= N- 2;
   g_tmp_M_00015= g_M(tmp_burgersfun_00140);
   tmp_M_00015= M(tmp_burgersfun_00140);
   g_tmp_burgersfun_00141= adimat_g_pow_left(g_tmp_M_00015, tmp_M_00015, 2);
   tmp_burgersfun_00141= tmp_M_00015^ 2;
   g_tmp_burgersfun_00142= 6* g_tmp_burgersfun_00141;
   tmp_burgersfun_00142= 6* tmp_burgersfun_00141;
   tmp_burgersfun_00143= N- 1;
   g_tmp_M_00016= g_M(tmp_burgersfun_00143);
   tmp_M_00016= M(tmp_burgersfun_00143);
   g_tmp_burgersfun_00144= adimat_g_pow_left(g_tmp_M_00016, tmp_M_00016, 2);
   tmp_burgersfun_00144= tmp_M_00016^ 2;
   g_tmp_burgersfun_00145= 9* g_tmp_burgersfun_00144;
   tmp_burgersfun_00145= 9* tmp_burgersfun_00144;
   g_tmp_M_00017= g_M(N);
   tmp_M_00017= M(N);
   g_tmp_burgersfun_00146= adimat_g_pow_left(g_tmp_M_00017, tmp_M_00017, 2);
   tmp_burgersfun_00146= tmp_M_00017^ 2;
   g_tmp_burgersfun_00147= 6* g_tmp_burgersfun_00146;
   tmp_burgersfun_00147= 6* tmp_burgersfun_00146;
   g_tmp_burgersfun_00148= adimat_g_pow_left(g_MNP1, MNP1, 2);
   tmp_burgersfun_00148= MNP1^ 2;
   g_tmp_burgersfun_00149= 4* g_tmp_burgersfun_00148;
   tmp_burgersfun_00149= 4* tmp_burgersfun_00148;
   g_tmp_burgersfun_00150= g_tmp_burgersfun_00139+ g_tmp_burgersfun_00142+ g_tmp_burgersfun_00145+ g_tmp_burgersfun_00147+ g_tmp_burgersfun_00149;
   tmp_burgersfun_00150= tmp_burgersfun_00139+ tmp_burgersfun_00142+ tmp_burgersfun_00145+ tmp_burgersfun_00147+ tmp_burgersfun_00149;
   g_tmp_burgersfun_00151= adimat_g_mrdivide1((g_tmp_burgersfun_00150), (tmp_burgersfun_00150), 29);
   tmp_burgersfun_00151= tmp_burgersfun_00150/ 29;
   SM(N- 1)= sqrt(tmp_burgersfun_00151); 
   g_SM(N- 1)= g_tmp_burgersfun_00151./ (2.* SM(N- 1));
   tmp_burgersfun_00152= N- 2;
   g_tmp_M_00018= g_M(tmp_burgersfun_00152);
   tmp_M_00018= M(tmp_burgersfun_00152);
   g_tmp_burgersfun_00153= adimat_g_pow_left(g_tmp_M_00018, tmp_M_00018, 2);
   tmp_burgersfun_00153= tmp_M_00018^ 2;
   g_tmp_burgersfun_00154= 4* g_tmp_burgersfun_00153;
   tmp_burgersfun_00154= 4* tmp_burgersfun_00153;
   tmp_burgersfun_00155= N- 1;
   g_tmp_M_00019= g_M(tmp_burgersfun_00155);
   tmp_M_00019= M(tmp_burgersfun_00155);
   g_tmp_burgersfun_00156= adimat_g_pow_left(g_tmp_M_00019, tmp_M_00019, 2);
   tmp_burgersfun_00156= tmp_M_00019^ 2;
   g_tmp_burgersfun_00157= 6* g_tmp_burgersfun_00156;
   tmp_burgersfun_00157= 6* tmp_burgersfun_00156;
   g_tmp_M_00020= g_M(N);
   tmp_M_00020= M(N);
   g_tmp_burgersfun_00158= adimat_g_pow_left(g_tmp_M_00020, tmp_M_00020, 2);
   tmp_burgersfun_00158= tmp_M_00020^ 2;
   g_tmp_burgersfun_00159= 9* g_tmp_burgersfun_00158;
   tmp_burgersfun_00159= 9* tmp_burgersfun_00158;
   g_tmp_burgersfun_00160= adimat_g_pow_left(g_MNP1, MNP1, 2);
   tmp_burgersfun_00160= MNP1^ 2;
   g_tmp_burgersfun_00161= 6* g_tmp_burgersfun_00160;
   tmp_burgersfun_00161= 6* tmp_burgersfun_00160;
   g_tmp_burgersfun_00162= g_tmp_burgersfun_00154+ g_tmp_burgersfun_00157+ g_tmp_burgersfun_00159+ g_tmp_burgersfun_00161;
   tmp_burgersfun_00162= tmp_burgersfun_00154+ tmp_burgersfun_00157+ tmp_burgersfun_00159+ tmp_burgersfun_00161;
   g_tmp_burgersfun_00163= adimat_g_mrdivide1((g_tmp_burgersfun_00162), (tmp_burgersfun_00162), 25);
   tmp_burgersfun_00163= tmp_burgersfun_00162/ 25;
   SM(N)= sqrt(tmp_burgersfun_00163); 
   g_SM(N)= g_tmp_burgersfun_00163./ (2.* SM(N));
   tmp_burgersfun_00164= N- 1;
   g_tmp_M_00021= g_M(tmp_burgersfun_00164);
   tmp_M_00021= M(tmp_burgersfun_00164);
   g_tmp_burgersfun_00165= adimat_g_pow_left(g_tmp_M_00021, tmp_M_00021, 2);
   tmp_burgersfun_00165= tmp_M_00021^ 2;
   g_tmp_burgersfun_00166= 4* g_tmp_burgersfun_00165;
   tmp_burgersfun_00166= 4* tmp_burgersfun_00165;
   g_tmp_M_00022= g_M(N);
   tmp_M_00022= M(N);
   g_tmp_burgersfun_00167= adimat_g_pow_left(g_tmp_M_00022, tmp_M_00022, 2);
   tmp_burgersfun_00167= tmp_M_00022^ 2;
   g_tmp_burgersfun_00168= 6* g_tmp_burgersfun_00167;
   tmp_burgersfun_00168= 6* tmp_burgersfun_00167;
   g_tmp_burgersfun_00169= adimat_g_pow_left(g_MNP1, MNP1, 2);
   tmp_burgersfun_00169= MNP1^ 2;
   g_tmp_burgersfun_00170= 9* g_tmp_burgersfun_00169;
   tmp_burgersfun_00170= 9* tmp_burgersfun_00169;
   g_tmp_burgersfun_00171= g_tmp_burgersfun_00166+ g_tmp_burgersfun_00168+ g_tmp_burgersfun_00170;
   tmp_burgersfun_00171= tmp_burgersfun_00166+ tmp_burgersfun_00168+ tmp_burgersfun_00170;
   g_tmp_burgersfun_00172= adimat_g_mrdivide1((g_tmp_burgersfun_00171), (tmp_burgersfun_00171), 19);
   tmp_burgersfun_00172= tmp_burgersfun_00171/ 19;
   SMNP1= sqrt(tmp_burgersfun_00172); 
   g_SMNP1= g_tmp_burgersfun_00172./ (2.* SMNP1);
   tmp_burgersfun_00173= N- 1;
   for i= 2: tmp_burgersfun_00173
      tmp_burgersfun_00174= i+ 1;
      g_tmp_SM_00000= g_SM(tmp_burgersfun_00174);
      tmp_SM_00000= SM(tmp_burgersfun_00174);
      g_tmp_SM_00001= g_SM(i);
      tmp_SM_00001= SM(i);
      g_tmp_burgersfun_00175= g_tmp_SM_00000+ g_tmp_SM_00001;
      tmp_burgersfun_00175= tmp_SM_00000+ tmp_SM_00001;
      tmp_burgersfun_00176= i+ 1;
      g_tmp_x_00020= g_x(tmp_burgersfun_00176);
      tmp_x_00020= x(tmp_burgersfun_00176);
      g_tmp_x_00021= g_x(i);
      tmp_x_00021= x(i);
      g_tmp_burgersfun_00177= g_tmp_x_00020- g_tmp_x_00021;
      tmp_burgersfun_00177= tmp_x_00020- tmp_x_00021;
      g_tmp_burgersfun_00178= g_tmp_burgersfun_00175* tmp_burgersfun_00177+ tmp_burgersfun_00175* g_tmp_burgersfun_00177;
      tmp_burgersfun_00178= tmp_burgersfun_00175* tmp_burgersfun_00177;
      g_tmp_SM_00002= g_SM(i);
      tmp_SM_00002= SM(i);
      tmp_burgersfun_00179= i- 1;
      g_tmp_SM_00003= g_SM(tmp_burgersfun_00179);
      tmp_SM_00003= SM(tmp_burgersfun_00179);
      g_tmp_burgersfun_00180= g_tmp_SM_00002+ g_tmp_SM_00003;
      tmp_burgersfun_00180= tmp_SM_00002+ tmp_SM_00003;
      g_tmp_x_00022= g_x(i);
      tmp_x_00022= x(i);
      tmp_burgersfun_00181= i- 1;
      g_tmp_x_00023= g_x(tmp_burgersfun_00181);
      tmp_x_00023= x(tmp_burgersfun_00181);
      g_tmp_burgersfun_00182= g_tmp_x_00022- g_tmp_x_00023;
      tmp_burgersfun_00182= tmp_x_00022- tmp_x_00023;
      g_tmp_burgersfun_00183= g_tmp_burgersfun_00180* tmp_burgersfun_00182+ tmp_burgersfun_00180* g_tmp_burgersfun_00182;
      tmp_burgersfun_00183= tmp_burgersfun_00180* tmp_burgersfun_00182;
      g_g(i+ N)= g_tmp_burgersfun_00178- g_tmp_burgersfun_00183;
      g(i+ N)= tmp_burgersfun_00178- tmp_burgersfun_00183; 
      tmp_burgersfun_00173= N- 1;
   end
   g_tmp_SM_00004= g_SM(2);
   tmp_SM_00004= SM(2);
   g_tmp_SM_00005= g_SM(1);
   tmp_SM_00005= SM(1);
   g_tmp_burgersfun_00184= g_tmp_SM_00004+ g_tmp_SM_00005;
   tmp_burgersfun_00184= tmp_SM_00004+ tmp_SM_00005;
   g_tmp_x_00024= g_x(2);
   tmp_x_00024= x(2);
   g_tmp_x_00025= g_x(1);
   tmp_x_00025= x(1);
   g_tmp_burgersfun_00185= g_tmp_x_00024- g_tmp_x_00025;
   tmp_burgersfun_00185= tmp_x_00024- tmp_x_00025;
   g_tmp_burgersfun_00186= g_tmp_burgersfun_00184* tmp_burgersfun_00185+ tmp_burgersfun_00184* g_tmp_burgersfun_00185;
   tmp_burgersfun_00186= tmp_burgersfun_00184* tmp_burgersfun_00185;
   g_tmp_SM_00006= g_SM(1);
   tmp_SM_00006= SM(1);
   g_tmp_burgersfun_00187= g_tmp_SM_00006+ g_SM0;
   tmp_burgersfun_00187= tmp_SM_00006+ SM0;
   g_tmp_x_00026= g_x(1);
   tmp_x_00026= x(1);
   g_tmp_burgersfun_00188= g_tmp_x_00026+ g_zeros(size(x0));
   tmp_burgersfun_00188= tmp_x_00026- x0;
   g_tmp_burgersfun_00189= g_tmp_burgersfun_00187* tmp_burgersfun_00188+ tmp_burgersfun_00187* g_tmp_burgersfun_00188;
   tmp_burgersfun_00189= tmp_burgersfun_00187* tmp_burgersfun_00188;
   g_g(1+ N)= g_tmp_burgersfun_00186- g_tmp_burgersfun_00189;
   g(1+ N)= tmp_burgersfun_00186- tmp_burgersfun_00189; 
   g_tmp_SM_00007= g_SM(N);
   tmp_SM_00007= SM(N);
   g_tmp_burgersfun_00190= g_SMNP1+ g_tmp_SM_00007;
   tmp_burgersfun_00190= SMNP1+ tmp_SM_00007;
   g_tmp_x_00027= g_x(N);
   tmp_x_00027= x(N);
   g_tmp_burgersfun_00191= -g_tmp_x_00027+ g_zeros(size(xNP1));
   tmp_burgersfun_00191= xNP1- tmp_x_00027;
   g_tmp_burgersfun_00192= g_tmp_burgersfun_00190* tmp_burgersfun_00191+ tmp_burgersfun_00190* g_tmp_burgersfun_00191;
   tmp_burgersfun_00192= tmp_burgersfun_00190* tmp_burgersfun_00191;
   g_tmp_SM_00008= g_SM(N);
   tmp_SM_00008= SM(N);
   tmp_burgersfun_00193= N- 1;
   g_tmp_SM_00009= g_SM(tmp_burgersfun_00193);
   tmp_SM_00009= SM(tmp_burgersfun_00193);
   g_tmp_burgersfun_00194= g_tmp_SM_00008+ g_tmp_SM_00009;
   tmp_burgersfun_00194= tmp_SM_00008+ tmp_SM_00009;
   g_tmp_x_00028= g_x(N);
   tmp_x_00028= x(N);
   tmp_burgersfun_00195= N- 1;
   g_tmp_x_00029= g_x(tmp_burgersfun_00195);
   tmp_x_00029= x(tmp_burgersfun_00195);
   g_tmp_burgersfun_00196= g_tmp_x_00028- g_tmp_x_00029;
   tmp_burgersfun_00196= tmp_x_00028- tmp_x_00029;
   g_tmp_burgersfun_00197= g_tmp_burgersfun_00194* tmp_burgersfun_00196+ tmp_burgersfun_00194* g_tmp_burgersfun_00196;
   tmp_burgersfun_00197= tmp_burgersfun_00194* tmp_burgersfun_00196;
   g_g(N+ N)= g_tmp_burgersfun_00192- g_tmp_burgersfun_00197;
   g(N+ N)= tmp_burgersfun_00192- tmp_burgersfun_00197; 
   tau= 1e-3; 
   g_tmp_g_00000= g_g(1+ N: end);
   tmp_g_00000= g(1+ N: end);
   g_tmp_burgersfun_00198= -g_tmp_g_00000;
   tmp_burgersfun_00198= -tmp_g_00000;
   tmp_burgersfun_00199= 2* tau;
   g_g(1+ N: end)= adimat_g_mrdivide1(g_tmp_burgersfun_00198, tmp_burgersfun_00198, (tmp_burgersfun_00199));
   g(1+ N: end)= tmp_burgersfun_00198/ tmp_burgersfun_00199; 
   g_out= g_g;
   out= g; 
end
