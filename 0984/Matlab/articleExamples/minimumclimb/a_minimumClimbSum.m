% Generated by ADiMat 0.6.0-4975
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2015 Johannes Willkomm <johannes@johannes-willkomm.de>
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to adimat-users@lists.sc.informatik.tu-darmstadt.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Parameters:
%  - dependents=f
%  - independents=x
%  - inputEncoding=ISO-8859-1
%
% Functions in this file: a_minimumClimbSum, rec_minimumClimbSum,
%  ret_minimumClimbSum, a_minimumClimbDynamics, rec_minimumClimbDynamics,
%  ret_minimumClimbDynamics
%

function [a_x nr_f] = a_minimumClimbSum(x, lambda, auxdata, a_f)
% Get a scalar for second derivative..
   F = rec_minimumClimbDynamics(x, auxdata);
   f = lambda.' * F(:);
   nr_f = f;
   [a_F a_x] = a_zeros(F, x);
   if nargin < 4
      a_f = a_zeros1(f);
   end
   a_F(:) = adimat_adjsum(a_F(:), adimat_adjmultr(F(:), lambda.', a_f));
   [tmpadjc1] = ret_minimumClimbDynamics(a_F);
   a_x = adimat_adjsum(a_x, tmpadjc1);
end

function f = rec_minimumClimbSum(x, lambda, auxdata)
   F = rec_minimumClimbDynamics(x, auxdata);
   f = lambda.' * F(:);
   adimat_push(F, f, x);
   if nargin > 1
      adimat_push1(lambda);
   end
   if nargin > 2
      adimat_push1(auxdata);
   end
   adimat_push1(nargin);
end

function a_x = ret_minimumClimbSum(a_f)
   tmpnargin = adimat_pop1;
   if tmpnargin > 2
      auxdata = adimat_pop1;
   end
   if tmpnargin > 1
      lambda = adimat_pop1;
   end
   [x f F] = adimat_pop;
   [a_F a_x] = a_zeros(F, x);
   if nargin < 1
      a_f = a_zeros1(f);
   end
   a_F(:) = adimat_adjsum(a_F(:), adimat_adjmultr(F(:), lambda.', a_f));
   [tmpadjc1] = ret_minimumClimbDynamics(a_F);
   a_x = adimat_adjsum(a_x, tmpadjc1);
end

function [a_x nr_ydot] = a_minimumClimbDynamics(x, auxdata, a_ydot)
% Dynamics file for minimum time to climb of supersonic aircraft
   tmpda1 = 0;
   tmpda2 = 0;
   tmpda3 = 0;
   j = 0;
   Mpi = 0;
   ei = 0;
   CoF = auxdata.CoF;
   h = x(:, 1);
   v = x(:, 2);
   fpa = x(:, 3);
   u = x(:, 4);
   c1 = 392.4;
   c2 = 16818;
   c3 = 86.138;
   c4 = 288.14;
   c5 = 6.49;
   c6 = 4.0519e9;
   c7 = 288.08;
   c8 = 5.256;
   c9 = 216.64;
   c10 = 9.06e8;
   c11 = 1.73;
   c12 = 0.157;
   c13 = 6e-5;
   c14 = 4.00936;
   c15 = 2.2;
   Nzeros = h .* 0;
   T = Nzeros;
   p = Nzeros;
   ihlow = h < 11000;
   tmpca1 = c5 * h(ihlow);
   tmplia1 = c4 - tmpca1;
   adimat_push_index1(T, ihlow);
   T(ihlow) = tmplia1;
   tmpca2 = T(ihlow) ./ c7;
   adimat_push1(tmpca1);
   tmpca1 = tmpca2 .^ c8;
   adimat_push1(tmplia1);
   tmplia1 = c6 * tmpca1;
   adimat_push_index1(p, ihlow);
   p(ihlow) = tmplia1;
   ihhigh = ~ihlow;
   adimat_push_index1(T, ihhigh);
   T(ihhigh) = c9;
   tmpca3 = c12 * h(ihhigh);
   adimat_push1(tmpca2);
   tmpca2 = c11 - tmpca3;
   adimat_push1(tmpca1);
   tmpca1 = exp(tmpca2);
   adimat_push1(tmplia1);
   tmplia1 = c10 * tmpca1;
   adimat_push_index1(p, ihhigh);
   p(ihhigh) = tmplia1;
   adimat_push1(tmpca1);
   tmpca1 = c3 * p;
   rho = tmpca1 ./ T;
   adimat_push1(tmpca3);
   tmpca3 = 0.5 .* rho;
   adimat_push1(tmpca2);
   tmpca2 = tmpca3 .* v;
   adimat_push1(tmpca1);
   tmpca1 = tmpca2 .* v;
   q = tmpca1 .* c13;
   adimat_push1(tmpca1);
   tmpca1 = sqrt(T);
   a = c14 .* tmpca1;
   M = v ./ a;
   Mp = cell(1, 6);
   for i=1 : 6
      adimat_push1(tmpda1);
      tmpda1 = i - 1;
      adimat_push1(tmplia1);
      tmplia1 = M .^ tmpda1;
      adimat_push_cell_index(Mp, i);
      Mp{i} = tmplia1;
   end
   numeratorCD0 = Nzeros;
   denominatorCD0 = Nzeros;
   numeratorK = Nzeros;
   denominatorK = Nzeros;
   adimat_push1(i);
   for i=1 : 6
      adimat_push1(Mpi);
      Mpi = Mp{i};
      tmpba1 = 0;
      if i < 6
         tmpba1 = 1;
         adimat_push1(tmpca1);
         tmpca1 = CoF(1, i) .* Mpi;
         adimat_push1(numeratorCD0);
         numeratorCD0 = numeratorCD0 + tmpca1;
         adimat_push1(tmpca1);
         tmpca1 = CoF(2, i) .* Mpi;
         adimat_push1(denominatorCD0);
         denominatorCD0 = denominatorCD0 + tmpca1;
         adimat_push1(tmpca1);
         tmpca1 = CoF(3, i) .* Mpi;
         adimat_push1(numeratorK);
         numeratorK = numeratorK + tmpca1;
      end
      adimat_push(tmpba1, tmpca1);
      tmpca1 = CoF(4, i) .* Mpi;
      adimat_push1(denominatorK);
      denominatorK = denominatorK + tmpca1;
   end
   Cd0 = numeratorCD0 ./ denominatorCD0;
   K = numeratorK ./ denominatorK;
   tmpca9 = u .^ 2;
   tmpca8 = q .^ 2;
   tmpda7 = c1 ^ 2;
   tmpda6 = c2 ^ 2;
   tmpda5 = tmpda6 .* tmpda7;
   tmpca4 = tmpda5 ./ tmpca8;
   adimat_push1(tmpca3);
   tmpca3 = K .* tmpca4;
   adimat_push1(tmpca2);
   tmpca2 = tmpca3 .* tmpca9;
   adimat_push1(tmpca1);
   tmpca1 = Cd0 + tmpca2;
   FD = q .* tmpca1;
   FT = Nzeros;
   adimat_push1(i);
   for i=1 : 6
      adimat_push1(ei);
      ei = Nzeros;
      adimat_push1(j);
      for j=1 : 6
         adimat_push1(tmpda2);
         tmpda2 = 4 + j;
         adimat_push1(tmpca1);
         tmpca1 = CoF(tmpda2, i) .* Mp{j};
         adimat_push1(ei);
         ei = ei + tmpca1;
      end
      adimat_push1(tmpda3);
      tmpda3 = i - 1;
      adimat_push1(tmpca2);
      tmpca2 = h .^ tmpda3;
      adimat_push1(tmpca1);
      tmpca1 = ei .* tmpca2;
      adimat_push1(FT);
      FT = FT + tmpca1;
   end
   adimat_push1(tmpca1);
   tmpca1 = FT .* c1;
   adimat_push1(FT);
   FT = tmpca1 / c15;
   adimat_push1(tmpca1);
   tmpca1 = sin(fpa);
   hdot = v .* tmpca1;
   adimat_push1(tmpca4);
   tmpca4 = sin(fpa);
   adimat_push1(tmpca3);
   tmpca3 = c1 .* tmpca4;
   adimat_push1(tmpca2);
   tmpca2 = FT - FD;
   adimat_push1(tmpca1);
   tmpca1 = tmpca2 ./ c2;
   vdot = tmpca1 - tmpca3;
   adimat_push1(tmpca3);
   tmpca3 = cos(fpa);
   adimat_push1(tmpca2);
   tmpca2 = u - tmpca3;
   adimat_push1(tmpca1);
   tmpca1 = c1 .* tmpca2;
   fpadot = tmpca1 ./ v;
   ydot = [hdot vdot fpadot];
   nr_ydot = ydot;
   [a_h a_v a_fpa a_u a_Nzeros a_T a_p a_rho a_q a_a a_M a_Mp a_numeratorCD0 a_denominatorCD0 a_numeratorK a_denominatorK a_Mpi a_Cd0 a_K a_FD a_FT a_ei a_hdot a_vdot a_fpadot a_tmpca1 a_tmpca2 a_tmpca3 a_tmpca4 a_tmpca8 a_tmpca9 a_tmplia1 a_x] = a_zeros(h, v, fpa, u, Nzeros, T, p, rho, q, a, M, Mp, numeratorCD0, denominatorCD0, numeratorK, denominatorK, Mpi, Cd0, K, FD, FT, ei, hdot, vdot, fpadot, tmpca1, tmpca2, tmpca3, tmpca4, tmpca8, tmpca9, tmplia1, x);
   if nargin < 3
      a_ydot = a_zeros1(ydot);
   end
   a_hdot = adimat_adjsum(a_hdot, a_horzcat(a_ydot, hdot));
   a_vdot = adimat_adjsum(a_vdot, a_horzcat(a_ydot, hdot, vdot));
   a_fpadot = adimat_adjsum(a_fpadot, a_horzcat(a_ydot, hdot, vdot, fpadot));
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_fpadot ./ v));
   a_v = adimat_adjsum(a_v, adimat_adjred(v, -((tmpca1./v .* a_fpadot) ./ v)));
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, c1 .* a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   tmpca2 = adimat_pop1;
   a_u = adimat_adjsum(a_u, adimat_adjred(u, a_tmpca2));
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, -a_tmpca2));
   a_tmpca2 = a_zeros1(tmpca2);
   tmpca3 = adimat_pop1;
   a_fpa = adimat_adjsum(a_fpa, -sin(fpa) .* a_tmpca3);
   a_tmpca3 = a_zeros1(tmpca3);
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_vdot));
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, -a_vdot));
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, a_tmpca1 ./ c2));
   a_tmpca1 = a_zeros1(tmpca1);
   tmpca2 = adimat_pop1;
   a_FT = adimat_adjsum(a_FT, adimat_adjred(FT, a_tmpca2));
   a_FD = adimat_adjsum(a_FD, adimat_adjred(FD, -a_tmpca2));
   a_tmpca2 = a_zeros1(tmpca2);
   tmpca3 = adimat_pop1;
   a_tmpca4 = adimat_adjsum(a_tmpca4, adimat_adjred(tmpca4, c1 .* a_tmpca3));
   a_tmpca3 = a_zeros1(tmpca3);
   tmpca4 = adimat_pop1;
   a_fpa = adimat_adjsum(a_fpa, cos(fpa) .* a_tmpca4);
   a_tmpca4 = a_zeros1(tmpca4);
   a_v = adimat_adjsum(a_v, adimat_adjred(v, a_hdot .* tmpca1));
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, v .* a_hdot));
   tmpca1 = adimat_pop1;
   a_fpa = adimat_adjsum(a_fpa, cos(fpa) .* a_tmpca1);
   a_tmpca1 = a_zeros1(tmpca1);
   [tmpadjc1] = adimat_a_mrdividel(tmpca1, c15, a_FT);
   FT = adimat_pop1;
   a_tmpca1 = adimat_adjsum(a_tmpca1, tmpadjc1);
   a_FT = a_zeros1(FT);
   tmpca1 = adimat_pop1;
   a_FT = adimat_adjsum(a_FT, adimat_adjred(FT, a_tmpca1 .* c1));
   a_tmpca1 = a_zeros1(tmpca1);
   for i=fliplr(1 : 6)
      FT = adimat_pop1;
      a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_FT));
      tmpsa1 = a_FT;
      a_FT = a_zeros1(FT);
      a_FT = adimat_adjsum(a_FT, adimat_adjred(FT, tmpsa1));
      tmpca1 = adimat_pop1;
      a_ei = adimat_adjsum(a_ei, adimat_adjred(ei, a_tmpca1 .* tmpca2));
      a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, ei .* a_tmpca1));
      a_tmpca1 = a_zeros1(tmpca1);
      tmpca2 = adimat_pop1;
      a_h = adimat_adjsum(a_h, adimat_adjred(h, tmpda3 .* h.^(tmpda3 - 1) .* a_tmpca2));
      a_tmpca2 = a_zeros1(tmpca2);
      tmpda3 = adimat_pop1;
      for j=fliplr(1 : 6)
         ei = adimat_pop1;
         a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_ei));
         tmpsa1 = a_ei;
         a_ei = a_zeros1(ei);
         a_ei = adimat_adjsum(a_ei, adimat_adjred(ei, tmpsa1));
         tmpca1 = adimat_pop1;
         a_Mp{j} = adimat_adjsum(a_Mp{j}, adimat_adjred(Mp{j}, CoF(tmpda2, i) .* a_tmpca1));
         a_tmpca1 = a_zeros1(tmpca1);
         tmpda2 = adimat_pop1;
      end
      [j ei] = adimat_pop;
      a_Nzeros = adimat_adjsum(a_Nzeros, a_ei);
      a_ei = a_zeros1(ei);
   end
   i = adimat_pop1;
   a_Nzeros = adimat_adjsum(a_Nzeros, a_FT);
   a_q = adimat_adjsum(a_q, adimat_adjred(q, a_FD .* tmpca1));
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, q .* a_FD));
   tmpca1 = adimat_pop1;
   a_Cd0 = adimat_adjsum(a_Cd0, adimat_adjred(Cd0, a_tmpca1));
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   tmpca2 = adimat_pop1;
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, a_tmpca2 .* tmpca9));
   a_tmpca9 = adimat_adjsum(a_tmpca9, adimat_adjred(tmpca9, tmpca3 .* a_tmpca2));
   a_tmpca2 = a_zeros1(tmpca2);
   tmpca3 = adimat_pop1;
   a_K = adimat_adjsum(a_K, adimat_adjred(K, a_tmpca3 .* tmpca4));
   a_tmpca4 = adimat_adjsum(a_tmpca4, adimat_adjred(tmpca4, K .* a_tmpca3));
   a_tmpca3 = a_zeros1(tmpca3);
   a_tmpca8 = adimat_adjsum(a_tmpca8, adimat_adjred(tmpca8, -((tmpda5./tmpca8 .* a_tmpca4) ./ tmpca8)));
   a_q = adimat_adjsum(a_q, adimat_adjred(q, 2 .* q.^1 .* a_tmpca8));
   a_u = adimat_adjsum(a_u, adimat_adjred(u, 2 .* u.^1 .* a_tmpca9));
   a_numeratorK = adimat_adjsum(a_numeratorK, adimat_adjred(numeratorK, a_K ./ denominatorK));
   a_denominatorK = adimat_adjsum(a_denominatorK, adimat_adjred(denominatorK, -((numeratorK./denominatorK .* a_K) ./ denominatorK)));
   a_numeratorCD0 = adimat_adjsum(a_numeratorCD0, adimat_adjred(numeratorCD0, a_Cd0 ./ denominatorCD0));
   a_denominatorCD0 = adimat_adjsum(a_denominatorCD0, adimat_adjred(denominatorCD0, -((numeratorCD0./denominatorCD0 .* a_Cd0) ./ denominatorCD0)));
   for i=fliplr(1 : 6)
      denominatorK = adimat_pop1;
      a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_denominatorK));
      tmpsa1 = a_denominatorK;
      a_denominatorK = a_zeros1(denominatorK);
      a_denominatorK = adimat_adjsum(a_denominatorK, adimat_adjred(denominatorK, tmpsa1));
      tmpca1 = adimat_pop1;
      a_Mpi = adimat_adjsum(a_Mpi, adimat_adjred(Mpi, CoF(4, i) .* a_tmpca1));
      a_tmpca1 = a_zeros1(tmpca1);
      tmpba1 = adimat_pop1;
      if tmpba1 == 1
         numeratorK = adimat_pop1;
         a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_numeratorK));
         tmpsa1 = a_numeratorK;
         a_numeratorK = a_zeros1(numeratorK);
         a_numeratorK = adimat_adjsum(a_numeratorK, adimat_adjred(numeratorK, tmpsa1));
         tmpca1 = adimat_pop1;
         a_Mpi = adimat_adjsum(a_Mpi, adimat_adjred(Mpi, CoF(3, i) .* a_tmpca1));
         a_tmpca1 = a_zeros1(tmpca1);
         denominatorCD0 = adimat_pop1;
         a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_denominatorCD0));
         tmpsa1 = a_denominatorCD0;
         a_denominatorCD0 = a_zeros1(denominatorCD0);
         a_denominatorCD0 = adimat_adjsum(a_denominatorCD0, adimat_adjred(denominatorCD0, tmpsa1));
         tmpca1 = adimat_pop1;
         a_Mpi = adimat_adjsum(a_Mpi, adimat_adjred(Mpi, CoF(2, i) .* a_tmpca1));
         a_tmpca1 = a_zeros1(tmpca1);
         numeratorCD0 = adimat_pop1;
         a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_numeratorCD0));
         tmpsa1 = a_numeratorCD0;
         a_numeratorCD0 = a_zeros1(numeratorCD0);
         a_numeratorCD0 = adimat_adjsum(a_numeratorCD0, adimat_adjred(numeratorCD0, tmpsa1));
         tmpca1 = adimat_pop1;
         a_Mpi = adimat_adjsum(a_Mpi, adimat_adjred(Mpi, CoF(1, i) .* a_tmpca1));
         a_tmpca1 = a_zeros1(tmpca1);
      end
      Mpi = adimat_pop1;
      a_Mp{i} = adimat_adjsum(a_Mp{i}, a_Mpi);
      a_Mpi = a_zeros1(Mpi);
   end
   i = adimat_pop1;
   a_Nzeros = adimat_adjsum(a_Nzeros, a_denominatorK);
   a_Nzeros = adimat_adjsum(a_Nzeros, a_numeratorK);
   a_Nzeros = adimat_adjsum(a_Nzeros, a_denominatorCD0);
   a_Nzeros = adimat_adjsum(a_Nzeros, a_numeratorCD0);
   for i=fliplr(1 : 6)
      Mp = adimat_pop_cell_index(Mp, i);
      a_tmplia1 = adimat_adjsum(a_tmplia1, adimat_adjred(tmplia1, adimat_adjreshape(tmplia1, a_Mp{i})));
      a_Mp = a_zeros_cell_index(a_Mp, Mp, i);
      tmplia1 = adimat_pop1;
      a_M = adimat_adjsum(a_M, adimat_adjred(M, tmpda1 .* M.^(tmpda1 - 1) .* a_tmplia1));
      a_tmplia1 = a_zeros1(tmplia1);
      tmpda1 = adimat_pop1;
   end
   a_v = adimat_adjsum(a_v, adimat_adjred(v, a_M ./ a));
   a_a = adimat_adjsum(a_a, adimat_adjred(a, -((v./a .* a_M) ./ a)));
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, c14 .* a_a));
   tmpca1 = adimat_pop1;
   a_T = adimat_adjsum(a_T, 0.5 .* a_tmpca1./sqrt(T));
   a_tmpca1 = a_zeros1(tmpca1);
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_q .* c13));
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, a_tmpca1 .* v));
   a_v = adimat_adjsum(a_v, adimat_adjred(v, tmpca2 .* a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   tmpca2 = adimat_pop1;
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, a_tmpca2 .* v));
   a_v = adimat_adjsum(a_v, adimat_adjred(v, tmpca3 .* a_tmpca2));
   a_tmpca2 = a_zeros1(tmpca2);
   tmpca3 = adimat_pop1;
   a_rho = adimat_adjsum(a_rho, adimat_adjred(rho, 0.5 .* a_tmpca3));
   a_tmpca3 = a_zeros1(tmpca3);
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_rho ./ T));
   a_T = adimat_adjsum(a_T, adimat_adjred(T, -((tmpca1./T .* a_rho) ./ T)));
   tmpca1 = adimat_pop1;
   a_p = adimat_adjsum(a_p, adimat_adjmultr(p, c3, a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   p = adimat_pop_index1(p, ihhigh);
   a_tmplia1 = adimat_adjsum(a_tmplia1, adimat_adjred(tmplia1, adimat_adjreshape(tmplia1, a_p(ihhigh))));
   a_p = a_zeros_index1(a_p, p, ihhigh);
   tmplia1 = adimat_pop1;
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjmultr(tmpca1, c10, a_tmplia1));
   a_tmplia1 = a_zeros1(tmplia1);
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, exp(tmpca2) .* a_tmpca1);
   a_tmpca1 = a_zeros1(tmpca1);
   tmpca2 = adimat_pop1;
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, -a_tmpca2));
   a_tmpca2 = a_zeros1(tmpca2);
   a_h(ihhigh) = adimat_adjsum(a_h(ihhigh), adimat_adjmultr(h(ihhigh), c12, a_tmpca3));
   T = adimat_pop_index1(T, ihhigh);
   a_T = a_zeros_index1(a_T, T, ihhigh);
   p = adimat_pop_index1(p, ihlow);
   a_tmplia1 = adimat_adjsum(a_tmplia1, adimat_adjred(tmplia1, adimat_adjreshape(tmplia1, a_p(ihlow))));
   a_p = a_zeros_index1(a_p, p, ihlow);
   tmplia1 = adimat_pop1;
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjmultr(tmpca1, c6, a_tmplia1));
   a_tmplia1 = a_zeros1(tmplia1);
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, c8 .* tmpca2.^(c8 - 1) .* a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   a_T(ihlow) = adimat_adjsum(a_T(ihlow), adimat_adjred(T(ihlow), a_tmpca2 ./ c7));
   T = adimat_pop_index1(T, ihlow);
   a_tmplia1 = adimat_adjsum(a_tmplia1, adimat_adjred(tmplia1, adimat_adjreshape(tmplia1, a_T(ihlow))));
   a_T = a_zeros_index1(a_T, T, ihlow);
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, -a_tmplia1));
   a_h(ihlow) = adimat_adjsum(a_h(ihlow), adimat_adjmultr(h(ihlow), c5, a_tmpca1));
   a_Nzeros = adimat_adjsum(a_Nzeros, a_p);
   a_Nzeros = adimat_adjsum(a_Nzeros, a_T);
   a_h = adimat_adjsum(a_h, adimat_adjred(h, a_Nzeros .* 0));
   a_x(:, 4) = adimat_adjsum(a_x(:, 4), a_u);
   a_x(:, 3) = adimat_adjsum(a_x(:, 3), a_fpa);
   a_x(:, 2) = adimat_adjsum(a_x(:, 2), a_v);
   a_x(:, 1) = adimat_adjsum(a_x(:, 1), a_h);
end

function ydot = rec_minimumClimbDynamics(x, auxdata)
   tmpda1 = 0;
   tmpda2 = 0;
   tmpda3 = 0;
   j = 0;
   Mpi = 0;
   ei = 0;
   CoF = auxdata.CoF;
   h = x(:, 1);
   v = x(:, 2);
   fpa = x(:, 3);
   u = x(:, 4);
   c1 = 392.4;
   c2 = 16818;
   c3 = 86.138;
   c4 = 288.14;
   c5 = 6.49;
   c6 = 4.0519e9;
   c7 = 288.08;
   c8 = 5.256;
   c9 = 216.64;
   c10 = 9.06e8;
   c11 = 1.73;
   c12 = 0.157;
   c13 = 6e-5;
   c14 = 4.00936;
   c15 = 2.2;
   Nzeros = h .* 0;
   T = Nzeros;
   p = Nzeros;
   ihlow = h < 11000;
   tmpca1 = c5 * h(ihlow);
   tmplia1 = c4 - tmpca1;
   adimat_push_index1(T, ihlow);
   T(ihlow) = tmplia1;
   tmpca2 = T(ihlow) ./ c7;
   adimat_push1(tmpca1);
   tmpca1 = tmpca2 .^ c8;
   adimat_push1(tmplia1);
   tmplia1 = c6 * tmpca1;
   adimat_push_index1(p, ihlow);
   p(ihlow) = tmplia1;
   ihhigh = ~ihlow;
   adimat_push_index1(T, ihhigh);
   T(ihhigh) = c9;
   tmpca3 = c12 * h(ihhigh);
   adimat_push1(tmpca2);
   tmpca2 = c11 - tmpca3;
   adimat_push1(tmpca1);
   tmpca1 = exp(tmpca2);
   adimat_push1(tmplia1);
   tmplia1 = c10 * tmpca1;
   adimat_push_index1(p, ihhigh);
   p(ihhigh) = tmplia1;
   adimat_push1(tmpca1);
   tmpca1 = c3 * p;
   rho = tmpca1 ./ T;
   adimat_push1(tmpca3);
   tmpca3 = 0.5 .* rho;
   adimat_push1(tmpca2);
   tmpca2 = tmpca3 .* v;
   adimat_push1(tmpca1);
   tmpca1 = tmpca2 .* v;
   q = tmpca1 .* c13;
   adimat_push1(tmpca1);
   tmpca1 = sqrt(T);
   a = c14 .* tmpca1;
   M = v ./ a;
   Mp = cell(1, 6);
   for i=1 : 6
      adimat_push1(tmpda1);
      tmpda1 = i - 1;
      adimat_push1(tmplia1);
      tmplia1 = M .^ tmpda1;
      adimat_push_cell_index(Mp, i);
      Mp{i} = tmplia1;
   end
   numeratorCD0 = Nzeros;
   denominatorCD0 = Nzeros;
   numeratorK = Nzeros;
   denominatorK = Nzeros;
   adimat_push1(i);
   for i=1 : 6
      adimat_push1(Mpi);
      Mpi = Mp{i};
      tmpba1 = 0;
      if i < 6
         tmpba1 = 1;
         adimat_push1(tmpca1);
         tmpca1 = CoF(1, i) .* Mpi;
         adimat_push1(numeratorCD0);
         numeratorCD0 = numeratorCD0 + tmpca1;
         adimat_push1(tmpca1);
         tmpca1 = CoF(2, i) .* Mpi;
         adimat_push1(denominatorCD0);
         denominatorCD0 = denominatorCD0 + tmpca1;
         adimat_push1(tmpca1);
         tmpca1 = CoF(3, i) .* Mpi;
         adimat_push1(numeratorK);
         numeratorK = numeratorK + tmpca1;
      end
      adimat_push(tmpba1, tmpca1);
      tmpca1 = CoF(4, i) .* Mpi;
      adimat_push1(denominatorK);
      denominatorK = denominatorK + tmpca1;
   end
   Cd0 = numeratorCD0 ./ denominatorCD0;
   K = numeratorK ./ denominatorK;
   tmpca9 = u .^ 2;
   tmpca8 = q .^ 2;
   tmpda7 = c1 ^ 2;
   tmpda6 = c2 ^ 2;
   tmpda5 = tmpda6 .* tmpda7;
   tmpca4 = tmpda5 ./ tmpca8;
   adimat_push1(tmpca3);
   tmpca3 = K .* tmpca4;
   adimat_push1(tmpca2);
   tmpca2 = tmpca3 .* tmpca9;
   adimat_push1(tmpca1);
   tmpca1 = Cd0 + tmpca2;
   FD = q .* tmpca1;
   FT = Nzeros;
   adimat_push1(i);
   for i=1 : 6
      adimat_push1(ei);
      ei = Nzeros;
      adimat_push1(j);
      for j=1 : 6
         adimat_push1(tmpda2);
         tmpda2 = 4 + j;
         adimat_push1(tmpca1);
         tmpca1 = CoF(tmpda2, i) .* Mp{j};
         adimat_push1(ei);
         ei = ei + tmpca1;
      end
      adimat_push1(tmpda3);
      tmpda3 = i - 1;
      adimat_push1(tmpca2);
      tmpca2 = h .^ tmpda3;
      adimat_push1(tmpca1);
      tmpca1 = ei .* tmpca2;
      adimat_push1(FT);
      FT = FT + tmpca1;
   end
   adimat_push1(tmpca1);
   tmpca1 = FT .* c1;
   adimat_push1(FT);
   FT = tmpca1 / c15;
   adimat_push1(tmpca1);
   tmpca1 = sin(fpa);
   hdot = v .* tmpca1;
   adimat_push1(tmpca4);
   tmpca4 = sin(fpa);
   adimat_push1(tmpca3);
   tmpca3 = c1 .* tmpca4;
   adimat_push1(tmpca2);
   tmpca2 = FT - FD;
   adimat_push1(tmpca1);
   tmpca1 = tmpca2 ./ c2;
   vdot = tmpca1 - tmpca3;
   adimat_push1(tmpca3);
   tmpca3 = cos(fpa);
   adimat_push1(tmpca2);
   tmpca2 = u - tmpca3;
   adimat_push1(tmpca1);
   tmpca1 = c1 .* tmpca2;
   fpadot = tmpca1 ./ v;
   ydot = [hdot vdot fpadot];
   adimat_push(CoF, h, v, fpa, u, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, Nzeros, T, p, ihlow, ihhigh, rho, q, a, M, Mp, i, numeratorCD0, denominatorCD0, numeratorK, denominatorK, Mpi, Cd0, K, FD, FT, ei, j, hdot, vdot, fpadot, tmpca1, tmpca2, tmpca3, tmpca4, tmpca8, tmpca9, tmpda1, tmpda2, tmpda3, tmpda5, tmpda6, tmpda7, tmplia1, ydot, x);
   if nargin > 1
      adimat_push1(auxdata);
   end
   adimat_push1(nargin);
end

function a_x = ret_minimumClimbDynamics(a_ydot)
   tmpnargin = adimat_pop1;
   if tmpnargin > 1
      auxdata = adimat_pop1;
   end
   [x ydot tmplia1 tmpda7 tmpda6 tmpda5 tmpda3 tmpda2 tmpda1 tmpca9 tmpca8 tmpca4 tmpca3 tmpca2 tmpca1 fpadot vdot hdot j ei FT FD K Cd0 Mpi denominatorK numeratorK denominatorCD0 numeratorCD0 i Mp M a q rho ihhigh ihlow p T Nzeros c15 c14 c13 c12 c11 c10 c9 c8 c7 c6 c5 c4 c3 c2 c1 u fpa v h CoF] = adimat_pop;
   [a_h a_v a_fpa a_u a_Nzeros a_T a_p a_rho a_q a_a a_M a_Mp a_numeratorCD0 a_denominatorCD0 a_numeratorK a_denominatorK a_Mpi a_Cd0 a_K a_FD a_FT a_ei a_hdot a_vdot a_fpadot a_tmpca1 a_tmpca2 a_tmpca3 a_tmpca4 a_tmpca8 a_tmpca9 a_tmplia1 a_x] = a_zeros(h, v, fpa, u, Nzeros, T, p, rho, q, a, M, Mp, numeratorCD0, denominatorCD0, numeratorK, denominatorK, Mpi, Cd0, K, FD, FT, ei, hdot, vdot, fpadot, tmpca1, tmpca2, tmpca3, tmpca4, tmpca8, tmpca9, tmplia1, x);
   if nargin < 1
      a_ydot = a_zeros1(ydot);
   end
   a_hdot = adimat_adjsum(a_hdot, a_horzcat(a_ydot, hdot));
   a_vdot = adimat_adjsum(a_vdot, a_horzcat(a_ydot, hdot, vdot));
   a_fpadot = adimat_adjsum(a_fpadot, a_horzcat(a_ydot, hdot, vdot, fpadot));
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_fpadot ./ v));
   a_v = adimat_adjsum(a_v, adimat_adjred(v, -((tmpca1./v .* a_fpadot) ./ v)));
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, c1 .* a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   tmpca2 = adimat_pop1;
   a_u = adimat_adjsum(a_u, adimat_adjred(u, a_tmpca2));
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, -a_tmpca2));
   a_tmpca2 = a_zeros1(tmpca2);
   tmpca3 = adimat_pop1;
   a_fpa = adimat_adjsum(a_fpa, -sin(fpa) .* a_tmpca3);
   a_tmpca3 = a_zeros1(tmpca3);
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_vdot));
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, -a_vdot));
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, a_tmpca1 ./ c2));
   a_tmpca1 = a_zeros1(tmpca1);
   tmpca2 = adimat_pop1;
   a_FT = adimat_adjsum(a_FT, adimat_adjred(FT, a_tmpca2));
   a_FD = adimat_adjsum(a_FD, adimat_adjred(FD, -a_tmpca2));
   a_tmpca2 = a_zeros1(tmpca2);
   tmpca3 = adimat_pop1;
   a_tmpca4 = adimat_adjsum(a_tmpca4, adimat_adjred(tmpca4, c1 .* a_tmpca3));
   a_tmpca3 = a_zeros1(tmpca3);
   tmpca4 = adimat_pop1;
   a_fpa = adimat_adjsum(a_fpa, cos(fpa) .* a_tmpca4);
   a_tmpca4 = a_zeros1(tmpca4);
   a_v = adimat_adjsum(a_v, adimat_adjred(v, a_hdot .* tmpca1));
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, v .* a_hdot));
   tmpca1 = adimat_pop1;
   a_fpa = adimat_adjsum(a_fpa, cos(fpa) .* a_tmpca1);
   a_tmpca1 = a_zeros1(tmpca1);
   [tmpadjc1] = adimat_a_mrdividel(tmpca1, c15, a_FT);
   FT = adimat_pop1;
   a_tmpca1 = adimat_adjsum(a_tmpca1, tmpadjc1);
   a_FT = a_zeros1(FT);
   tmpca1 = adimat_pop1;
   a_FT = adimat_adjsum(a_FT, adimat_adjred(FT, a_tmpca1 .* c1));
   a_tmpca1 = a_zeros1(tmpca1);
   for i=fliplr(1 : 6)
      FT = adimat_pop1;
      a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_FT));
      tmpsa1 = a_FT;
      a_FT = a_zeros1(FT);
      a_FT = adimat_adjsum(a_FT, adimat_adjred(FT, tmpsa1));
      tmpca1 = adimat_pop1;
      a_ei = adimat_adjsum(a_ei, adimat_adjred(ei, a_tmpca1 .* tmpca2));
      a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, ei .* a_tmpca1));
      a_tmpca1 = a_zeros1(tmpca1);
      tmpca2 = adimat_pop1;
      a_h = adimat_adjsum(a_h, adimat_adjred(h, tmpda3 .* h.^(tmpda3 - 1) .* a_tmpca2));
      a_tmpca2 = a_zeros1(tmpca2);
      tmpda3 = adimat_pop1;
      for j=fliplr(1 : 6)
         ei = adimat_pop1;
         a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_ei));
         tmpsa1 = a_ei;
         a_ei = a_zeros1(ei);
         a_ei = adimat_adjsum(a_ei, adimat_adjred(ei, tmpsa1));
         tmpca1 = adimat_pop1;
         a_Mp{j} = adimat_adjsum(a_Mp{j}, adimat_adjred(Mp{j}, CoF(tmpda2, i) .* a_tmpca1));
         a_tmpca1 = a_zeros1(tmpca1);
         tmpda2 = adimat_pop1;
      end
      [j ei] = adimat_pop;
      a_Nzeros = adimat_adjsum(a_Nzeros, a_ei);
      a_ei = a_zeros1(ei);
   end
   i = adimat_pop1;
   a_Nzeros = adimat_adjsum(a_Nzeros, a_FT);
   a_q = adimat_adjsum(a_q, adimat_adjred(q, a_FD .* tmpca1));
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, q .* a_FD));
   tmpca1 = adimat_pop1;
   a_Cd0 = adimat_adjsum(a_Cd0, adimat_adjred(Cd0, a_tmpca1));
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   tmpca2 = adimat_pop1;
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, a_tmpca2 .* tmpca9));
   a_tmpca9 = adimat_adjsum(a_tmpca9, adimat_adjred(tmpca9, tmpca3 .* a_tmpca2));
   a_tmpca2 = a_zeros1(tmpca2);
   tmpca3 = adimat_pop1;
   a_K = adimat_adjsum(a_K, adimat_adjred(K, a_tmpca3 .* tmpca4));
   a_tmpca4 = adimat_adjsum(a_tmpca4, adimat_adjred(tmpca4, K .* a_tmpca3));
   a_tmpca3 = a_zeros1(tmpca3);
   a_tmpca8 = adimat_adjsum(a_tmpca8, adimat_adjred(tmpca8, -((tmpda5./tmpca8 .* a_tmpca4) ./ tmpca8)));
   a_q = adimat_adjsum(a_q, adimat_adjred(q, 2 .* q.^1 .* a_tmpca8));
   a_u = adimat_adjsum(a_u, adimat_adjred(u, 2 .* u.^1 .* a_tmpca9));
   a_numeratorK = adimat_adjsum(a_numeratorK, adimat_adjred(numeratorK, a_K ./ denominatorK));
   a_denominatorK = adimat_adjsum(a_denominatorK, adimat_adjred(denominatorK, -((numeratorK./denominatorK .* a_K) ./ denominatorK)));
   a_numeratorCD0 = adimat_adjsum(a_numeratorCD0, adimat_adjred(numeratorCD0, a_Cd0 ./ denominatorCD0));
   a_denominatorCD0 = adimat_adjsum(a_denominatorCD0, adimat_adjred(denominatorCD0, -((numeratorCD0./denominatorCD0 .* a_Cd0) ./ denominatorCD0)));
   for i=fliplr(1 : 6)
      denominatorK = adimat_pop1;
      a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_denominatorK));
      tmpsa1 = a_denominatorK;
      a_denominatorK = a_zeros1(denominatorK);
      a_denominatorK = adimat_adjsum(a_denominatorK, adimat_adjred(denominatorK, tmpsa1));
      tmpca1 = adimat_pop1;
      a_Mpi = adimat_adjsum(a_Mpi, adimat_adjred(Mpi, CoF(4, i) .* a_tmpca1));
      a_tmpca1 = a_zeros1(tmpca1);
      tmpba1 = adimat_pop1;
      if tmpba1 == 1
         numeratorK = adimat_pop1;
         a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_numeratorK));
         tmpsa1 = a_numeratorK;
         a_numeratorK = a_zeros1(numeratorK);
         a_numeratorK = adimat_adjsum(a_numeratorK, adimat_adjred(numeratorK, tmpsa1));
         tmpca1 = adimat_pop1;
         a_Mpi = adimat_adjsum(a_Mpi, adimat_adjred(Mpi, CoF(3, i) .* a_tmpca1));
         a_tmpca1 = a_zeros1(tmpca1);
         denominatorCD0 = adimat_pop1;
         a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_denominatorCD0));
         tmpsa1 = a_denominatorCD0;
         a_denominatorCD0 = a_zeros1(denominatorCD0);
         a_denominatorCD0 = adimat_adjsum(a_denominatorCD0, adimat_adjred(denominatorCD0, tmpsa1));
         tmpca1 = adimat_pop1;
         a_Mpi = adimat_adjsum(a_Mpi, adimat_adjred(Mpi, CoF(2, i) .* a_tmpca1));
         a_tmpca1 = a_zeros1(tmpca1);
         numeratorCD0 = adimat_pop1;
         a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_numeratorCD0));
         tmpsa1 = a_numeratorCD0;
         a_numeratorCD0 = a_zeros1(numeratorCD0);
         a_numeratorCD0 = adimat_adjsum(a_numeratorCD0, adimat_adjred(numeratorCD0, tmpsa1));
         tmpca1 = adimat_pop1;
         a_Mpi = adimat_adjsum(a_Mpi, adimat_adjred(Mpi, CoF(1, i) .* a_tmpca1));
         a_tmpca1 = a_zeros1(tmpca1);
      end
      Mpi = adimat_pop1;
      a_Mp{i} = adimat_adjsum(a_Mp{i}, a_Mpi);
      a_Mpi = a_zeros1(Mpi);
   end
   i = adimat_pop1;
   a_Nzeros = adimat_adjsum(a_Nzeros, a_denominatorK);
   a_Nzeros = adimat_adjsum(a_Nzeros, a_numeratorK);
   a_Nzeros = adimat_adjsum(a_Nzeros, a_denominatorCD0);
   a_Nzeros = adimat_adjsum(a_Nzeros, a_numeratorCD0);
   for i=fliplr(1 : 6)
      Mp = adimat_pop_cell_index(Mp, i);
      a_tmplia1 = adimat_adjsum(a_tmplia1, adimat_adjred(tmplia1, adimat_adjreshape(tmplia1, a_Mp{i})));
      a_Mp = a_zeros_cell_index(a_Mp, Mp, i);
      tmplia1 = adimat_pop1;
      a_M = adimat_adjsum(a_M, adimat_adjred(M, tmpda1 .* M.^(tmpda1 - 1) .* a_tmplia1));
      a_tmplia1 = a_zeros1(tmplia1);
      tmpda1 = adimat_pop1;
   end
   a_v = adimat_adjsum(a_v, adimat_adjred(v, a_M ./ a));
   a_a = adimat_adjsum(a_a, adimat_adjred(a, -((v./a .* a_M) ./ a)));
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, c14 .* a_a));
   tmpca1 = adimat_pop1;
   a_T = adimat_adjsum(a_T, 0.5 .* a_tmpca1./sqrt(T));
   a_tmpca1 = a_zeros1(tmpca1);
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_q .* c13));
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, a_tmpca1 .* v));
   a_v = adimat_adjsum(a_v, adimat_adjred(v, tmpca2 .* a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   tmpca2 = adimat_pop1;
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, a_tmpca2 .* v));
   a_v = adimat_adjsum(a_v, adimat_adjred(v, tmpca3 .* a_tmpca2));
   a_tmpca2 = a_zeros1(tmpca2);
   tmpca3 = adimat_pop1;
   a_rho = adimat_adjsum(a_rho, adimat_adjred(rho, 0.5 .* a_tmpca3));
   a_tmpca3 = a_zeros1(tmpca3);
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, a_rho ./ T));
   a_T = adimat_adjsum(a_T, adimat_adjred(T, -((tmpca1./T .* a_rho) ./ T)));
   tmpca1 = adimat_pop1;
   a_p = adimat_adjsum(a_p, adimat_adjmultr(p, c3, a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   p = adimat_pop_index1(p, ihhigh);
   a_tmplia1 = adimat_adjsum(a_tmplia1, adimat_adjred(tmplia1, adimat_adjreshape(tmplia1, a_p(ihhigh))));
   a_p = a_zeros_index1(a_p, p, ihhigh);
   tmplia1 = adimat_pop1;
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjmultr(tmpca1, c10, a_tmplia1));
   a_tmplia1 = a_zeros1(tmplia1);
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, exp(tmpca2) .* a_tmpca1);
   a_tmpca1 = a_zeros1(tmpca1);
   tmpca2 = adimat_pop1;
   a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, -a_tmpca2));
   a_tmpca2 = a_zeros1(tmpca2);
   a_h(ihhigh) = adimat_adjsum(a_h(ihhigh), adimat_adjmultr(h(ihhigh), c12, a_tmpca3));
   T = adimat_pop_index1(T, ihhigh);
   a_T = a_zeros_index1(a_T, T, ihhigh);
   p = adimat_pop_index1(p, ihlow);
   a_tmplia1 = adimat_adjsum(a_tmplia1, adimat_adjred(tmplia1, adimat_adjreshape(tmplia1, a_p(ihlow))));
   a_p = a_zeros_index1(a_p, p, ihlow);
   tmplia1 = adimat_pop1;
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjmultr(tmpca1, c6, a_tmplia1));
   a_tmplia1 = a_zeros1(tmplia1);
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, c8 .* tmpca2.^(c8 - 1) .* a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   a_T(ihlow) = adimat_adjsum(a_T(ihlow), adimat_adjred(T(ihlow), a_tmpca2 ./ c7));
   T = adimat_pop_index1(T, ihlow);
   a_tmplia1 = adimat_adjsum(a_tmplia1, adimat_adjred(tmplia1, adimat_adjreshape(tmplia1, a_T(ihlow))));
   a_T = a_zeros_index1(a_T, T, ihlow);
   a_tmpca1 = adimat_adjsum(a_tmpca1, adimat_adjred(tmpca1, -a_tmplia1));
   a_h(ihlow) = adimat_adjsum(a_h(ihlow), adimat_adjmultr(h(ihlow), c5, a_tmpca1));
   a_Nzeros = adimat_adjsum(a_Nzeros, a_p);
   a_Nzeros = adimat_adjsum(a_Nzeros, a_T);
   a_h = adimat_adjsum(a_h, adimat_adjred(h, a_Nzeros .* 0));
   a_x(:, 4) = adimat_adjsum(a_x(:, 4), a_u);
   a_x(:, 3) = adimat_adjsum(a_x(:, 3), a_fpa);
   a_x(:, 2) = adimat_adjsum(a_x(:, 2), a_v);
   a_x(:, 1) = adimat_adjsum(a_x(:, 1), a_h);
end
