INSTALLATION INSTRUCTIONS FOR THE SLDRIVER PACKAGE
--------------------------------------------------
(Fortran 90 version 4.1)
The package comes as an MS-DOS 3.5 in. diskette, containing both a PC and
a Unix version of the files.

1.Installation files for PC
  -------------------------
  The diskette contains a self-extracting compressed file SLZIP.EXE created
  by the PKZIP package, version 2.04g, plus this READ.ME file. It takes
  up about 0.5Mb, while the uncompressed files occupy around
  1.5Mb. The directory structure should be re-created under a
  subdirectory, for instance C:\SL, by moving to that directory and
  issuing the command (the -d is essential!)
                     a:slzip -d

  The resulting directory tree is shown below.
  C:\SL
  |   SLSETUP.BAT             ... Batchfile to compile all code under
  |                               Salford FTN90
  |   SLPKZIP.BAT             ... Batchfile to re-create archive disk
  |
  +---SLDRIVER                ... The main code of the package
  |   |   BATCHIO.FOR         ... 'batch' version of SAFEIO
  |   |   DBMOD.FOR           ... database routines module DBMOD
  |   |   SAFEIO.FOR          ... safe interactive input module SAFEIO
  |   |   SLCONSTS.FOR        ... global constants used by SLDRIVER
  |   |   SLDRIVER.FOR        ... main program & module SLMOD
  |   |   SLPSET.FOR          ... common variables: current SLDRIVER state
  |   |   SLTSTPAK.FOR        ... general interface of problems to solvers
  |   |   SLTSTVAR.FOR        ... common variables: current SLTSTPAK state
  |   |   SLUTIL.FOR          ... utility routines module SLUTIL
  |   |   SOLVRS.FOR          ... specific solvers interface module SOLVRS
  |   |
  |   +---STANDARD            ... To hold output from STANDARD program
  |   |   |
  |   |   \---TRUEVALS
  |   |           Files EVTRU.nn, EFTRU.nn of "true" ev & efn data
  |   |
  |   \---SAMPLE              ... To hold output from SAMPLE program
  |       |
  |       \---TRUEVALS
  |
  +---PROBSETS
  |       STANDARD.FOR        ... Include this problem set to make STANDARD.EXE
  |       SAMPLE.FOR          ... and this one to make SAMPLE.EXE
  |
  +---SLEIGN                  ... Bailey-Gordon-Shampine package
  |       SLEIGN.FOR
  |
  +---D02KEF                  ... Pryce package, NAG 1978
  |       D02KEF.FOR              (not used in current SLDRIVER)
  |
  +---MARCOPAK                ... Marletta-Pryce package
  |       MARCOPAK.FOR
  |
  +---SLEDGE                  ... Fulton-Pruess package
  |       SLEDGE.FOR
  |
  +---SLEIGN2                 ... Bailey-Everitt-Zettl revision of SLEIGN
  |       SLEIGN2.FOR
  |       |
  |       \---EXTRAS
  |
  \---TEX                     ... Documentation files
          SLTSTPAK.TEX        ... ACM Trans. Math. Softw. articles
          SLTSTALG.TEX            on SLTSTPAK
          SLDRIVER.TEX        ... User guide
          plus various auxiliary (.bbl, .sty, .eps etc) files
2.Installation files for Unix
  ---------------------------
  The diskette contains a compressed file SLTAR.Z which is the result of
  processing the above directory structure using DOS versions of the
  utilities dos2unix (to convert DOS newline CR-LF to Unix newline LF),
  tar (to put the whole file structure into one file) and gzip (to
  compress the result). Owing to an apparent bug in the tar program I was
  unable to convert the filenames to lower-case, which is inconvenient but
  not serious. To install the package under Unix:
   - Mount the diskette and copy SLTAR.Z to a suitable directory, say sl.
   - Use gzip -d or equivalent, to decompress.
   - Use tar -x to recreate the directory structure under the sl directory.

  I successfully did this on a Sun under Solaris.

3.Modifications to the source code
  --------------------------------
  The source has proved almost platform-independent but will need, at
  least, the following adjustments:

  - The program creates files in subdirectories and has to be aware of the
    path-naming conventions used by the host operating system. This is
    encapsulated in routine ADDDIR in SLDRIVER.FOR. In this, change the
    data initialization of the variable OPSYS from 0 to whatever is
    appropriate for your system. If you do not, the program will still
    work but it will ask the user for this information at run time.

  - Each of the solvers has settings of machine precision and other
    parameters of the arithmetic. With the help of the solver
    documentation, make any needed changes.

  - In the BATCHIO version of SAFEIO, there are lines in routine SPAUSE
    which trap a CTRL-C at the keyboard when using the Salford FTN90
    system. If using another compiler, comment out these lines or replace
    the call to GET_KEY1@ by the appropriate code for your system.

4.Variants
  --------
  Alternative versions of the program are as follows:
  - To create the SAMPLE program replace the object file of the STANDARD
    problem set by the SAMPLE file when linking.

  - To create the `batch' program replace the SAFEIO object file by
    the BATCHIO file when linking.

  This gives 4 combinations, STANDARD.EXE, SAMPLE.EXE, BSTANDRD.EXE and
  BSAMPLE.EXE

5.Creating the executables
  ------------------------
  The source files must be compiled in an order that respects the module
  dependencies. (The SL-solver codes do not depend on anything else but
  they must be compiled before SOLVRS.FOR.)

  Two files are provided which help to automate the process under the
  Salford Fortran 90 system and should be easily converted for other
  systems:

  SLSETUP.BAT is a MS-DOS script in the toplevel directory. It must be
    invoked from within that directory. If all goes well, this compiles
    all source, forms DLLs from the solvers (check for address conflicts
    with any DLLs of your own!) and links STANDARD.EXE, SAMPLE.EXE,
    BSTANDRD.EXE and BSAMPLE.EXE

  MAKEFILE in the SLDRIVER directory uses MK, the Salford version of the
    'make' utility. It must be invoked from within that directory.
    E.g. typing
        mk standard.exe
    creates or updates STANDARD.EXE, while
        mk standard
    runs it, creating it if necessary.

  Since the source files live in several directories and contain
  modules, we must be careful to make the module information (.MOD files
  in Salford system) accessible to the compiler. This has been done by
  always invoking the compiler from the SLDRIVER directory so that all
  the .MOD files are put in this directory.

6.A TRIAL RUN
  Each run of the interactive version of the program produces a
  'playback' file PLAYBACK.DAT containing the sequence of commands and
  data input by the user, which can be re-input to the batch version of
  the program.

  File SAMPLRUN.DAT in the SLDRIVER directory is a copy of the playback
  file produced by a trial run of STANDARD.EXE. It tests each of the
  four solvers in turn on Problem 1 in the 'Standard' problem set: first
  to find eigenvalues of indices 0 to 10; then to find eigenvalues and
  eigenfunction values of indices 9 to 10. Finally it tests SLEDGE's
  Spectral Density Function facility on Problem 48.

  Type
    bstandrd < samplrun.dat
  to test the program bstandrd.exe. Then type
    standard
  to test the interactive version, and give it the same sequence of
  inputs (you have to press ENTER at various points where the batch
  version does not require this.) In either case you should see output
  essentially identical to that in the file SAMPLRUN.OUT in the SLDRIVER
  directory.

7.DOCUMENTATION
  This is in the LATEX directory. Compiling SLDRIVER.TEX (a LaTeX 2.09
  document) will produce the user guide.
