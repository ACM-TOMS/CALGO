.TH FPTHRD_ATTR 3F "" "FPTHRD API"

.SH NAME
fpthrd_attr_init, fpthrd_attr_destroy, fpthrd_attr_setstacksize, fpthrd_attr_getstacksize, fpthrd_attr_setdetachstate, fpthrd_attr_getdetachstate \- Thread creation attributes

.SH SYNOPSIS
.B USE fpthrd

.BI "CALL fpthrd_attr_init(" attr " [, " ierr "])"

.BI "CALL fpthrd_attr_destroy(" attr " [, " ierr "])"

.BI "CALL fpthrd_attr_setstacksize(" attr ", " stacksize " [, "
.IB ierr "])"

.BI "CALL fpthrd_attr_getstacksize(" attr ", " stacksize " [, "
.IB ierr "])"

.BI "CALL fpthrd_attr_setdetachstate(" attr ", " state " [, "
.IB ierr "])"

.BI "CALL fpthrd_attr_getdetachstate(" attr ", " state " [, "
.IB ierr "])"

.BI "TYPE(FPTHRD_ATTR_T) :: " attr
.br
.BI "INTEGER :: " stacksize ", " state ", " 
.IB stackaddr ", " ierr


.SH DESCRIPTION

Setting attributes for threads is achieved by filling a
thread attribute object 
.I "attr"
of type 
.BR "FPTHRD_ATTR_T" ,
then passing it as
the second argument to 
.BR "fpthrd_create" (3F).
(Passing 
.B "NULL"
as the second parameter to 
.B "fpthrd_create"
is equivalent to
passing a thread attribute object with all attributes set to their
default values.)

.B "fpthrd_attr_init"
initializes the thread attribute object 
.I "attr"
and
fills it with default values for the attributes. (The relevant default 
attribute values are listed below.)

Each attribute 
.I "attrname"
(see below for a list of all attributes) can
be individually set using the routine 
.BI "fpthrd_attr_set" "attrname"
and retrieved using the routine 
.BI "fpthrd_attr_get" "attrname" .

.B "fpthrd_attr_destroy"
uninitializes a thread attribute object, which
must not be reused until it is reinitialized. 

Attribute objects are consulted only when creating a new thread. The
same attribute object can be used for creating several
threads. Modifying an attribute object after a call to
.B "fpthrd_create"
does not change the attributes of the thread
previously created.

The following thread attributes 
.RI ( "attrname" )
are supported:

.SS stacksize

Control the minimum number of bytes used by a thread
for its stack.
The default stack size may be retrieved from an intialized
attribute object.

.SS detachstate

Control whether the thread is created in the joinable state 
.RB ( "FPTHRD_CREATE_JOINABLE" )
or in the detached state
.RB ( "FPTHRD_CREATE_DETACHED" ).

Default value: 
.BR "FPTHRD_CREATE_JOINABLE" .

In the joinable state, another thread can synchronize on the thread
termination and recover its termination code using 
.BR "fpthrd_join" (3F).

In the detached state, the thread resources are immediately freed when
it terminates, but 
.BR "fpthrd_join" (3F)
cannot be used to synchronize on
the thread termination.

A thread created in the joinable state can later be put in the
detached state using 
.BR "fpthrd_detach" (3F).

.SH "DIAGNOSTICS"

All routines return 0 in the optional
.I ierr
on success and a non-zero error code on error.
On success, the
.BI "fpthrd_attr_get" "attrname"
routines also return the
current value of the attribute
.I "attrname"
in their second argument.

The 
.B "fpthrd_attr_setstacksize"
routine returns the following error code on error:
.RS
.TP
.B "EINVAL"
The stack size specified by 
.I "stacksize"
is too small.
.RE

The 
.B "fpthrd_attr_setdetachstate"
routine returns the following error
code on error:
.RS
.TP
.B "EINVAL"
The specified 
.I "detachstate"
is not one of 
.B "FPTHRD_CREATE_JOINABLE"
or
.BR "FPTHRD_CREATE_DETACHED" .
.RE


.SH "SEE ALSO"
.BR "fpthrd_create" (3F),
.BR "fpthrd_join" (3F),
.BR "fpthrd_detach" (3F).
