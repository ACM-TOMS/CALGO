function [p,z] = fibsq16
%
%  test polynomial suggested by Goedecker
%  square of Fibocacci polynomial
%
    n = 16;
    p = [-1,ones(1,n)];
    p = conv(p,p);
    z = [-.9349216524104182, ... 
        -.8673161854070643-.3515310211756676*i, ... 
        -.8673161854070643+.3515310211756676*i, ... 
        -.6736211580446324-.6537256870201036*i, ... 
        -.6736211580446324+.6537256870201036*i, ... 
        -.3799784643132753-.8637046142557905*i, ... 
        -.3799784643132753+.8637046142557905*i, ... 
        -.2606735312578153e-1-.9505412093420680*i, ... 
        -.2606735312578153e-1+.9505412093420680*i, ... 
        .3400699024566086-.8988910323302336*i, ... 
        .3400699024566086+.8988910323302336*i, ... 
        .6677317831101087-.7098987824372997*i, ... 
        .6677317831101087+.7098987824372997*i, ... 
        .9066499318552733-.3989926258132711*i, ... 
        .9066499318552733+.3989926258132711*i, ... 
        1.999984739347944];
    z = [z',2*ones(n,1)];
    if norm(imag(z(:,1))) == 0 
        fprintf('                 roots         multiplicities\n');
        fprintf('\n');
        fprintf('%25.15f \t \t \t %3g \n', z');
    else
        fprintf('                 roots ')
        fprintf('   \t\t\t\t\t\t     multiplicities\n');
        fprintf('\n');
        fprintf('%22.15f + %22.15f i \t \t %3g \n', ...
            [real(z(:,1)),imag(z(:,1)),z(:,2)]');

    end;    
