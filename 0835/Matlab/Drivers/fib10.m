function [p,z] = fib10
%
%  test polynomial suggested by Goedecker
%
    n = 10;
    p = [-1,ones(1,n)];
    z = [...
        -.8990310941957183,   1; ...
        -.7399333995096503-.5167965365015562*i, 1; ...
        -.7399333995096503+.5167965365015562*i, 1; ...
        -.3130259587265545-.8583547482505247*i, 1; ...
        -.3130259587265545+.8583547482505247*i, 1; ...
        .2462366020696891-.9013280059509374*i, 1; ...
        .2462366020696891+.9013280059509374*i, 1; ...
        .7567289869093243-.6038877405652167*i, 1; ...
        .7567289869093243+.6038877405652167*i, 1; ...
        1.999018632710101, 1; ];
    if norm(imag(z(:,1))) == 0 
        fprintf('                 roots         multiplicities\n');
        fprintf('\n');
        fprintf('%25.15f \t \t \t %3g \n', z');
    else
        fprintf('                 roots ')
        fprintf('   \t\t\t\t\t\t     multiplicities\n');
        fprintf('\n');
        fprintf('%22.15f + %22.15f i \t \t %3g \n', ...
            [real(z(:,1)),imag(z(:,1)),z(:,2)]');

    end;
