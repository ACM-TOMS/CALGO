gmis: FORTRAN subroutines for computing approximate solutions to the
the maximum independent set problem using GRASP

authors: M. G. C. Resende, T. A. Feo, and S. H. Smith

corresponding author: Mauricio G. C. Resende 
                      Algorithms & Optimization Research Department
                      AT&T Labs Research
                      Room C241
                      180 Park Aveneue
                      Florham Park, NJ 07932 USA
                      mgcr@research.att.com
                      http://www.research.att.com/~mgcr

See technical report: M.G.C. Resende, T.A. Feo, S.H. Smith, "FORTRAN
subroutines for approximate solution of the maximum independent
set problem using GRASP," AT&T Labs Research, Florham Park, NJ, 1997,
http://www.research.att.com/~mgcr/doc/gmissub.ps.Z.

The following files are in the distribution:

Makefile   : makefile
driver.f   : driver for gmis.f
gmis.f     : subroutines for optimization
sample.dat : sample input file
sample.out : program output for input sample.sat
gngrf.f    : random graph generator


USAGE

The subroutines in file gmis.f carry out the approximate optimization of
the maximum independent set problem.  The user interface with them is
subroutine gmis, which must be called from a driver program.  Several
variables need to be set in the driver program prior to calling gmis:

* alpha: GRASP parameter alpha (real)

* beta: conditioning parameter beta (real)

* in: FORTRAN in device number (integer)

* ittype: indicator of type of iteration report (integer)
   * silent -- ittype = 0
   * show only improvements -- ittype = 1
   * show all iterations -- ittype = 2

* look4: GRASP returns if independent set of size at least equal 
         to look4 less or equal to nnode0 is found (integer)

* lstype: type of local search (integer)
   * no local search -- lstype = 0
   * (1,2)-exchange local search -- lstype = 1
   * (2,3)-exchange local search -- lstype = 2

* lswhen: when local search is done (integer)
   * every GRASP iteration -- lswhen = 1
   * only when phase 1 solution is greater than or equal to the average
     phase 1 solution -- lswhen = 0

* maxa: array dimension, maximum number of edges (integer)

* maxitr: maximum number of GRASP iterations (integer)

* maxn: array dimension, maximum number of vertices (integer)

* maxt: array dimension, maximum number of tuples (integer)

* maxtd: array dimension, maximum tuple dimension (integer)

* nlowdg: number of vertices of lowest degrees used to 
          form tuples (integer)

* out: FORTRAN output device number (integer)

* seed: seed for random number generator in [0,2^{31}-1] (integer)

* tupdim: tuple dimension (integer)

* tuplmt: maximum number of tuples allowed (integer)

The above parameters can be initialized to default values
by calling subroutine deflt prior to calling gmis.

The problem input is defined by the number of vertices (nnode0),
the number of edges (narcs0), and two arrays:

     * node1: vertex 1 of edge (dimension maxa)
     * node2: vertex 2 of edge (dimension maxa)

The output is returned to the driver program in the
following array:

     * kset0: best set of independent vertices (dimension maxn)

and variables:

     * biter: GRASP iteration best solution was found
     * btup: tuple number best solution was found
     * errcnd: error condition
     * nkset0: size of best independent set

The sample driver program for gmis included in the distribution,
is set for graphs having at most 1000 vertices and 10000 edges.
All variables and arrays needed by subroutine gmis are defined. 
Subroutines deflt, readp, iniprt, outsol, and errprt} are,
respectively, examples of code that can be used for setting default 
parameter values, inputting the problem, printing an initial report,
printing the final report, and printing an error report. 

As an example of the input file needed by the code, as well as the output
generated by it, consider the maximum independent set instance 
whose input file (sample.dat) is in the distribution.  This graph has 
50 nodes and 619 arcs. The optimal solution for this example is 7 and 
can be found using the exact algorithm of Carraghan and Pardalos 
(Carraghan and Pardalos, 1990).  To attempt to find the largest independent 
set, we set the parameter look4 to 50, the number of nodes in the graph.
After 1000 GRASP iterations, the code produced the output shown in the 
file sample.out of the distribution.  An independent set of size 7 was 
found in the first GRASP iteration.  The code ran the full 1000 iterations 
because there was no way to to know, a priori, that the set found in 
iteration 1 would be the largest.

History:
12 Nov 1996: Initial version of gmis submitted to ACM TOMS.
03 Nov 1997: Paper and code revised.
16 Mar 1998: Final revisions submitted to ACM TOMS.
16 Mar 1998: Current version.
