      SUBROUTINE SCALE1 ( XMIN, XMAX, N, XMINP, XMAXP, DIST )
C  ANSI FORTRAN
C  GIVEN XMIN, XMAX AND N, SCALE1 FINDS A NEW RANGE XMINP AND
C  XMAXP DIVISIBLE INTO APPROXIMATELY N LINEAR INTERVALS
C  OF SIZE DIST.
C  VINT IS AN ARRAY OF ACCEPTABLE VALUES FOR DIST (TIMES
C  AN INTEGER POWER OF 10).
C  SQR IS AN ARRAY OF GEOMETRIC MEANS OF ADJACENT VALUES
C  OF VINT.  IT IS USED AS BREAK POINTS TO DETERMINE
C  WHICH VINT VALUE TO ASSIGN TO DIST.
C     .. Scalar Arguments ..
      REAL DIST,XMAX,XMAXP,XMIN,XMINP
      INTEGER N
C     ..
C     .. Local Scalars ..
      REAL A,AL,B,DEL,FM1,FM2,FN
      INTEGER I,M1,M2,NAL
C     ..
C     .. Local Arrays ..
      REAL SQR(3),VINT(4)
C     ..
C     .. Intrinsic Functions ..
      INTRINSIC ABS,LOG10,REAL
      DATA VINT(1), VINT(2), VINT(3), VINT(4) / 1., 2., 5., 10. /
      DATA SQR(1), SQR(2), SQR(3) / 1.414214, 3.162278, 7.071068 /
C  CHECK WHETHER PROPER INPUT VALUES WERE SUPPLIED.
      IF ( XMIN .LT. XMAX .AND. N .GT. 0 ) GO TO 10
      WRITE ( 6, 99999 )
99999 FORMAT ( " IMPROPER INPUT SUPPLIED TO SCALE1" )
      RETURN
C  DEL ACCOUNTS FOR COMPUTER ROUND-OFF.
C  DEL SHOULD BE GREATER THAN THE ROUND-OFF EXPECTED FROM
C  A DIVISION AND REAL OPERATION.  IT SHOULD BE LESS THAN
C  THE MINIMUM INCREMENT OF THE PLOTTING DEVICE USED BY
C  THE MAIN PROGRAM (IN.) DIVIDED BY THE PLOT SIZE (IN.)
C  TIMES NUMBER OF INTERVALS N.
10    DEL = .00002
      FN = N
C  FIND APPROXIMATE INTERVAL SIZE A.
      A = ( XMAX - XMIN ) / FN
      AL = LOG10 ( A )
      NAL = AL
      IF ( A .LT. 1. ) NAL = NAL - 1
C  A IS SCALED INTO VARIABLE NAMED B BETWEEN 1 AND 10.
      B = A / 10.**NAL
C  THE CLOSEST PERMISSIBLE VALUE FOR B IS FOUND.
      DO 20 I = 1, 3
        IF ( B .LT. SQR ( I ) ) GO TO 30
20    CONTINUE
      I = 4
C  THE INTERVAL SIZE IS COMPUTED.
30    DIST = VINT(I) * 10.**NAL
      FM1 = XMIN / DIST
      M1 = FM1
      IF ( FM1 .LT. 0. ) M1 = M1 - 1
      IF ( ABS ( REAL ( M1 ) + 1. - FM1 ) .LT. DEL ) M1 = M1 + 1
C  THE NEW MINIMUM AND MAXIMUM LIMITS ARE FOUND.
      XMINP = DIST * REAL ( M1 )
      FM2 = XMAX / DIST
      M2 = FM2 + 1.
      IF ( FM2 .LT. ( -1. ) ) M2 = M2 - 1
      IF ( ABS ( FM2 + 1. - REAL ( M2 ) ) .LT. DEL ) M2 = M2 - 1
      XMAXP = DIST * REAL ( M2 )
C  ADJUST LIMITS TO ACCOUNT FOR ROUND-OFF IF NECESSARY.
      IF ( XMINP .GT. XMIN ) XMINP = XMIN
      IF ( XMAXP .LT. XMAX ) XMAXP = XMAX
      RETURN
      END
      SUBROUTINE SCALE2 ( XMIN, XMAX, N, XMINP, XMAXP, DIST )
C  ANSI FORTRAN
C  GIVEN XMIN, XMAX AND N, SCALE2 FINDS A NEW RANGE XMINP AND
C  XMAXP DIVISIBLE INTO EXACTLY N LINEAR INTERVALS OF SIZE
C  DIST, WHERE N IS GREATER THAN 1.
C     .. Scalar Arguments ..
      REAL DIST,XMAX,XMAXP,XMIN,XMINP
      INTEGER N
C     ..
C     .. Local Scalars ..
      REAL A,AL,B,DEL,FM1,FM2,FN
      INTEGER I,M1,M2,NAL,NP,NX
C     ..
C     .. Local Arrays ..
      REAL VINT(5)
C     ..
C     .. Intrinsic Functions ..
      INTRINSIC ABS,LOG10,REAL
      DATA VINT(1), VINT(2), VINT(3), VINT(4), VINT(5) / 1., 2.,
     &  5., 10., 20. /
C  CHECK WHETHER PROPER INPUT VALUES WERE SUPPLIED.
      IF ( XMIN .LT. XMAX .AND. N .GT. 0 ) GO TO 10
      WRITE ( 6, 99999 )
99999 FORMAT ( " IMPROPER INPUT SUPPLIED TO SCALE2" )
      RETURN  
10    DEL = .00002
      FN = N
C  FIND APPROXIMATE INTERVAL SIZE A.
      A = ( XMAX - XMIN ) / FN
      AL = LOG10 ( A )
      NAL = AL
      IF ( A .LT. 1. ) NAL = NAL - 1
C  A IS SCALED INTO VARIABLE NAMED B BETWEEN 1 AND 10.
      B = A / 10.**NAL
C  THE CLOSEST PERMISSIBLE VALUE FOR B IS FOUND.
      DO 20 I = 1, 3
        IF ( B .LT. ( VINT(I) + DEL ) ) GO TO 30
20    CONTINUE
      I = 4
C  THE INTERVAL SIZE IS COMPUTED.
30    DIST = VINT(I) * 10.**NAL
      FM1 = XMIN / DIST
      M1 = FM1
      IF ( FM1 .LT. 0. ) M1 = M1 - 1
      IF ( ABS ( REAL ( M1 ) + 1. - FM1 ) .LT. DEL ) M1 = M1 + 1
C  THE NEW MINIMUM AND MAXIMUM LIMITS ARE FOUND.
      XMINP = DIST * REAL ( M1 )
      FM2 = XMAX / DIST
      M2 = FM2 + 1.
      IF ( FM2 .LT. ( -1. ) ) M2 = M2 - 1
      IF ( ABS ( FM2 + 1. - REAL ( M2 ) ) .LT. DEL ) M2 = M2 - 1
      XMAXP = DIST * REAL ( M2 )
C  CHECK WHETHER A SECOND PASS IS REQUIRED.
      NP = M2 - M1
      IF ( NP .LE. N ) GO TO 40
      I = I + 1
      GO TO 30
40    NX = ( N - NP ) / 2
      XMINP = XMINP - REAL ( NX ) * DIST
      XMAXP = XMINP + REAL ( N ) * DIST
C  ADJUST LIMITS TO ACCOUNT FOR ROUND-OFF IF NECESSARY.
      IF ( XMINP .GT. XMIN ) XMINP = XMIN
      IF ( XMAXP .LT. XMAX ) XMAXP = XMAX
      RETURN
      END
      SUBROUTINE SCALE3 ( XMIN, XMAX, N, XMINP, XMAXP, DIST )
C  ANSI FORTRAN
C  GIVEN XMIN, XMAX AND N, WHERE N IS GREATER THAN 1, SCALE3
C  FINDS A NEW RANGE XMINP AND XMAXP DIVISIBLE INTO EXACTLY 
C  N LOGARITHMIC INTERVALS, WHERE THE RATIO OF ADJACENT
C  UNIFORMLY SPACED SCALE VALUES IS DIST.
C     .. Scalar Arguments ..
      REAL DIST,XMAX,XMAXP,XMIN,XMINP
      INTEGER N
C     ..
C     .. Local Scalars ..
      REAL A,AL,B,DEL,DISTL,FM1,FM2,FN,XMAXL,XMINL
      INTEGER I,M1,M2,NAL,NP,NX
C     ..
C     .. Local Arrays ..
      REAL VINT(11)
C     ..
C     .. Intrinsic Functions ..
      INTRINSIC ABS,LOG10,REAL
      DATA VINT(1), VINT(2), VINT(3), VINT(4), VINT(5), VINT(6),
     &  VINT(7), VINT(8), VINT(9), VINT(10), VINT(11) / 10., 9.,
     &  8., 7., 6., 5., 4., 3., 2., 1., .5 /
C  CHECK WHETHER PROPER INPUT VALUES WERE SUPPLIED.
      IF ( XMIN .LT. XMAX .AND. N .GT. 1 .AND. XMIN .GT. 0. ) GO TO 10
      WRITE ( 6, 99999 )
99999 FORMAT ( " IMPROPER INPUT SUPPLIED TO SCALE3" )
      RETURN  
10    DEL = .00002
C  VALUES ARE TRANSLATED FROM THE LINEAR INTO LOGARITHMIC
C  REGION.
      XMINL = LOG10 ( XMIN )
      XMAXL = LOG10 ( XMAX )
      FN = N
C  FIND APPROXIMATE INTERVAL SIZE A.
      A = ( XMAXL - XMINL ) / FN
      AL = LOG10 ( A )
      NAL = AL
      IF ( A .LT. 1. ) NAL = NAL - 1
C  A IS SCALED INTO VARIABLE NAMED B BETWEEN 1 AND 10.
      B = A / 10.**NAL
C  THE CLOSEST PERMISSIBLE VALUE FOR B IS FOUND.
      DO 20 I = 1, 9
        IF ( B .LT. ( 10. / VINT(I) + DEL ) ) GO TO 30
20    CONTINUE
      I = 10
C  THE INTERVAL SIZE IS COMPUTED.
30    DISTL = 10.**( NAL + 1 ) / VINT(I)
      FM1 = XMINL / DISTL
      M1 = FM1
      IF ( FM1 .LT. 0. ) M1 = M1 - 1
      IF ( ABS ( REAL ( M1 ) + 1. - FM1 ) .LT. DEL ) M1 = M1 + 1
C  THE NEW MINIMUM AND MAXIMUM LIMITS ARE FOUND.
      XMINP = DISTL * REAL ( M1 )
      FM2 = XMAXL / DISTL
      M2 = FM2 + 1.
      IF ( FM2 .LT. ( -1. ) ) M2 = M2 - 1
      IF ( ABS ( FM2 + 1. - REAL ( M2 ) ) .LT. DEL ) M2 = M2 - 1
      XMAXP = DISTL + REAL ( M2 )
      NP = M2 - M1
C  CHECK WHETHER ANOTHER PASS IS NECESSARY.
      IF ( NP .LE. N ) GO TO 40
      I = I + 1
      GO TO 30
40    NX = ( N - NP ) / 2
      XMINP = XMINP - REAL ( NX ) * DISTL
      XMAXP = XMINP + REAL ( N  ) * DISTL
C  VALUES ARE TRANSLATED FROM THE LOGARITHMIC INTO THE LINEAR
C  REGION.
      DIST = 10.**DISTL
      XMINP = 10.**XMINP
      XMAXP = 10.**XMAXP
C  ADJUST LIMITS TO ACCOUNT FOR ROUND-OFF IF NECESSARY.
      IF ( XMINP .GT. XMIN ) XMINP = XMIN
      IF ( XMAXP .LT. XMAX ) XMAXP = XMAX
      RETURN
      END
