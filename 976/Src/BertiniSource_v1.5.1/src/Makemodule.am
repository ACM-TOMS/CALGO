#this is src/Makemodule.am







PARALLEL_COPIED_FILES = src/misc-parallel.c src/track-parallel.c src/prog_eval-parallel.c src/eval_functions-parallel.c src/endgame-parallel.c src/post_processing-parallel.c src/matrixSolve-parallel.c src/parse_input-parallel.c src/startpoint_maker-parallel.c src/setup_functions-parallel.c src/rank_finder-parallel.c src/zero_dim_track-parallel.c src/zero_dim_setup-parallel.c src/zero_dim_main-parallel.c src/clear_functions-parallel.c src/QR-parallel.c src/svd_from_QR-parallel.c src/PSEG-parallel.c src/sharpen-parallel.c src/svd_analysis-parallel.c src/ode-parallel.c src/copy_functions-parallel.c src/min_svd-parallel.c src/adaptiveMP2-parallel.c src/PSEG_amp-parallel.c src/CauchyEG-parallel.c src/Cauchy_rank-parallel.c src/corank-parallel.c src/regen_eval-parallel.c src/regen_setup-parallel.c src/regen_track-parallel.c src/eqbyeq_eval-parallel.c src/eqbyeq_setup-parallel.c src/eqbyeq_output-parallel.c src/eqbyeq_track-parallel.c src/pos_dim-parallel.c src/pureDecomp-parallel.c src/numericalIrredDecomp-parallel.c src/membership-parallel.c src/membership_eval-parallel.c src/membership_junk-parallel.c src/deflation-parallel.c src/dimbydim_eval-parallel.c src/dimbydim_output-parallel.c src/dimbydim_setup-parallel.c src/dimbydim_track-parallel.c src/cascade_eval-parallel.c src/cascade_output-parallel.c src/cascade_setup-parallel.c src/cascade_track-parallel.c src/QR_block-parallel.c src/corank_rrv-parallel.c src/ldt_eval-parallel.c src/ldt_mult_mat-parallel.c src/ldt_main-parallel.c src/ldt_rank-parallel.c src/ldt_junk_removal-parallel.c src/ldt_dual_basis-parallel.c src/QLP-parallel.c src/CauchyEG_new-parallel.c src/trackBackEG-parallel.c src/regen_pos_dim_setup-parallel.c src/regen_pos_dim_track-parallel.c src/regen_pos_dim_eval-parallel.c src/regen_pos_dim_copy-parallel.c src/ldt_diff-parallel.c src/diff_deflatable-parallel.c src/track_error-parallel.c src/adaptiveMP_error-parallel.c src/setupSLP-parallel.c src/setupSLP_defSF-parallel.c src/function_main-parallel.c src/newton_main-parallel.c src/witnessGeneration-parallel.c src/isosingular-parallel.c src/witnessProjection-parallel.c src/printWitness-parallel.c src/generalSliceMoving-parallel.c src/regen_pos_dim_extend-parallel.c src/paramHomotopy-parallel.c

NATURALLY_PARALLEL_FILES = src/parallel_datatypes.c src/parallel_send_functions.c src/eqbyeq_parallel.c src/parallel_main.c src/NID_parallel.c src/cascade_parallel.c src/parallel_diff.c src/regen_pos_dim_parallel.c src/parallel_endgame.c src/dimbydim_parallel.c src/regen_parallel.c


BISON_AND_FLEX_FILES = src/pParse_bison.h  src/pParse_bison.c src/pParse_flex.c src/ppParse_bison.h src/ppParse_bison.c src/ppParse_flex.c src/splitParse_flex.c


#these are done FIRST in the build order.
BUILT_SOURCES += $(BISON_AND_FLEX_FILES)

#list files which ought to be cleaned
CLEANFILES += $(BISON_AND_FLEX_FILES)

PARSE_FILES = \
	src/splitParse_flex.l \
	src/ppParse_bison.y src/ppParse_flex.l \
	src/pParse_bison.y src/pParse_flex.l

#always build serial version
bin_PROGRAMS += bertini-serial



lib_LTLIBRARIES += libbertini-serial.la



# formatting note: do NOT put tabs in front of your lines in the if's.
if BUILD_PARALLEL
BUILT_SOURCES += $(PARALLEL_COPIED_FILES)

#add the parallel version as being built
bin_PROGRAMS += bertini-parallel

#also build the parallel version of the library
lib_LTLIBRARIES += libbertini-parallel.la

#add some files to the list of clean files
CLEANFILES += $(PARALLEL_COPIED_FILES) src/bertini-parallel.c

endif









########
##
##  serial definitions
##
########


#only the one source for bertini's serial version
bertini_serial_SOURCES = src/bertini.c
#need to link against these two built libraries
bertini_serial_LDADD = libbertini-serial.la
#use the standard flags
bertini_serial_CFLAGS = $(AM_CFLAGS)




#define an internal variable containing all the headers we need
HEADERS_FOR_BERTINI = include/bertini.h include/cascade.h include/diff.h include/dimbydim.h include/eqbyeq.h include/localdim.h include/parallel.h include/pos_dim.h include/ppParse.h include/regen_pos_dim.h include/regeneration.h


include_HEADERS += $(HEADERS_FOR_BERTINI)


#list the sources for libbertini-serial.la
libbertini_serial_la_SOURCES = \
src/misc.c \
src/track.c src/prog_eval.c src/eval_functions.c src/endgame.c src/post_processing.c src/matrixSolve.c src/parse_input.c src/startpoint_maker.c src/setup_functions.c src/rank_finder.c src/zero_dim_track.c src/zero_dim_setup.c src/zero_dim_main.c src/clear_functions.c src/QR.c src/svd_from_QR.c src/PSEG.c src/sharpen.c src/svd_analysis.c src/ode.c src/copy_functions.c src/min_svd.c src/adaptiveMP2.c src/PSEG_amp.c src/CauchyEG.c src/Cauchy_rank.c src/corank.c src/regen_eval.c src/regen_setup.c src/regen_track.c src/eqbyeq_eval.c src/eqbyeq_setup.c src/eqbyeq_output.c src/eqbyeq_track.c src/pos_dim.c src/pureDecomp.c src/numericalIrredDecomp.c src/membership.c src/membership_eval.c src/membership_junk.c src/deflation.c src/dimbydim_eval.c src/dimbydim_output.c src/dimbydim_setup.c src/dimbydim_track.c src/cascade_eval.c src/cascade_output.c src/cascade_setup.c src/cascade_track.c src/QR_block.c src/corank_rrv.c src/ldt_eval.c src/ldt_mult_mat.c src/ldt_main.c src/ldt_rank.c src/ldt_junk_removal.c src/ldt_dual_basis.c src/QLP.c src/CauchyEG_new.c src/trackBackEG.c src/regen_pos_dim_setup.c src/regen_pos_dim_track.c src/regen_pos_dim_eval.c src/regen_pos_dim_copy.c src/ldt_diff.c src/diff_deflatable.c src/track_error.c src/adaptiveMP_error.c src/setupSLP.c src/setupSLP_defSF.c src/function_main.c src/newton_main.c src/witnessGeneration.c src/isosingular.c src/witnessProjection.c src/printWitness.c src/generalSliceMoving.c src/regen_pos_dim_extend.c src/paramHomotopy.c \
$(HEADERS_FOR_BERTINI) $(PARSE_FILES)







########
##
##   parallel definitions
##
#####

# do NOT put tabs in front of your lines in the if's.
# yeah, it seems like it would help make more readable, but tabs are important to the parser for this file.
if BUILD_PARALLEL
#set up things to build bertini-parallel, and libbertini-parallel.la






bertini_parallel_SOURCES = src/bertini-parallel.c

#list the libraries for linking to form bertini-parallel
bertini_parallel_LDADD = libbertini-parallel.la  $(MPI_CLDFLAGS)


#set up the compiler flags for bertini's parallel version
bertini_parallel_CFLAGS = -D_HAVE_MPI $(AM_CFLAGS) $(MPI_CFLAGS)


libbertini_parallel_la_LIBADD = $(MPI_CLDFLAGS)

libbertini_parallel_la_CFLAGS = $(AM_CFLAGS) -D_HAVE_MPI $(MPI_CFLAGS)

libbertini_parallel_la_SOURCES =  $(PARALLEL_COPIED_FILES) $(NATURALLY_PARALLEL_FILES) $(HEADERS_FOR_BERTINI) $(PARSE_FILES)


endif
#end parallel if










###############
##
## and now a bunch of rules for copying the serial-parallel hybrid files to files which end with -parallel, so that they can be built using the -D_HAVE_MPI flag, for linking to the parallel library and executable.
## if there is a more elegant solution, i'd love to hear it.
##
################






src/bertini-parallel.c: src/bertini.c
	@cp src/bertini.c src/bertini-parallel.c

src/misc-parallel.c: src/misc.c
	@cp src/misc.c src/misc-parallel.c

src/track-parallel.c: src/track.c
	@cp src/track.c src/track-parallel.c

src/prog_eval-parallel.c: src/prog_eval.c
	@cp src/prog_eval.c src/prog_eval-parallel.c

src/eval_functions-parallel.c: src/eval_functions.c
	@cp src/eval_functions.c src/eval_functions-parallel.c

src/endgame-parallel.c: src/endgame.c
	@cp src/endgame.c src/endgame-parallel.c

src/post_processing-parallel.c: src/post_processing.c
	@cp src/post_processing.c src/post_processing-parallel.c

src/matrixSolve-parallel.c: src/matrixSolve.c
	@cp src/matrixSolve.c src/matrixSolve-parallel.c

src/parse_input-parallel.c: src/parse_input.c
	@cp src/parse_input.c src/parse_input-parallel.c

src/startpoint_maker-parallel.c: src/startpoint_maker.c
	@cp src/startpoint_maker.c src/startpoint_maker-parallel.c

src/setup_functions-parallel.c: src/setup_functions.c
	@cp src/setup_functions.c src/setup_functions-parallel.c

src/rank_finder-parallel.c: src/rank_finder.c
	@cp src/rank_finder.c src/rank_finder-parallel.c

src/zero_dim_track-parallel.c: src/zero_dim_track.c
	@cp src/zero_dim_track.c src/zero_dim_track-parallel.c

src/zero_dim_setup-parallel.c: src/zero_dim_setup.c
	@cp src/zero_dim_setup.c src/zero_dim_setup-parallel.c

src/zero_dim_main-parallel.c: src/zero_dim_main.c
	@cp src/zero_dim_main.c src/zero_dim_main-parallel.c

src/clear_functions-parallel.c: src/clear_functions.c
	@cp src/clear_functions.c src/clear_functions-parallel.c

src/QR-parallel.c: src/QR.c
	@cp src/QR.c src/QR-parallel.c

src/svd_from_QR-parallel.c: src/svd_from_QR.c
	@cp src/svd_from_QR.c src/svd_from_QR-parallel.c

src/PSEG-parallel.c: src/PSEG.c
	@cp src/PSEG.c src/PSEG-parallel.c

src/sharpen-parallel.c: src/sharpen.c
	@cp src/sharpen.c src/sharpen-parallel.c

src/svd_analysis-parallel.c: src/svd_analysis.c
	@cp src/svd_analysis.c src/svd_analysis-parallel.c

src/ode-parallel.c: src/ode.c
	@cp src/ode.c src/ode-parallel.c

src/copy_functions-parallel.c: src/copy_functions.c
	@cp src/copy_functions.c src/copy_functions-parallel.c

src/min_svd-parallel.c: src/min_svd.c
	@cp src/min_svd.c src/min_svd-parallel.c

src/adaptiveMP2-parallel.c: src/adaptiveMP2.c
	@cp src/adaptiveMP2.c src/adaptiveMP2-parallel.c

src/PSEG_amp-parallel.c: src/PSEG_amp.c
	@cp src/PSEG_amp.c src/PSEG_amp-parallel.c

src/CauchyEG-parallel.c: src/CauchyEG.c
	@cp src/CauchyEG.c src/CauchyEG-parallel.c

src/Cauchy_rank-parallel.c: src/Cauchy_rank.c
	@cp src/Cauchy_rank.c src/Cauchy_rank-parallel.c

src/corank-parallel.c: src/corank.c
	@cp src/corank.c src/corank-parallel.c

src/regen_eval-parallel.c: src/regen_eval.c
	@cp src/regen_eval.c src/regen_eval-parallel.c

src/regen_setup-parallel.c: src/regen_setup.c
	@cp src/regen_setup.c src/regen_setup-parallel.c

src/regen_track-parallel.c: src/regen_track.c
	@cp src/regen_track.c src/regen_track-parallel.c

src/eqbyeq_eval-parallel.c: src/eqbyeq_eval.c
	@cp src/eqbyeq_eval.c src/eqbyeq_eval-parallel.c

src/eqbyeq_setup-parallel.c: src/eqbyeq_setup.c
	@cp src/eqbyeq_setup.c src/eqbyeq_setup-parallel.c

src/eqbyeq_output-parallel.c: src/eqbyeq_output.c
	@cp src/eqbyeq_output.c src/eqbyeq_output-parallel.c

src/eqbyeq_track-parallel.c: src/eqbyeq_track.c
	@cp src/eqbyeq_track.c src/eqbyeq_track-parallel.c

src/pos_dim-parallel.c: src/pos_dim.c
	@cp src/pos_dim.c src/pos_dim-parallel.c

src/pureDecomp-parallel.c: src/pureDecomp.c
	@cp src/pureDecomp.c src/pureDecomp-parallel.c

src/numericalIrredDecomp-parallel.c: src/numericalIrredDecomp.c
	@cp src/numericalIrredDecomp.c src/numericalIrredDecomp-parallel.c

src/membership-parallel.c: src/membership.c
	@cp src/membership.c src/membership-parallel.c

src/membership_eval-parallel.c: src/membership_eval.c
	@cp src/membership_eval.c src/membership_eval-parallel.c

src/membership_junk-parallel.c: src/membership_junk.c
	@cp src/membership_junk.c src/membership_junk-parallel.c

src/deflation-parallel.c: src/deflation.c
	@cp src/deflation.c src/deflation-parallel.c

src/dimbydim_eval-parallel.c: src/dimbydim_eval.c
	@cp src/dimbydim_eval.c src/dimbydim_eval-parallel.c

src/dimbydim_output-parallel.c: src/dimbydim_output.c
	@cp src/dimbydim_output.c src/dimbydim_output-parallel.c

src/dimbydim_setup-parallel.c: src/dimbydim_setup.c
	@cp src/dimbydim_setup.c src/dimbydim_setup-parallel.c

src/dimbydim_track-parallel.c: src/dimbydim_track.c
	@cp src/dimbydim_track.c src/dimbydim_track-parallel.c

src/cascade_eval-parallel.c: src/cascade_eval.c
	@cp src/cascade_eval.c src/cascade_eval-parallel.c

src/cascade_output-parallel.c: src/cascade_output.c
	@cp src/cascade_output.c src/cascade_output-parallel.c

src/cascade_setup-parallel.c: src/cascade_setup.c
	@cp src/cascade_setup.c src/cascade_setup-parallel.c

src/cascade_track-parallel.c: src/cascade_track.c
	@cp src/cascade_track.c src/cascade_track-parallel.c

src/QR_block-parallel.c: src/QR_block.c
	@cp src/QR_block.c src/QR_block-parallel.c

src/corank_rrv-parallel.c: src/corank_rrv.c
	@cp src/corank_rrv.c src/corank_rrv-parallel.c

src/ldt_eval-parallel.c: src/ldt_eval.c
	@cp src/ldt_eval.c src/ldt_eval-parallel.c

src/ldt_mult_mat-parallel.c: src/ldt_mult_mat.c
	@cp src/ldt_mult_mat.c src/ldt_mult_mat-parallel.c

src/ldt_main-parallel.c: src/ldt_main.c
	@cp src/ldt_main.c src/ldt_main-parallel.c

src/ldt_rank-parallel.c: src/ldt_rank.c
	@cp src/ldt_rank.c src/ldt_rank-parallel.c

src/ldt_junk_removal-parallel.c: src/ldt_junk_removal.c
	@cp src/ldt_junk_removal.c src/ldt_junk_removal-parallel.c

src/ldt_dual_basis-parallel.c: src/ldt_dual_basis.c
	@cp src/ldt_dual_basis.c src/ldt_dual_basis-parallel.c

src/QLP-parallel.c: src/QLP.c
	@cp src/QLP.c src/QLP-parallel.c

src/CauchyEG_new-parallel.c: src/CauchyEG_new.c
	@cp src/CauchyEG_new.c src/CauchyEG_new-parallel.c

src/trackBackEG-parallel.c: src/trackBackEG.c
	@cp src/trackBackEG.c src/trackBackEG-parallel.c

src/regen_pos_dim_setup-parallel.c: src/regen_pos_dim_setup.c
	@cp src/regen_pos_dim_setup.c src/regen_pos_dim_setup-parallel.c

src/regen_pos_dim_track-parallel.c: src/regen_pos_dim_track.c
	@cp src/regen_pos_dim_track.c src/regen_pos_dim_track-parallel.c

src/regen_pos_dim_eval-parallel.c: src/regen_pos_dim_eval.c
	@cp src/regen_pos_dim_eval.c src/regen_pos_dim_eval-parallel.c

src/regen_pos_dim_copy-parallel.c: src/regen_pos_dim_copy.c
	@cp src/regen_pos_dim_copy.c src/regen_pos_dim_copy-parallel.c

src/ldt_diff-parallel.c: src/ldt_diff.c
	@cp src/ldt_diff.c src/ldt_diff-parallel.c

src/diff_deflatable-parallel.c: src/diff_deflatable.c
	@cp src/diff_deflatable.c src/diff_deflatable-parallel.c

src/track_error-parallel.c: src/track_error.c
	@cp src/track_error.c src/track_error-parallel.c

src/adaptiveMP_error-parallel.c: src/adaptiveMP_error.c
	@cp src/adaptiveMP_error.c src/adaptiveMP_error-parallel.c

src/setupSLP-parallel.c: src/setupSLP.c
	@cp src/setupSLP.c src/setupSLP-parallel.c

src/setupSLP_defSF-parallel.c: src/setupSLP_defSF.c
	@cp src/setupSLP_defSF.c src/setupSLP_defSF-parallel.c

src/function_main-parallel.c: src/function_main.c
	@cp src/function_main.c src/function_main-parallel.c

src/newton_main-parallel.c: src/newton_main.c
	@cp src/newton_main.c src/newton_main-parallel.c

src/witnessGeneration-parallel.c: src/witnessGeneration.c
	@cp src/witnessGeneration.c src/witnessGeneration-parallel.c

src/isosingular-parallel.c: src/isosingular.c
	@cp src/isosingular.c src/isosingular-parallel.c

src/witnessProjection-parallel.c: src/witnessProjection.c
	@cp src/witnessProjection.c src/witnessProjection-parallel.c

src/printWitness-parallel.c: src/printWitness.c
	@cp src/printWitness.c src/printWitness-parallel.c

src/generalSliceMoving-parallel.c: src/generalSliceMoving.c
	@cp src/generalSliceMoving.c src/generalSliceMoving-parallel.c

src/regen_pos_dim_extend-parallel.c: src/regen_pos_dim_extend.c
	@cp src/regen_pos_dim_extend.c src/regen_pos_dim_extend-parallel.c

src/paramHomotopy-parallel.c: src/paramHomotopy.c
	@cp src/paramHomotopy.c src/paramHomotopy-parallel.c




######
##
## end rules for file duplication for -parallel versions.
##
#######





