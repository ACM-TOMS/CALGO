      SUBROUTINE ZZDATE (CHDATE)

C## A R G U M E N T S:
                       CHARACTER *(*)    CHDATE

C## S T A T U S:
C               SINGLE/DOUBLE CONVERSION:        NOT REQUIRED.
C               SYSTEM  DEPENDENCE:   SYSTEM ROUTINE FOR DATE.
C
C             THIS VERSION IS FOR  SUN4
C
C>RCS $HEADER: DATE.GL,V 2.1 91/11/22 11:45:18 BUCKLEY EXP $
C>RCS $LOG:     DATE.GL,V $
C>RCS REVISION 2.1  91/11/22  11:45:18  BUCKLEY
C>RCS FINAL SUBMISSION TO TOMS
C>RCS
C>RCS REVISION 2.0  90/07/05  12:50:05  BUCKLEY
C>RCS COMMON VERSION FOR TOMS AND MT
C>RCS
C>RCS REVISION 1.9  89/06/30  13:30:12  BUCKLEY
C>RCS PREPARING SUBMITTED VERSION OF MT
C>RCS
C>RCS REVISION 1.3.1.1  89/05/20  13:46:26  BUCKLEY
C>RCS TEMP. TEST OF MT BEFORE SUBMITTING
C>RCS
C>RCS REVISION 1.3  89/05/18  12:12:13  BUCKLEY
C>RCS FINAL TEST OF MT BEFORE SUBMITTING
C>RCS
C>RCS REVISION 1.2  89/05/15  14:33:41  BUCKLEY
C>RCS INITIAL INSTALLATION OF MT INTO RCS FORM.
C>RCS
C>RCS REVISION 1.1  89/01/17  16:34:30  BUCKLEY
C>RCS INITIAL REVISION
C>RCS
C
C## D E S C R I P T I O N:

C     THIS ROUTINE MUST CALL A SYSTEM ROUTINE TO GET THE CURRENT DATE.
C     ZZDATE MUST RETURN THIS DATE IN THE CHARACTER VARIABLE CHDATE
C     IN THE FORM
C
C           (YY+MM+DD)
C
C     AS REQUIRED BY THE ROUTINE  ZZDTTM.  CHDATE MUST OF LENGTH 10.
C     ONLY THE 6 CHARACTERS  YY MM DD  ARE ACTUALLY USED. THE OTHERS
C     CAN BE ANYTHING, I.E. ONLY THE POSITION OF THE YY MM DD MATTERS.
C
C     THIS MUST CALL A SYSTEM ROUTINE  TO GET THE DATE.
C     TO IMPLEMENT THIS ON ANOTHER SYSTEM, ONE MAY EITHER
C
C     (A)  INCORPORATE AN ALTERNATE VERSION OF ZZDATE;
C
C     (B)  USE THE "DUMMY" VERSION OF THIS ROUTINE WITH THE SINGLE
C          EXECUTABLE STATEMENT CHDATE='(  +  +  )', IN WHICH CASE NO
C          DATE INFORMATION WILL APPEAR IN THE OUTPUT.

C## E N T R Y   P O I N T S: THE NATURAL ENTRY ZZDATE.
C## S U B R O U T I N E S:   SYSTEM DATE ROUTINE.
C## P A R A M E T E R S:

      INTEGER     CTOUPP,     CTOLOW,     CTOCAP
      PARAMETER ( CTOUPP = 1, CTOLOW = 2, CTOCAP = 3 )

C## L O C A L   D E C L:


      CHARACTER * 24  UNXDAT

      CHARACTER *  3  NAME  (12), TEMP

      INTEGER  I


C## S A V E:
            SAVE NAME

C## E Q U I V A L E N C E S: NONE ARE DEFINED.
C## C O M M O N:             NONE IS DEFINED.

C## D A T A:

             DATA  NAME /'JAN','FEB','MAR','APR','MAY','JUN',
     -                   'JUL','AUG','SEP','OCT','NOV','DEC' /
C##                                              E X E C U T I O N
C##                                              E X E C U T I O N
C---- INITIALIZE CHDATE

      CHDATE = '(  +  +  )'

      CALL FDATE(UNXDAT)

      CHDATE(2:3) = UNXDAT(23:24)
      CHDATE(8:9) = UNXDAT(9:10)
      TEMP        = UNXDAT(5:7)
      CALL  ZZCASE(TEMP, CTOUPP)

      DO 100 I = 1,12
         IF ( TEMP .EQ. NAME(I) ) THEN
            WRITE ( CHDATE(5:6), '(I2.2)' ) I
            GOTO 90000
         ENDIF
  100 CONTINUE

C## E X I T
90000      RETURN

C## F O R M A T S:  NONE ARE DEFINED.
C##                 E N D         OF ZZDATE.
                    END
