      DOUBLE PRECISION FUNCTION ZZMPAR(I)
C!!!! REAL             FUNCTION ZZMPAR(I)

C## A R G U M E N T S:
                       INTEGER I

C## S T A T U S:
C               IGNORE LINES BEGINNING WITH  "C!!!!" .
C
C    SYSTEM  DEPENDENCE:   THE CODE IS VERY DEFINITELY MACHINE DEPENDENT
C                          FOR IT CONTAINS MACHINE PRECISION CONSTANTS
C                          FOR MANY MACHINES, AS DESCRIBED BELOW.
C
C               SINGLE/DOUBLE Conversion: NEEDED (SEE CONVRT).
C
C               This version is in   D O U B L E   precision.
C!!!!           This version is in   S I N G L E   precision.
C
C>RCS $Header: mpar.gl,v 2.3 91/11/22 11:45:19 buckley Exp $
C>RCS $Log:	mpar.gl,v $
C>RCS Revision 2.3  91/11/22  11:45:19  buckley
C>RCS Final submission to TOMS
C>RCS
C>RCS Revision 2.2  91/06/12  14:07:08  buckley
C>RCS Added stardent
C>RCS
C>RCS Revision 2.1  90/07/31  10:57:40  buckley
C>RCS Added constants for ieee for pc's
C>RCS
C>RCS Revision 2.0  90/07/06  10:39:26  buckley
C>RCS common version for TOMS and MT
C>RCS
C>RCS Revision 1.9.1.2  90/06/26  14:24:24  buckley
C>RCS Fixed single/double precision constants for sun4
C>RCS
C>RCS Revision 1.9.1.1  89/07/01  11:36:48  buckley
C>RCS Preparing Submitted Version of Mt
C>RCS
C>RCS Revision 1.9  89/06/30  13:30:15  buckley
C>RCS Preparing Submitted Version of Mt
C>RCS
C>RCS Revision 1.3.1.1  89/05/20  13:46:28  buckley
C>RCS Temp. test of Mt before submitting
C>RCS
C>RCS Revision 1.3  89/05/18  12:13:23  buckley
C>RCS Final test of Mt before submitting
C>RCS
C>RCS Revision 1.2  89/05/15  14:34:59  buckley
C>RCS Initial Installation of MT into RCS form.
C>RCS
C>RCS Revision 1.1  89/01/17  16:34:31  buckley
C>RCS Initial revision
C>RCS
C
C## D E S C R I P T I O N:
C
C     THIS IS A MODIFICATION OF THE TWO ROUTINES  DPMPAR AND SPMPAR
C     OBTAINED FROM  JORGE MORE.  IT HAS BEEN CHANGED ONLY TO CONFORM
C     WITH MY CONVENTIONS, AND TO ADD STATEMENTS FOR THE CDC
C     CYBERS WHICH ARE ACCEPTABLE TO FTN5 (FORTRAN '77). THE
C     OTHER CHANGES ARE:
C
C     1. THE SINGLE NAME  ZZMPAR HAS BEEN USED.  IT IS DOUBLE OR SINGLE
C        PRECISION ACCORDING TO CONVERSION BY CONVRT, JUST AS FOR ALL
C        OF MY OTHER PROGRAMS.
C
C     2. THE ROUTINES HAVE BEEN MERGED SO THAT SINGLE AND DOUBLE
C        PRECISION STATEMENTS WHICH CORRESPOND APPEAR IN PAIRS.
C
C     OTHERWISE ALL OF THE COMMENTS OF THE ORIGINAL AUTHORS APPLY.
C     THEIR ORIGINAL COMMENTS (UNALTERED) FOR THE DOUBLE PRECISION
C     VERSION FOLLOW IMMEDIATELY.
C
C     FUNCTION DPMPAR
C
C     THIS FUNCTION PROVIDES DOUBLE PRECISION MACHINE PARAMETERS
C     WHEN THE APPROPRIATE SET OF DATA STATEMENTS IS ACTIVATED (BY
C     REMOVING THE C FROM COLUMN 1) AND ALL OTHER DATA STATEMENTS ARE
C     RENDERED INACTIVE. MOST OF THE PARAMETER VALUES WERE OBTAINED
C     FROM THE CORRESPONDING BELL LABORATORIES PORT LIBRARY FUNCTION.
C
C     THE FUNCTION STATEMENT IS
C
C       DOUBLE PRECISION FUNCTION DPMPAR(I)
C
C     WHERE
C
C       I IS AN INTEGER INPUT VARIABLE SET TO 1, 2, OR 3 WHICH
C         SELECTS THE DESIRED MACHINE PARAMETER. IF THE MACHINE HAS
C         T BASE B DIGITS AND ITS SMALLEST AND LARGEST EXPONENTS ARE
C         EMIN AND EMAX, RESPECTIVELY, THEN THESE PARAMETERS ARE
C
C         DPMPAR(1)   B**(1 - T), THE MACHINE PRECISION,
C
C         DPMPAR(2)   B**(EMIN - 1), THE SMALLEST MAGNITUDE,
C
C         DPMPAR(3)   B**EMAX*(1 - B**(-T)), THE LARGEST MAGNITUDE.
C
C     ARGONNE NATIONAL LABORATORY. MINPACK PROJECT. MARCH 1980.
C     BURTON S. GARBOW, KENNETH E. HILLSTROM, JORGE J. MORE
C
C## E N T R Y   P O I N T S: The natural entry ZZmpar.
C## S U B R O U T I N E S:   NONE are called.
C## P A R A M E T E R S:     NONE are defined.
C
C## L O C A L   D E C L:

C         NOTE THAT THESE ARRAYS MUST HAVE DIMENSIONS 2 AND 4, RATHER
C         THAN 1 AND 2 AS ONE MIGHT EXPECT, BECAUSE OF THE PDP-11
C         DEFINITIONS.

      INTEGER MCHEPS(4)
C!!!! INTEGER MCHEPS(2)

      INTEGER MINMAG(4)
C!!!! INTEGER MINMAG(2)

      INTEGER MAXMAG(4)
C!!!! INTEGER MAXMAG(2)

      DOUBLE PRECISION DMACH(3)
C!!!! REAL             RMACH(3)

      INTEGER EMIN, EMAX, IMACH(10)

      DOUBLE PRECISION B, BINV, BM1, ONE, W, Z
C!!!! REAL             B, BINV, BM1, ONE, W, Z

C## S A V E:
                             SAVE  DMACH
C!!!!                        SAVE  RMACH

                             SAVE  IMACH

C## E Q U I V A L E N C E S:

      EQUIVALENCE (DMACH(1),MCHEPS(1))
C!!!! EQUIVALENCE (RMACH(1),MCHEPS(1))

      EQUIVALENCE (DMACH(2),MINMAG(1))
C!!!! EQUIVALENCE (RMACH(2),MINMAG(1))

      EQUIVALENCE (DMACH(3),MAXMAG(1))
C!!!! EQUIVALENCE (RMACH(3),MAXMAG(1))

C## C O M M O N:             NONE is defined.

C## D A T A:

C-----MACHINE CONSTANTS FOR machines conforming to the IEEE standard
C     FOR IBM PC WITH Laheyf77l, Microsoft Fortran, Professional
C     Fortran, or Ryan MacFarland.

      DATA DMACH(1) /1.11022302D-16 /
C!!!! DATA RMACH(1) /5.96045E-08 /

      DATA DMACH(2) /2.23D-308/
C!!!! DATA RMACH(2) /1.17549E-38/

      DATA DMACH(3) /1.79769313D+308 /
C!!!! DATA RMACH(3) /3.40282E+38 /


C## E X E C U T I O N
C## E X E C U T I O N


      ZZMPAR = DMACH(I)
C!!!! ZZMPAR = RMACH(I)


C## E X I T
90000      RETURN

C## F O R M A T S:  NONE are defined.
C##                 E N D         of ZZmpar.
                    END
