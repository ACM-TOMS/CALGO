      SUBROUTINE ZZdate (CHDATE)

C## A R G U M E N T S:
                       CHARACTER *(*)    CHDATE

C## S T A T U S:
C               SINGLE/DOUBLE Conversion:        NOT required.
C               SYSTEM  DEPENDENCE:   System routine for date.
C
C==>CYBER/FTN5
C             THIS VERSION IS FOR  CYBER/FTN5
C==>VAX/BERK4.2
C             THIS VERSION IS FOR  VAX/BERK4.2(3)
C==>VAX/VMS
C             THIS VERSION IS FOR  VAX/VMS
C==>HW6
C             THIS VERSION IS FOR  HW6
C==>SUN4
C             THIS VERSION IS FOR  SUN4
C==>SUN3
C             THIS VERSION IS FOR  SUN3
C==>SSYM
C             THIS IS A VERSION FOR  Sequent Symmetry
C==>MAC/MS
C             THIS VERSION IS FOR  MAC/MS
C==>LAHEYF77L
C             THIS VERSION IS FOR  Lahey's F77L for PC's
C==>
C
C>RCS $Header: date.gl,v 2.1 91/11/22 11:45:18 buckley Exp $
C>RCS $Log:	date.gl,v $
C>RCS Revision 2.1  91/11/22  11:45:18  buckley
C>RCS Final submission to TOMS
C>RCS
C>RCS Revision 2.0  90/07/05  12:50:05  buckley
C>RCS common version for TOMS and MT
C>RCS
C>RCS Revision 1.9  89/06/30  13:30:12  buckley
C>RCS Preparing Submitted Version of Mt
C>RCS
C>RCS Revision 1.3.1.1  89/05/20  13:46:26  buckley
C>RCS Temp. test of Mt before submitting
C>RCS
C>RCS Revision 1.3  89/05/18  12:12:13  buckley
C>RCS Final test of Mt before submitting
C>RCS
C>RCS Revision 1.2  89/05/15  14:33:41  buckley
C>RCS Initial Installation of MT into RCS form.
C>RCS
C>RCS Revision 1.1  89/01/17  16:34:30  buckley
C>RCS Initial revision
C>RCS
C
C## D E S C R I P T I O N:

C     THIS ROUTINE MUST CALL A SYSTEM ROUTINE TO GET THE CURRENT DATE.
C     ZZDATE MUST RETURN THIS DATE IN THE CHARACTER VARIABLE CHDATE
C     IN THE FORM
C
C           (YY+MM+DD)
C
C     AS REQUIRED BY THE ROUTINE  ZZDTTM.  CHDATE MUST OF LENGTH 10.
C     ONLY THE 6 CHARACTERS  YY MM DD  ARE ACTUALLY USED. THE OTHERS
C     CAN BE ANYTHING, I.E. ONLY THE POSITION OF THE YY MM DD MATTERS.
C
C     THIS MUST CALL A SYSTEM ROUTINE  TO GET THE DATE.
C     TO IMPLEMENT THIS ON ANOTHER SYSTEM, ONE MAY EITHER
C
C     (A)  INCORPORATE AN ALTERNATE VERSION OF ZZDATE;
C
C     (B)  USE THE "DUMMY" VERSION OF THIS ROUTINE WITH THE SINGLE
C          EXECUTABLE STATEMENT CHDATE='(  +  +  )', IN WHICH CASE NO
C          DATE INFORMATION WILL APPEAR IN THE OUTPUT.

C## E N T R Y   P O I N T S: The natural entry ZZdate.
C## S U B R O U T I N E S:   System date routine.
C==>VAX/VMS
C==>CYBER/FTN5
C==>HW6
C==>MAC/MS
C==>LAHEYF77L
C## P A R A M E T E R S:     NONE are defined.
C==>VAX/BERK4.2
C==>SUN4
C==>SUN3
C==>SSYM
C## P A R A M E T E R S:

      INTEGER     CTOUPP,     CTOLOW,     CTOCAP
      PARAMETER ( CTOUPP = 1, CTOLOW = 2, CTOCAP = 3 )
C==>

C## L O C A L   D E C L:

C==>CYBER/FTN5

      CHARACTER * 10    DATE
C==>VAX/VMS

      CHARACTER *  9  VAXDAT
C==>VAX/BERK4.2
C==>SUN4
C==>SUN3
C==>SSYM

      CHARACTER * 24  UNXDAT
C==>VAX/BERK4.2
C==>SUN4
C==>SUN3
C==>SSYM
C==>VAX/VMS

      CHARACTER *  3  NAME  (12), TEMP

      INTEGER  I
C==>HW6

      CHARACTER * 24  HWDATE
      INTEGER * 8     CLOCK_
C==>MAC/MS

      INTEGER  MM, DD, YY
C==>LAHEYF77L

      CHARACTER * 8 TODAY
C==>

C==>CYBER/FTN5
C==>MAC/MS
C==>HW6
C==>LAHEYF77L
C## S A V E:                 NONE selected.
C==>VAX/VMS
C==>VAX/BERK4.2
C==>SUN4
C==>SUN3
C==>SSYM

C## S A V E:
            SAVE NAME
C==>

C## E Q U I V A L E N C E S: NONE are defined.
C## C O M M O N:             NONE is defined.

C==>CYBER/FTN5
C==>MAC/MS
C==>HW6
C==>LAHEYF77L
C## D A T A:                 NO DATA VALUES SET.
C==>VAX/VMS
C==>VAX/BERK4.2
C==>SUN4
C==>SUN3
C==>SSYM
C## D A T A:

             DATA  NAME /'JAN','FEB','MAR','APR','MAY','JUN',
     -                   'JUL','AUG','SEP','OCT','NOV','DEC' /
C==>
C##                                              E X E C U T I O N
C##                                              E X E C U T I O N
C---- INITIALIZE CHDATE

      CHDATE = '(  +  +  )'
C==>VAX/VMS

      CALL DATE(VAXDAT)

      CHDATE(2:3) = VAXDAT(8:9)
      CHDATE(8:9) = VAXDAT(1:2)
      TEMP        = VAXDAT(4:6)
C==>VAX/BERK4.2
C==>SUN4
C==>SUN3
C==>SSYM

      CALL FDATE(UNXDAT)

      CHDATE(2:3) = UNXDAT(23:24)
      CHDATE(8:9) = UNXDAT(9:10)
      TEMP        = UNXDAT(5:7)
      CALL  ZZCASE(TEMP, CTOUPP)
C==>VAX/VMS
C==>VAX/BERK4.2
C==>SUN4
C==>SUN3
C==>SSYM

      DO 100 I = 1,12
         IF ( TEMP .EQ. NAME(I) ) THEN
            WRITE ( CHDATE(5:6), '(I2.2)' ) I
            GOTO 90000
         ENDIF
  100 CONTINUE
C==>CYBER/FTN5

      CHDATE = DATE()
C==>HW6

      CALL DATE_TIME_ (CLOCK_(), HWDATE)

      CHDATE(2:3) = HWDATE(7:8)
      CHDATE(5:6) = HWDATE(1:2)
      CHDATE(8:9) = HWDATE(4:5)
C==>MAC/MS

      CALL  DATE ( MM, DD, YY )

      WRITE ( CHDATE(2:3), '(I2.2)' ) YY
      WRITE ( CHDATE(5:6), '(I2.2)' ) MM
      WRITE ( CHDATE(8:9), '(I2.2)' ) DD
C==>LAHEYF77L
C     Lahey's routine DATE returns an 8-character string containing
C     MM / DD / YY

      CALL DATE ( TODAY )

      CHDATE(2:3) = TODAY(7:8)
      CHDATE(5:6) = TODAY(1:2)
      CHDATE(8:9) = TODAY(4:5)
C==>DUMMY

C    TO DO A QUICKIE CONVERSION FOR A NEW SYSTEM, JUST SET
C    CHDATE TO A DUMMY BLANK VALUE.

      CHDATE = '(  +  +  )'
C==>

C## E X I T
90000      RETURN

C## F O R M A T S:  NONE are defined.
C##                 E N D         of ZZdate.
		    END
