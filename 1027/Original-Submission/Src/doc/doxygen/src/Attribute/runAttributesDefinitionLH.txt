###############################################################################
#######           Definition of Run Parameters attributes          ############
#####
##### . Each definition must be separated by at least a comment line
#####     (starting by #)
#####
##### . The definition must provide the name, type and default value
#####     (no default: '-' or 'N/A') in this order, one by line.
#####
##### . Only a single word is considered for the name,
#####     type and default value (extra is comment)
#####
##### . The short info, the help and the keywords must be provided in this
#####     order within "\(" and "\). For keywords, the plural part of a word
#####     can be put in parenthesis; both singular and plural will be keywords
#####
##### . The default value is automatically reported in the help.
#####
##### . In addition, the definition can have optional attributes:
#####       - ALGO_COMPATIBILITY_CHECK yes/no, the default is no. If yes, the
#####         value of this attribute can be used for comparing two sets of
#####         attributes for algorithm compatibility. This is used by the
#####         Runner.
#####
#####       - RESTART_ATTRIBUTE yes/no, the default is no. If yes, the
#####         value of this attribute can be modified during hot or warm
#####         restart. Otherwise, modifying this attribute during hot restart
#####         will trigger an error message.
#####
#####       - UNIQUE_ENTRY yes/no, the default is yes. If no, multiple
#####         values may be assigned to this parameter.
#####
###############################################################################
LH_EVAL
size_t
0
\( Latin Hypercube Sampling of points (no optimization) \)
\(

. Latin-Hypercube sampling (evaluations)

. Argument: A positive integer p <Â INF

. p: number of LH points

. All points will be evaluated (no opportunism). This options will deactivate
  any optimization strategy.

. The LH sampling requires to have both lower and upper bounds defined.

. Example: LH_EVAL 100

\)
\( basic latin hypercube sampling \)
ALGO_COMPATIBILITY_CHECK yes
RESTART_ATTRIBUTE yes
################################################################################
LH_SEARCH
NOMAD::LHSearchType
-
\( Latin Hypercube Sampling Search method \)
\(

. Latin-Hypercube sampling (search)

. Arguments: two size_t p0 and pi

. p0: number of initial LH search points

. pi: LH search points at each iteration

. The search can be opportunistic or not
  (parameter EVAL_OPPORTUNISTIC)

. Example: LH_SEARCH 100 0

\)
\( basic search latin hypercube sampling \)
ALGO_COMPATIBILITY_CHECK yes
RESTART_ATTRIBUTE yes
################################################################################
