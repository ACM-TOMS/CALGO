#Dietmaier.create.maple
#
#   This is due to Jan Verschelde, with a wrapper written by Frank Sottile
# to write problem formulation to an input file for phc
#
# Maple program to generate the equations of the Stewart-Gough platform
# that has all 40 solutions real.  The equations and coefficients are
# taken from a paper by Peter Dietmaier:
# "The Stewart-Gough platform of general geometry can have 40 real postures",
# pages 1-10, in Advances in Robot Kinematics: Analysis and Control,
# edited by Jadran Lenarcic and Manfred L. Husty,
# Kluwer Academic Publishers, Dordrecht, 1998
#############################################################################
interface(quiet=true):

with(linalg):

######################################################
#
#  Turn a floatint point number into a rational number
# 
crat := proc(a)
 return( trunc(10000000*a)/10000000)
end proc:
######################################################
#
#  Symbolic dot product
#
Dp :=proc(V,W)
 return(V[1]*W[1]+V[2]*W[2]+V[3]*W[3])
end proc:
######################################################

E1 := [1,0,0]:           # (E1,E2,E3) are unit vectors attached to the base
E2 := [0,1,0]:
E3 := [0,0,1]:
h1 := [h11,h12,h13]:     # (h1,h2,e3) are unit vectors attached to platform
h2 := [h21,h22,h23]:
e3 := crossprod(h1,h2):
n := [n1,n2,n3]:         # unit vector connecting A1 to B1, so L1 = 1
a21 :=  crat(1.107915):        # coordinates of the 6 base points (zeros omitted)
a31 :=  crat(0.549094):  a32 :=  crat(0.756063):
a41 :=  crat(0.735077):  a42 := -crat(0.223935):  a43 :=  crat(0.525991):
a51 :=  crat(0.514188):  a52 := -crat(0.526063):  a53 := -crat(0.368418):
a61 :=  crat(0.590473):  a62 :=  crat(0.094733):  a63 := -crat(0.205018):
b21 :=  crat(0.542805):         # coordinates of the 6 points on the platform
b31 :=  crat(0.956919):  b32 := -crat(0.528915):
b41 :=  crat(0.665885):  b42 := -crat(0.353482):  b43 :=  crat(1.402538):
b51 :=  crat(0.478359):  b52 :=  crat(1.158742):  b53 :=  crat(0.107672):
b61 := -crat(0.137087):  b62 := -crat(0.235121):  b63 :=  crat(0.353913):
L2 := crat(0.645275):          # lengths of the connecting rods
L3 := crat(1.086284):
L4 := crat(1.503439):
L5 := crat(1.281933):
L6 := crat(0.771071):

s1 := Dp(n,n)   - 1:                   # eq 1
s2 := Dp(h1,h1) - 1:                   # eq 2
s3 := Dp(h2,h2) - 1:                   # eq 3
s4 := Dp(h1,h2):                       # eq 4
for i from 1 to 3 do
  p||i := n[i] + b21*h1[i] - a21*E1[i]:
od:
s5 := p1^2 + p2^2 + p3^2 - L2^2:            # eq 5
for i from 1 to 3 do
  p||i := n[i] + b31*h1[i] + b32*h2[i] - a31*E1[i] - a32*E2[i]:
od:
s6 := p1^2 + p2^2 + p3^2 - L3^2:            # eq 6
for i from 1 to 3 do
  p||i := n[i] + b41*h1[i]+b42*h2[i]+b43*e3[i]-a41*E1[i]-a42*E2[i]-a43*E3[i]:
od:
s7 := p1^2 + p2^2 + p3^2 - L4^2:            # eq 7
for i from 1 to 3 do
  p||i := n[i] + b51*h1[i]+b52*h2[i]+b53*e3[i]-a51*E1[i]-a52*E2[i]-a53*E3[i]:
od:
s8 := p1^2 + p2^2 + p3^2 - L5^2:            # eq 8
for i from 1 to 3 do
  p||i := n[i] + b61*h1[i]+b62*h2[i]+b63*e3[i]-a61*E1[i]-a62*E2[i]-a63*E3[i]:
od:
s9 := p1^2 + p2^2 + p3^2 - L6^2:            # eq 9
Eqs:=[s1,s2,s3,s4,s5,s6,s7,s8,s9]:
#########################################################
#
#  Frank's addition
#
file := fopen("Dietmaier.phc.input",WRITE):
fprintf(file," 9\n"):
for eq in Eqs do
 fprintf(file," %a;\n",expand(eq)):
end do:
fclose(file):
#########################################################
file := fopen("Dietmaier.phc",WRITE):
fprintf(file," 9\n"):
for eq in Eqs do
 fprintf(file," %a;\n",expand(eq)):
end do:
fclose(file):
#########################################################
file := fopen("Polys.maple",WRITE):
fprintf(file," Polys:=[\n"):
for eq in Eqs do
 fprintf(file," %a,\n",expand(eq)):
end do:
fprintf(file," NULL]:\n"):
fclose(file):

quit:
