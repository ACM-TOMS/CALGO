C
C STENMIN MINIMIZES AN UNCONSTRAINED NONLINEAR FUNCTION IN N
C UNKNOWNS WHERE THE HESSIAN IS LARGE AND SPARSE, USING TENSOR
C METHODS.
C
C EXAMPLE OF USE FOR STENMIN.  THE TEST PROBLEM IS THE
C OPTIMAL DESIGN WITH COMPOSITE MATERIALS PROBLEM FROM
C THE MINPACK-2 TEST PROBLEM COLLECTION.
C
C  ALI BOUARICHA, OCTOBER 1994.
C  MCS DIVISION, ARGONNE NATIONAL LAB.
C
      INTEGER          NMAX, N, NZ, LIRN, LICN, ILIM, IPR, METHOD
      INTEGER          GRDFLG, HSNFLG, NDIGIT, MSG, LWRK, LIWRK
      INTEGER          TERMCD, INFORM, I, J, K, NX, NY
      DOUBLE PRECISION FSCALE, GRADTL, STEPTL, FPLS, STEPMX
      DOUBLE PRECISION LAMBDA, HX, HY, TEMP, ONE
      PARAMETER      ( NMAX = 10000, LIRN = 50000, LICN = 500000 )
      PARAMETER      ( LIWRK = 2 * LIRN + 12 * NMAX + 2 )
      PARAMETER      ( LWRK = 7 * NMAX )
      INTEGER          IRN ( LIRN  ), ICN ( LICN )
      INTEGER          IWRK( LIWRK )
      DOUBLE PRECISION X   ( NMAX ),  TYPX( NMAX ), XPLS( NMAX )
      DOUBLE PRECISION GPLS( NMAX ),  HESS( LICN ), WRK ( LWRK )
      DOUBLE PRECISION HTV ( NMAX )
      COMMON / PARAM / NX, NY
      COMMON / OTHER / LAMBDA
      EXTERNAL         DODCF, DODCG, STDUSH
      INTRINSIC        DBLE, MIN
      DATA ONE / 1.0D0 /

C RUN OPTIMAL DESIGN PROBLEM WITH NX = 50, NY = 50, AND LAMBDA = 0.008

      NX = 50
      NY = 50
      LAMBDA = 0.008D0
      N = NX * NY

C  COMPUTE THE STANDARD STARTING POINT.

      HX = ONE/DBLE(NX+1)
      HY = ONE/DBLE(NY+1)
      DO 20 J = 1, NY
         TEMP = DBLE(MIN(J,NY-J+1))*HY
         DO 10 I = 1, NX
            K = NX*(J-1) + I
            X(K) = -(MIN(DBLE(MIN(I,NX-I+1))*HX,TEMP))**2
   10    CONTINUE
   20 CONTINUE

C  DEFINE THE SPARSITY STRUCTURE OF THE HESSIAN.

      CALL DODCSP(NX,NY,NZ,IRN,ICN)

C SET THE DEFAULT VALUES OF THE PACKAGE.

      CALL STDFLT(N, TYPX, FSCALE, GRADTL, STEPTL, ILIM, STEPMX,
     *            IPR, METHOD, GRDFLG, HSNFLG, NDIGIT, INFORM, MSG)

      GRADTL = 1.0D-5
      GRDFLG = 2

C  CALL THE SPARSE OPTIMIZER.

      CALL STUMCD(N,X,NZ,IRN,LIRN,ICN,LICN,DODCF,DODCG,
     *  STDUSH,TYPX,FSCALE,GRADTL,STEPTL,ILIM,STEPMX,IPR,
     *  METHOD,GRDFLG,HSNFLG,NDIGIT,MSG,XPLS,FPLS,GPLS,
     *  HESS,WRK,LWRK,IWRK,LIWRK,TERMCD,HTV,INFORM)

      STOP
      END

      SUBROUTINE DODCF(N,X,F)

C     **********
C
C  PURPOSE
C  -------
C
C     THIS SUBROUTINE COMPUTES THE FUNCTION OF THE
C     OPTIMAL DESIGN WITH COMPOSITE MATERIALS PROBLEM.
C
C  PARAMETERS
C  ----------
C
C       N IS THE DIMENSION OF THE PROBLEM
C
C       NX IS AN INTEGER VARIABLE.
C         ON ENTRY NX IS THE NUMBER OF GRID POINTS IN THE FIRST
C            COORDINATE DIRECTION.
C         ON EXIT NX IS UNCHANGED.
C
C       NY IS AN INTEGER VARIABLE.
C         ON ENTRY NY IS THE NUMBER OF GRID POINTS IN THE SECOND
C            COORDINATE DIRECTION.
C         ON EXIT NY IS UNCHANGED.
C
C       X IS A DOUBLE PRECISION (REAL) ARRAY OF DIMENSION N = NX*NY.
C
C       F IS A DOUBLE PRECISION (REAL) VARIABLE.
C         ON EXIT F IS SET TO THE FUNCTION EVALUATED AT X.
C
C       LAMBDA IS A DOUBLE PRECISION (REAL) VARIABLE.
C         ON ENTRY LAMBDA IS THE LAGRANGE MULTIPLIER.
C         ON EXIT LAMBDA IS UNCHANGED.
C
C     SUBPROGRAMS CALLED
C
C       MINPACK-SUPPLIED   ...   DODCPS
C
C     MINPACK-2 PROJECT. NOVEMBER 1993.
C     ARGONNE NATIONAL LABORATORY AND UNIVERSITY OF MINNESOTA.
C     BRETT M. AVERICK. MODIFIED BY ALI BOUARICHA ON OCTOBER 1994.
C
C     **********
C
      INTEGER N, NX, NY
      DOUBLE PRECISION F, LAMBDA
      DOUBLE PRECISION X(N)
      COMMON/PARAM/NX,NY
      COMMON/OTHER/LAMBDA
C
C  LOCAL VARIABLES
C
      INTEGER I, J, K
      DOUBLE PRECISION MU1, MU2, ONE, P5, TWO, ZERO
      DOUBLE PRECISION AREA, DPSI, DVDX, DVDY, GRADV, HX, HXHY
      DOUBLE PRECISION HY, TEMP, T1, T2, V, VB, VL, VR, VT
      PARAMETER (ZERO=0.0D0,P5=0.5D0,ONE=1.0D0,TWO=2.0D0)
      PARAMETER (MU1=ONE,MU2=TWO)
      INTRINSIC DBLE, SQRT
      EXTERNAL DODCPS
C
C  INITIALIZATION.
C
      HX = ONE/DBLE(NX+1)
      HY = ONE/DBLE(NY+1)
      HXHY = HX*HY
      AREA = P5*HXHY
C
C  COMPUTE THE BREAK POINTS.
C
      T1 = SQRT(TWO*LAMBDA*MU1/MU2)
      T2 = SQRT(TWO*LAMBDA*MU2/MU1)
      F = ZERO
C
C  COMPUTATION OF THE FUNCTION OVER THE LOWER
C  TRIANGULAR ELEMENTS.
C
      DO 50 J = 0, NY
         DO 40 I = 0, NX
            K = NX*(J-1) + I
            V = ZERO
            VR = ZERO
            VT = ZERO
            IF (J .GE. 1 .AND. I .GE. 1) V = X(K)
            IF (I .LT. NX .AND. J .GT. 0) VR = X(K+1)
            IF (I .GT. 0 .AND. J .LT. NY) VT = X(K+NX)
            DVDX = (VR-V)/HX
            DVDY = (VT-V)/HY
            GRADV = DVDX**2 + DVDY**2
            CALL DODCPS(GRADV,MU1,MU2,T1,T2,DPSI,0,LAMBDA)
            F = F + DPSI
   40    CONTINUE
   50 CONTINUE
C
C  COMPUTATION OF THE FUNCTION OVER THE UPPER
C  TRIANGULAR ELEMENTS.
C
      DO 70 J = 1, NY + 1
         DO 60 I = 1, NX + 1
            K = NX*(J-1) + I
            VB = ZERO
            VL = ZERO
            V = ZERO
            IF (I .LE. NX .AND. J .GT. 1) VB = X(K-NX)
            IF (I .GT. 1 .AND. J .LE. NY) VL = X(K-1)
            IF (I .LE. NX .AND. J .LE. NY) V = X(K)
            DVDX = (V-VL)/HX
            DVDY = (V-VB)/HY
            GRADV = DVDX**2 + DVDY**2
            CALL DODCPS(GRADV,MU1,MU2,T1,T2,DPSI,0,LAMBDA)
            F = F + DPSI
   60    CONTINUE
   70 CONTINUE
C
C  SCALE THE FUNCTION.
C
      F = AREA*F
C
C  INTEGRATE V OVER THE DOMAIN.
C
      TEMP = ZERO
      DO 80 K = 1, NX*NY
         TEMP = TEMP + X(K)
   80 CONTINUE
      F = F + HXHY*TEMP
      END
C
      SUBROUTINE DODCG(N,X,FGRAD)

C     **********
C
C  PURPOSE
C  -------
C
C     THIS SUBROUTINE COMPUTES THE GRADIENT OF THE
C     OPTIMAL DESIGN WITH COMPOSITE MATERIALS PROBLEM.
C
C  PARAMETERS
C  ----------
C
C       N IS THE DIMENSION OF THE PROBLEM
C
C       NX IS AN INTEGER VARIABLE.
C         ON ENTRY NX IS THE NUMBER OF GRID POINTS IN THE FIRST
C            COORDINATE DIRECTION.
C         ON EXIT NX IS UNCHANGED.
C
C       NY IS AN INTEGER VARIABLE.
C         ON ENTRY NY IS THE NUMBER OF GRID POINTS IN THE SECOND
C            COORDINATE DIRECTION.
C         ON EXIT NY IS UNCHANGED.
C
C       X IS A DOUBLE PRECISION (REAL) ARRAY OF DIMENSION N = NX*NY.
C
C       FGRAD IS A DOUBLE PRECISION (REAL) ARRAY OF DIMENSION N = NX*NY.
C         ON ENTRY FGRAD NEED NOT BE SPECIFIED.
C         ON EXIT FGRAD CONTAINS THE GRADIENT EVALUATED AT X.
C
C       LAMBDA IS A DOUBLE PRECISION (REAL) VARIABLE.
C         ON ENTRY LAMBDA IS THE LAGRANGE MULTIPLIER.
C         ON EXIT LAMBDA IS UNCHANGED.
C
C     SUBPROGRAMS CALLED
C
C       MINPACK-SUPPLIED   ...   DODCPS
C
C     MINPACK-2 PROJECT. NOVEMBER 1993.
C     ARGONNE NATIONAL LABORATORY AND UNIVERSITY OF MINNESOTA.
C     BRETT M. AVERICK. MODIFIED BY ALI BOUARICHA ON OCTOBER 1994.
C
C     **********
C
      INTEGER N, NX, NY
      DOUBLE PRECISION X(N), FGRAD(N), LAMBDA
      COMMON/PARAM/NX,NY
      COMMON/OTHER/LAMBDA
C
C  LOCAL VARIABLES
C
      INTEGER I, J, K
      DOUBLE PRECISION MU1, MU2, ONE, P5, TWO, ZERO
      DOUBLE PRECISION AREA, DPSIP, DVDX, DVDY, GRADV, HX, HXHY
      DOUBLE PRECISION HY, T1, T2, V, VB, VL, VR, VT
      PARAMETER (ZERO=0.0D0,P5=0.5D0,ONE=1.0D0,TWO=2.0D0)
      PARAMETER (MU1=ONE,MU2=TWO)
      INTRINSIC DBLE, SQRT
      EXTERNAL DODCPS

C  INITIALIZATION.

      HX = ONE/DBLE(NX+1)
      HY = ONE/DBLE(NY+1)
      HXHY = HX*HY
      AREA = P5*HXHY
C
C  COMPUTE THE BREAK POINTS.
C
      T1 = SQRT(TWO*LAMBDA*MU1/MU2)
      T2 = SQRT(TWO*LAMBDA*MU2/MU1)

      DO 30 K = 1, NX*NY
         FGRAD(K) = ZERO
   30 CONTINUE
C
C  COMPUTATION OF THE THE GRADIENT OVER THE LOWER
C  TRIANGULAR ELEMENTS.
C
      DO 50 J = 0, NY
         DO 40 I = 0, NX
            K = NX*(J-1) + I
            V = ZERO
            VR = ZERO
            VT = ZERO
            IF (J .GE. 1 .AND. I .GE. 1) V = X(K)
            IF (I .LT. NX .AND. J .GT. 0) VR = X(K+1)
            IF (I .GT. 0 .AND. J .LT. NY) VT = X(K+NX)
            DVDX = (VR-V)/HX
            DVDY = (VT-V)/HY
            GRADV = DVDX**2 + DVDY**2
            CALL DODCPS(GRADV,MU1,MU2,T1,T2,DPSIP,1,LAMBDA)
            IF (I .GE. 1 .AND. J .GE. 1)
     +          FGRAD(K) = FGRAD(K) - TWO*(DVDX/HX+DVDY/HY)*DPSIP
            IF (I .LT. NX .AND. J .GT. 0)
     +          FGRAD(K+1) = FGRAD(K+1) + TWO*(DVDX/HX)*DPSIP
            IF (I .GT. 0 .AND. J .LT. NY)
     +          FGRAD(K+NX) = FGRAD(K+NX) + TWO*(DVDY/HY)*DPSIP
   40    CONTINUE
   50 CONTINUE
C
C  COMPUTATION OF THE GRADIENT OVER THE UPPER
C  TRIANGULAR ELEMENTS.
C
      DO 70 J = 1, NY + 1
         DO 60 I = 1, NX + 1
            K = NX*(J-1) + I
            VB = ZERO
            VL = ZERO
            V = ZERO
            IF (I .LE. NX .AND. J .GT. 1) VB = X(K-NX)
            IF (I .GT. 1 .AND. J .LE. NY) VL = X(K-1)
            IF (I .LE. NX .AND. J .LE. NY) V = X(K)
            DVDX = (V-VL)/HX
            DVDY = (V-VB)/HY
            GRADV = DVDX**2 + DVDY**2
            CALL DODCPS(GRADV,MU1,MU2,T1,T2,DPSIP,1,LAMBDA)
            IF (I .LE. NX .AND. J .GT. 1)
     +          FGRAD(K-NX) = FGRAD(K-NX) - TWO*(DVDY/HY)*DPSIP
            IF (I .GT. 1 .AND. J .LE. NY)
     +          FGRAD(K-1) = FGRAD(K-1) - TWO*(DVDX/HX)*DPSIP
            IF (I .LE. NX .AND. J .LE. NY)
     +          FGRAD(K) = FGRAD(K) + TWO*(DVDX/HX+DVDY/HY)*DPSIP
   60    CONTINUE
   70 CONTINUE
C
C  INTEGRATE V OVER THE DOMAIN.
C
      DO 90 K = 1, NX*NY
         FGRAD(K) = AREA*FGRAD(K) + HXHY
   90 CONTINUE
      END
C
      SUBROUTINE DODCPS(T,MU1,MU2,T1,T2,RESULT,OPTION,LAMBDA)
C
C     **********
C
C     THIS SUBROUTINE COMPUTES THE FUNCTION PSI(T) AND THE SCALED
C     FUNCTIONS PSI'(T)/T AND PSI''(T)/T FOR THE OPTIMAL DESIGN
C     WITH COMPOSITE MATERIALS PROBLEM.
C
C     THE SUBROUTINE STATEMENT IS
C
C       SUBROUTINE DODCPS(T,MU1,MU2,T1,T2,RESULT,OPTION,LAMBDA)
C
C     WHERE
C
C       T IS A DOUBLE PRECISION (REAL) VARIABLE.
C         ON ENTRY T IS THE VARIABLE T
C         ON EXIT T IS UNCHANGED
C
C       MU1 IS A DOUBLE PRECISION (REAL) VARIABLE.
C         ON ENTRY MU1 IS THE RECIPROCAL SHEAR MODULUS OF MATERIAL 1.
C         ON EXIT MU1 IS UNCHANGED.
C
C       MU2 IS A DOUBLE PRECISION (REAL) VARIABLE.
C         ON ENTRY MU2 IS THE RECIPROCAL SHEAR MODULUS OF MATERIAL 2.
C         ON EXIT MU2 IS UNCHANGED.
C
C       T1 IS A DOUBLE PRECISION (REAL) VARIABLE.
C         ON ENTRY T1 IS THE FIRST BREAKPOINT.
C         ON EXIT T1 IS UNCHANGED.
C
C       T2 IS A DOUBLE PRECISION (REAL) VARIABLE.
C         ON ENTRY T2 IS THE SECOND BREAKPOINT.
C         ON EXIT T2 IS UNCHANGED.
C
C       RESULT IS A DOUBLE PRECISION (REAL) VARIABLE.
C         ON ENTRY RESULT NEED NOT BE SPECIFIED.
C         ON EXIT RESULT IS SET ACCORDING TO TASK.
C
C       OPTION IS AN INTEGER VARIABLE.
C         ON ENTRY OPTION SPECIFIES THE ACTION OF THE SUBROUTINE:
C
C            IF OPTION = 0 THEN EVALUATE THE FUNCTION PSI(T).
C            IF OPTION = 1 THEN EVALUATE THE SCALED FUNCTION PSI'(T)/T.
C            IF OPTION = 2 THEN EVALUATE THE SCALED FUNCTION PSI''(T)/T.
C
C        ON OPTION TASK IS UNCHANGED.
C
C       LAMBDA IS A DOUBLE PRECISION (REAL) VARIABLE
C         ON ENTRY LAMBDA IS THE LAGRANGE MULTIPLIER.
C         ON EXIT LAMBDA IS UNCHANGED.
C
C     MINPACK-2 PROJECT. NOVEMBER 1993.
C     ARGONNE NATIONAL LABORATORY AND UNIVERSITY OF MINNESOTA.
C     BRETT M. AVERICK. MODIFIED BY ALI BOUARICHA ON OCTOBER 1994.
C
C     **********
C
      INTEGER OPTION
      DOUBLE PRECISION T, MU1, MU2, T1, T2, RESULT, LAMBDA
C
C  LOCAL VARIABLES
C
      DOUBLE PRECISION P25, P5, ZERO
      PARAMETER (ZERO=0.0D0,P25=0.25D0,P5=0.5D0)
      DOUBLE PRECISION SQRTT
      INTRINSIC SQRT
C
      SQRTT = SQRT(T)
      IF (OPTION .EQ. 0) THEN
         IF (SQRTT .LE. T1) THEN
            RESULT = P5*MU2*T
         ELSE IF (SQRTT .GT. T1 .AND. SQRTT .LT. T2) THEN
            RESULT = MU2*T1*SQRTT - LAMBDA*MU1
         ELSE IF (SQRTT .GE. T2) THEN
            RESULT = P5*MU1*T + LAMBDA*(MU2-MU1)
         END IF
      ELSE IF (OPTION .EQ. 1) THEN
         IF (SQRTT .LE. T1) THEN
            RESULT = P5*MU2
         ELSE IF (SQRTT .GT. T1 .AND. SQRTT .LT. T2) THEN
            RESULT = P5*MU2*T1/SQRTT
         ELSE IF (SQRTT .GE. T2) THEN
            RESULT = P5*MU1
         END IF
      ELSE IF (OPTION .EQ. 2) THEN
         IF (SQRTT .LE. T1) THEN
            RESULT = ZERO
         ELSE IF (SQRTT .GT. T1 .AND. SQRTT .LT. T2) THEN
            RESULT = -P25*MU2*T1/(SQRTT*T)
         ELSE IF (SQRTT .GE. T2) THEN
            RESULT = ZERO
         END IF
      END IF
      END
C
      SUBROUTINE DODCSP(NX,NY,NNZ,INDROW,INDCOL)
C
C     **********
C
C     SUBROUTINE DODCSP
C
C     THIS SUBROUTINE DEFINES THE SPARSITY STRUCTURE OF THE HESSIAN
C     MATRIX FOR THE OPTIMAL DESIGN WITH COMPOSITES PROBLEM.
C
C     THE SUBROUTINE STATEMENT IS
C
C       SUBROUTINE DODCSP(NX,NY,NNZ,INDROW,INDCOL)
C
C     WHERE
C
C       NX IS AN INTEGER VARIABLE.
C         ON ENTRY NX IS THE NUMBER OF GRID POINTS IN THE FIRST
C            COORDINATE DIRECTION.
C         ON EXIT NX IS UNCHANGED.
C
C       NY IS AN INTEGER VARIABLE.
C         ON ENTRY NY IS THE NUMBER OF GRID POINTS IN THE SECOND
C            COORDINATE DIRECTION.
C         ON EXIT NY IS UNCHANGED.
C
C       NNZ IS AN INTEGER VARIABLE.
C         ON ENTRY NNZ NEED NOT BE SPECIFIED.
C         ON EXIT NNZ IS SET TO THE NUMBER OF NONZEROS IN THE
C            LOWER TRIANGLE OF THE HESSIAN MATRIX.
C
C       INDROW IS AN INTEGER ARRAY OF DIMENSION AT LEAST NNZ.
C         ON ENTRY INDROW NEED NOT BE SPECIFIED.
C         ON EXIT INDROW CONTAINS THE ROW INDICES OF THE NONZEROS
C            IN THE LOWER TRIANGLE OF THE HESSIAN MATRIX.
C
C       INDCOL IS AN INTEGER ARRAY OF DIMENSION AT LEAST NNZ.
C         ON ENTRY INDCOL NEED NOT BE SPECIFIED.
C         ON EXIT INDCOL CONTAINS THE COLUMN INDICES OF THE NONZEROS
C            IN THE LOWER TRIANGLE OF THE HESSIAN MATRIX.
C
C     MINPACK-2 PROJECT. NOVEMBER 1993.
C     ARGONNE NATIONAL LABORATORY AND UNIVERSITY OF MINNESOTA.
C     BRETT M. AVERICK. MODIFIED BY ALI BOUARICHA ON OCTOBER 1994.
C
C     **********
C
      INTEGER NX, NY, NNZ
      INTEGER INDROW(*), INDCOL(*)
C
C  LOCAL VARIABLES
C
      INTEGER I, J
C
C     COMPUTE THE SPARSITY STRUCTURE.
C
      NNZ = 0
      DO 20 J = 1, NY
         DO 10 I = 1, NX
            NNZ = NNZ + 1
            INDROW(NNZ) = (J-1)*NX + I
            INDCOL(NNZ) = (J-1)*NX + I
            IF (I .NE. NX) THEN
               NNZ = NNZ + 1
               INDROW(NNZ) = (J-1)*NX + I + 1
               INDCOL(NNZ) = (J-1)*NX + I
            END IF
            IF (J .NE. NY) THEN
               NNZ = NNZ + 1
               INDROW(NNZ) = (J-1)*NX + I + NX
               INDCOL(NNZ) = (J-1)*NX + I
               IF (I .NE. 1) THEN
                  NNZ = NNZ + 1
                  INDROW(NNZ) = (J-1)*NX + I + NX - 1
                  INDCOL(NNZ) = (J-1)*NX + I
               END IF
            END IF
   10    CONTINUE
   20 CONTINUE
      END


