#######################################################################
#
# Makefile for generating testing codes.
#

CPP      = /lib/cpp
CPPFLAGS = ""

REAL_SOURCES = ../../../v15
GENERATE = $(REAL_SOURCES)/generate

TESTING_SOURCES  = ../../../testing/v2

#
#######################################################################


#######################################################################
#  

S_TESTING_MODULES = \
    schkaa.f schkrr.f serrrr.f srrt01.f srrt02.f

D_TESTING_MODULES = \
    dchkaa.f dchkrr.f derrrr.f drrt01.f drrt02.f

C_TESTING_MODULES = \
    cchkaa.f cchkrr.f cerrrr.f crrt01.f crrt02.f

Z_TESTING_MODULES = \
    zchkaa.f zchkrr.f zerrrr.f zrrt01.f zrrt02.f


source:  single double complex complex16

single:     $(S_TESTING_MODULES)
double:     $(D_TESTING_MODULES)
complex:    $(C_TESTING_MODULES)
complex16:  $(Z_TESTING_MODULES)


#
# Rules for the checking modules affected by the modifications 
# in new Single Precision xGERQR.
#


schkaa.f: $(TESTING_SOURCES)/xchkaa.F
	$(GENERATE) s $(TESTING_SOURCES)/xchkaa.F schkaa.f $(CPP) $(CPPFLAGS)

schkrr.f: $(TESTING_SOURCES)/xchkrr.F
	$(GENERATE) s $(TESTING_SOURCES)/xchkrr.F schkrr.f $(CPP) $(CPPFLAGS)

serrrr.f: $(TESTING_SOURCES)/xerrrr.F
	$(GENERATE) s $(TESTING_SOURCES)/xerrrr.F serrrr.f $(CPP) $(CPPFLAGS)

srrt01.f: $(TESTING_SOURCES)/xrrt01.F
	$(GENERATE) s $(TESTING_SOURCES)/xrrt01.F srrt01.f $(CPP) $(CPPFLAGS)

srrt02.f: $(TESTING_SOURCES)/xrrt02.F
	$(GENERATE) s $(TESTING_SOURCES)/xrrt02.F srrt02.f $(CPP) $(CPPFLAGS)

#
# Rules for the checking modules affected by the modifications 
# in new Double Precision xGERQR.
#

dchkaa.f: $(TESTING_SOURCES)/xchkaa.F
	$(GENERATE) d $(TESTING_SOURCES)/xchkaa.F dchkaa.f $(CPP) $(CPPFLAGS)

dchkrr.f: $(TESTING_SOURCES)/xchkrr.F
	$(GENERATE) d $(TESTING_SOURCES)/xchkrr.F dchkrr.f $(CPP) $(CPPFLAGS)

derrrr.f: $(TESTING_SOURCES)/xerrrr.F
	$(GENERATE) d $(TESTING_SOURCES)/xerrrr.F derrrr.f $(CPP) $(CPPFLAGS)

drrt01.f: $(TESTING_SOURCES)/xrrt01.F
	$(GENERATE) d $(TESTING_SOURCES)/xrrt01.F drrt01.f $(CPP) $(CPPFLAGS)

drrt02.f: $(TESTING_SOURCES)/xrrt02.F
	$(GENERATE) d $(TESTING_SOURCES)/xrrt02.F drrt02.f $(CPP) $(CPPFLAGS)

#
# Rules for the checking modules affected by the modifications 
# in new Complex yGERQR.
#

cchkaa.f: $(TESTING_SOURCES)/ychkaa.F
	$(GENERATE) c $(TESTING_SOURCES)/ychkaa.F cchkaa.f $(CPP) $(CPPFLAGS)

cchkrr.f: $(TESTING_SOURCES)/ychkrr.F
	$(GENERATE) c $(TESTING_SOURCES)/ychkrr.F cchkrr.f $(CPP) $(CPPFLAGS)

cerrrr.f: $(TESTING_SOURCES)/yerrrr.F
	$(GENERATE) c $(TESTING_SOURCES)/yerrrr.F cerrrr.f $(CPP) $(CPPFLAGS)

crrt01.f: $(TESTING_SOURCES)/yrrt01.F
	$(GENERATE) c $(TESTING_SOURCES)/yrrt01.F crrt01.f $(CPP) $(CPPFLAGS)

crrt02.f: $(TESTING_SOURCES)/yrrt02.F
	$(GENERATE) c $(TESTING_SOURCES)/yrrt02.F crrt02.f $(CPP) $(CPPFLAGS)

#
# Rules for the checking modules affected by the modifications 
# in new Complex*16 yGERQR.
#

zchkaa.f: $(TESTING_SOURCES)/ychkaa.F
	$(GENERATE) z $(TESTING_SOURCES)/ychkaa.F zchkaa.f $(CPP) $(CPPFLAGS)

zchkrr.f: $(TESTING_SOURCES)/ychkrr.F
	$(GENERATE) z $(TESTING_SOURCES)/ychkrr.F zchkrr.f $(CPP) $(CPPFLAGS)

zerrrr.f: $(TESTING_SOURCES)/yerrrr.F
	$(GENERATE) z $(TESTING_SOURCES)/yerrrr.F zerrrr.f $(CPP) $(CPPFLAGS)

zrrt01.f: $(TESTING_SOURCES)/yrrt01.F
	$(GENERATE) z $(TESTING_SOURCES)/yrrt01.F zrrt01.f $(CPP) $(CPPFLAGS)

zrrt02.f: $(TESTING_SOURCES)/yrrt02.F
	$(GENERATE) z $(TESTING_SOURCES)/yrrt02.F zrrt02.f $(CPP) $(CPPFLAGS)

#
# Clean rule.
#

clean:
	- rm -f *.o *.f *.F
