
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00665_legendre_qvm_vary_05 : public TestCaseReal
    {
    public:
      TestCase_case_00665_legendre_qvm_vary_05() { }
      virtual ~TestCase_case_00665_legendre_qvm_vary_05() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00665_legendre_qvm_vary_05");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_3 = ef::sqrt(ef::third());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const e_float v  = +127 + sqrt_1_3;
          const INT32   m  = +127;
          data[k] = ef::legendre_q(v, m, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("-6.450496203954698681230554623763170262019949050971495197121008934061453274446994215455293711020570065303118966684085505439040748784042682883994656113565349531053253286136614110515638604432581151536288274531287661898582896077159644621549015250479833579521561173432444621257655670679779680525746812696722765122010440895550869264795337315220624539563882277790887217512937195436903619407493611765752336891e371"),
           e_float("-2.1128326872987526857522015595384003734329291325570743237356469687507025592436089507689859845084355727901640470647779460916387956251556227341051841974164144972014280828086318879620272396897479663578973298299533379626056184023769874824969662534864211686791197460187458626258005520832515564167602961268835502202021473052454318964044939354436077589768033090219439732614839928283136262236393107899222257697e276"),
           e_float("-1.1521461817307092871700103529969126811652441329668185899754313632229038263152380662037214245806753547440598980558135625952909250604368033300968340817844854965670412766184803152681533223204833099727343124373348784660285624293474753882341801679654000797181766985042693092759485154705229555562427514242785551407928113449067691329649379548268019852173995486385813664090566264102304151299284146895447527181e261"),
           e_float("-1.0059774455465522522513070012791914684087061219510043965024127910609489951107936779150690053407919832230536253999447241008590769629694489580059398294727379015561652921423492151699387806364033852790849607177682720503828753115617503197639794180585024901654194706894339163795978173480932257714145101551346056309753856694443164633903675129554111367151326992684512188476881748186575554885386391444486292559e254"),
           e_float("-6.4317846221820996272506979660117530601407482594043345116989553330835180603082218381899236696688678419880138507549265274446811405251074902554951272760418641934478205660028722462405791834018471319884539732270891694207917820016516337191110300633598775298550178289539735986418446074171952697078572251015055621247252861109931374344925462779141793123679422104432607999918536964332340129134521617889547833107e250"),
           e_float("1.3107563682012149012719861489493584495449860789646991829244031893393808287471172283627581028661960694343483078091809741684479393087712515759981830484744604565243948629024357968578896057420493314719416136387616900325743330307552232804046294037486500889077929903137135475885588561058173702156453311227629837119330158814402834619716223202851279165407087844624725889967947098004598896101728135849485718588e251"),
           e_float("-4.1986555916889849692270624599811576926266771785547749766653411085672928864283936239833251884759213602429685343321653829319598760345365713485187731708291285798842948489580106541242199646208676724572011420992343676030492334082262068888714392161965041185465694863452340628453558071915010320104563239263942677738890144185452090440070524694054174565702551288231962578634921979205471512031408053155878348333e251"),
           e_float("-4.1807987463241200678662087998443120692129585682911909383792463681626009521798227352990812406941195870883565271314335540637242722728380261955997182448753129975348664870384340875101268144097946599570390750634598463396741713568348089407879489009267154326419194274757047294677412784756360581887811654995803433503744513113142338512837703211593470648230732190097488211755991782036561214957989509356701858299e254"),
           e_float("-4.788269032546848675855499550562574097327061048214963814409679964273534406086949760842634080578882567406249701148646290211829522659430332044883929953264797941702467033453250816454324467206751897453718955811356247565717507678730541085155051313535643757009896434052203530408432167195215333226050597858846016606029060124062246677256251420720191258029900650458007478975767061023856214317443968643383024828e261"),
           e_float("-8.7808400426656585918334321600908882678227935642865559157697889611477105222560655580794917422290155320647788528341363308313918120961916578003206323472376647932310786709087100551189204478185286529036783160524725180048942742643425035227737408594341668464122495688441948530775854431052522336488261173768035239210654388629817465765908548798987655420293459270873773608192651274126869367509682620280145372099e276"),
           e_float("-2.680797949749784862140283385706935970137443662354286212711593771465088173726015171414570516269881722834046567490249038141689706822202448704238800010248020296528566127166468579899671620944640725914448653849530488205115343648478824946563126989969338337899778795160684337193024334808178518290065989627752092172093034174685447157534871217833103988165593140372538114122679299115079525498881019189003652758e372"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00665_legendre_qvm_vary_05(const bool b_write_output)
    {
      return TestCase_case_00665_legendre_qvm_vary_05().execute(b_write_output);
    }
  }
}
