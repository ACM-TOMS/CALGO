
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00541_bessel_iv_order4_v : public TestCaseReal
    {
    public:
      TestCase_case_00541_bessel_iv_order4_v() { }
      virtual ~TestCase_case_00541_bessel_iv_order4_v() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00541_bessel_iv_order4_v");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const INT32 k2 = k * k;
          const INT32 k3 = k * k2;
          const INT32 k7 = (k2 * k2) * k3;
          data[static_cast<std::size_t>(k)] = ef::cyl_bessel_i(ef::euler_gamma() + 10000, k7 + ef::pi());
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("3.5393536488085784957948694001046493918452761442491777952659277962857103767514243333645619500552831352637438644641539799519879589334976060153908049830276414786278090815885842657715215599759700954229321107268223458850975648318610691478375016953148408824857995290259569388514270674943294445337551056047703776720559313247627821892416813570765593483411003711030318492301482987971336516546761198443352248082e-33701"),
           e_float("6.2139569654719995702978315568413579501092347100064775353548684176827743280123711563479777640300403030160066329599225832299699583082101177768708287624554671414379251135567650216899540514547866089485778886065614052621301007092564671174951477733503286931654258466268973049787646045570688189619321825384207050553705804116160618060507121834680587210124662832699034846339064776297075439758970511122561555072e-32501"),
           e_float("3.7735450861957924159544398901418614258163973935789356199031211052924906844244555270173443528735838740312006810212947903399617816684795874868217139558144946380525629824555003404222506921579164673251718375035694330614358267271816005576000841508616388425324372531342514635548926375008027349967773738837447566503086279339294314151302187156272769121342923350936432363460529143790639766522372907041361231068e-17494"),
           e_float("1.5049990429243777092649156908759099090116332387717839951576755014105979336943559605807240559605504015742179286665691052740065755579985160793844199889416100618671230958627255876260895965693706624438170373788377378290037744567007826763586372756958323824514690522560596627751701506504484337930257804230520589924986074660786694251353076362368280618263044677803114340989402232438829677895987537359243189053e-5214"),
           e_float("1.6465647700543411771966614184407606059019309429711580848138567607859977352231713021209356589956105765717843104580417057683570122875739346221305947934170611948270025152522118114538193374422855420467049150015421269266567797521070046813173478085601978874358506006633217589586445056618757959271803290910669119128338852312776321172596441009770044013121283966705888131155338294825753311237511047531786493812e5826"),
           e_float("1.5199204780201762854175445437781011683228388610507795364127820922399116247482965865509827429784808817301572870270929868242199482262198509149793512222582321834795022997476179493228963852053862028955499205749471355165804914643663431000978688928353661696902245800278372906285453626634908930957050387175669368940370628450223262522847062941645227707526349309466876099603640655239262420052409880637011974993e33650"),
           e_float("2.1456000670301211602315520227762491068175598466655793966721284229839971466146754238328490266879848741698052436043727281644936038995295785032749996930345620722855556268177754493407932762365575473329132946275712747588779264013576382477705173348089711617382378799395021404273849615694527279439125550562388549397268288530689099853559004253808172191770294204086512949632743279814599092138708402006017515712e121495"),
           e_float("6.5746549267488472567716066004731347969817201266157030675607895049141582220232287036185182222555520120761616439849878960835592540119126920108353177177673141991372941831433357492198908184660630603499037930541849429204006912667238466637500583630786544836315366224626622925697118494872484645107927420158749664222896463503714435819495497394139184755636500878898369228118663528629491171828429119973292794199e357631"),
           e_float("9.7776276756105738820161328315156514500819299023503280674936235404246592143940972070263567515853974378164886196465327097502632808089814348185821882333408529276391364516589454440155860579060223141930434255446697459646381223133011986915775280910418741738137227106604222299442317924074701199128784108332228754701485455510562752826707913794538278156857241856387558490214988594022184751845343287639797567923e910768"),
           e_float("1.3450006051860234169968475021967244452464343769706959154218464380532964559391097797327909690398976965885686155284926166810919778109605245082905744601717272813892560259231140546168877755818794746519244153647543288954019478830257472784027131919325787041697421967740960438621733654850148797431970906917255100621206495235455923659975109138021778580867522012279731215607746797962615272192545895864927605395e2077210"),
           e_float("1.2959747243849774303219595706319377028740376974669129343908064249764696217197179558067209021117484756550829157795029163591287294921173792363966768263906232709483081331626903172052429590614766642687380797314815636485664118695544539407949776750792830835840713295204477051371915903002994749073588985543233709069722275035536880374064711081433347089269852840507176682616495355031717634159859110538443035193e4342940"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00541_bessel_iv_order4_v(const bool b_write_output)
    {
      return TestCase_case_00541_bessel_iv_order4_v().execute(b_write_output);
    }
  }
}
