
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00684_legendre_pnu_vary_04 : public TestCaseReal
    {
    public:
      TestCase_case_00684_legendre_pnu_vary_04() { }
      virtual ~TestCase_case_00684_legendre_pnu_vary_04() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00684_legendre_pnu_vary_04");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_5 = ef::sqrt(ef::fifth());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const INT32   n  = -((10 - k) * 13);
          const e_float u  = +((10 - k) * 11) + sqrt_1_5;
          data[k] = ef::legendre_p(n, u, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("-1.9827375718257900180497529105791291605719166882921895722248201251743094649364323701100633698935183580411122848503645197034811456870805092487963161942778603051372913666990293869157759309012717362188039306763093216895408364492891451952583951189251407696800412722320699311259869594212531509056469585831054316395060474200717320382243736876694277412212520879793692050569863207590950185900127889442315625693e131"),
           e_float("3.6968924356222316036151711488732588101042852369961960602229365934557715082884818602230536740887092610092216771673048895810005880641427439928913093396169600428545160733994309044152270008727405333015896891252136214047325730251549743205153816808718474250860155486064024292466377422786574166417111060250078169442876653025734168739069013159118118815145847156493461375662758208803111799187328666636739239577e186"),
           e_float("-5.789982966389449204791726370799779638137418698662414559636491252413949836385013807302999696523512133425371833820153831229965392648826209131978399295725571488102188251450323149008866954410204219903146160159116268732061594813451753000134909161102647170158264671234324159985806587480135190309457932307574676089134621091964183565040658064022049369079622318352069346892482066522284334432972295643393494973e169"),
           e_float("-9.1516583999802141948815248598208085007873023868426297072144241911961301683379238622081467321326535273864840830920358251692502956704927013682851820871267387201761775971538958842360346357035487475859956426820041354247105979935852866119517293798063381093597745933557520237822108314666835640939491920424758755570227859417508894172419388480909458336333415315862416948697566174493803466407011918410377280677e144"),
           e_float("5.8824561600795076482795957426562475043240107431952778102916077595564673020149879682156623404244438686409658237724932397892244094680442752998413549305883601391224751334203100222023311999513416950788166505314625936659218819944592922312869291155979698052890845883678009598666422161713989336811103265107654971370572920200867506017940968210854005598598535944649266646803878876406909974888204666498536031727e119"),
           e_float("1.2803972901015088005467050949513966519389421956435269171064153399211872958668182492349573636486257056221327904735593942332978394496885734481173536277637624985004988988275591408435178144848618896430487029305376154866396374573982572572415070612654743434183902406464412454801043963940653275451458913460931191495539725141228616995194105375927162858505331916154976383646637236329887006084823452235556521313e95"),
           e_float("9.1900369406910343743606389901565914932355927017344132836770783249388163256446258447808318748227385224970733366332111211855814464093185543777512452630920288297715785184593084171436134139203296928432311670236520345656040861755489373866729430533843284905006465664600709577383790676240823323757379096192909880042314521359805422080901238486711188152741171277435341654812136449098605359475342819720608955759e71"),
           e_float("-1.7144618343343193429071599590737908468568815052674027180702870817587173004499673211409680401520954232915777367526358125921938237092799850618279707590746673661484104146074774361221986156270061266552776869153103758281491637862482250888598093254124855148273455365031368342111681517312886428713673525144530835923911279352349108135153462419030792974463134715553906233761906829019645903644385214496020863698e48"),
           e_float("5.1048481360053760205444181011430340172086780581388255597055856493823227439905118332051544721292478488315710667129921413599727396853582249306935807000850821919544811963695076904124387472249019991047750929277289958044885409203036488294523487029430688645394108333436971173036722238465914340570941222003758303586262058377880750361732914763492726494060711635742785768005789460237193603910168564057067115158e29"),
           e_float("-4.19623946096261499123984385635834877975329873829186349337547483568201970086037746051308746389757365859415531149922138313854101910648769399496950733062643143097349757866704774240843930243496372556081822901563345395468868340276417712323467609267576576487013158721198203481654075147686107265235897960235820770817997439780398886727030649383717621543610160127053797609511530869373026725904786705077080993e12"),
           e_float("2.2973681674734067133296758483236788239320844690648584895535100872602558173334437151583129850047450797043585098510351578348697387445387824608532162528520463778974876648282369848822674041498381614206360216313807927271437682381601781179496302100777390037549724006991387813238363544676295487934167556684687233606251971397170962125360175277253479118449442121388762988365066699883717587963692592648141001042"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00684_legendre_pnu_vary_04(const bool b_write_output)
    {
      return TestCase_case_00684_legendre_pnu_vary_04().execute(b_write_output);
    }
  }
}
