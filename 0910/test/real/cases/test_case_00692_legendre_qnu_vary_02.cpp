
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00692_legendre_qnu_vary_02 : public TestCaseReal
    {
    public:
      TestCase_case_00692_legendre_qnu_vary_02() { }
      virtual ~TestCase_case_00692_legendre_qnu_vary_02() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00692_legendre_qnu_vary_02");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_5 = ef::sqrt(ef::fifth());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const INT32   n  = -((10 - k) * 13);
          const e_float u  = -((10 - k) * 11) - sqrt_1_5;
          data[k] = ef::legendre_q(n, u, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("3.7992128992227560144595176806419858879175441137397921821899180759337313203309945586732869171568094662266991874505918860342590111338758649037828356813363134988155472280997638288742095587503955983111027172868401959739256820715109883515616410864325108130180381391172357895876338219725480831303521900073411656395358329812398836685413695521365145107680842074863615308787833538490696654571793170058437498878e-135"),
           e_float("3.1967428822305400170595082992696215590514976274863452390322663606254415784555304999027579649998854153333457006281635972984632593080656511379499023897907874107445237324303142906531665402146622839194613883809887453967895697514729503727754205782121416357956392784884516854077178855104534854426832947046088633709849836048609813375023329824395315366426237042893421891270538862049735705151841902781494411139e-190"),
           e_float("5.0475734827870089232610389659331352428078143948992351380957515883410158867956807101850635781268477389521455669402894253690861891249789193823453278370730995703371107768660044240805722631397855742045438527523388138068357033534737836961930320112331098179758197314244304110638785356563453905300232424804900446438812942925210135131565395714622582546039753400051698820317221768648862647284630523558811700863e-173"),
           e_float("-2.2687934226199469935838876180182338964126813077321186953497665368161714459265765662059152938504033765977938882829606830224823556210088656465224406286328318913944612055829031355456406463146489927076074755588354557809722265412575663672059705991290166292108417939437791322347168225680285427116938145906105608331767608358669416155932498967521683335236598540622832188036130251073553699845819863659250105535e-147"),
           e_float("-3.9791690136555016634253653370560456999109848330886075381607413323973012913992225804797470639500756074910550903786108475225637813466725996777648318233313796855301786655223911456923891632007136309670750761610085821319476510761336853845427986305275902629759499596944021459139071794527336882207985349033639429318182132774937994959678623805985751857033731392871291350768460907927170687714651017779845639881e-122"),
           e_float("4.2536864443191167998470445491615255352856008798472049607834513906874746461027699053903362326071636926663629963574603229981822777423205241063360036083983370102672058963625369442853440757520987903660821742064354315659568399052072670140780855706205899650424285004332663163551376639421622087756684201241701182004610903631297599460481469258155057617640895874748003597731875108762360274737866622372220154635e-98"),
           e_float("-4.2036838493108204284057631353055166255081645238460817085062182566463857707789825594865289398296110314343586045720369548585703725571242800313004131764711329821287810696787531865064480964803964161700711042037745755217331073534445469132256301393710812309737223851277381370901250185993660804975950910161601365213428510719667600078578445110281317657414496077063119728022774779596167140994524404812109316382e-74"),
           e_float("-2.1561504662363402568576632931056656713931641387118789106425708220587514782227328743027344435382030321990036070439528358699812137303474321805919852240446764130981647032699978350717378858992438764622292640155577549050465141185673160788049011104104148898044566435648946550486948323452110108652094569268456664921292722406880972973357125021440103141064641969298427594029936843523557853609454069418346985148e-52"),
           e_float("-1.9853396410893162615425528006964572134393614234795713222816336935669464699561324891231370646856763488903605772790396974422037440799425700832613984902152568441307470392870403247281301601509216837530950985945249577174058312211251712311933541867945009576788763597769464656993267748798831802426456521418862032242377115411319511778752772332501746816305563952395825750057259920732648701458099834210721705475e-30"),
           e_float("-5.5773822997145287942833309337078579586534037855024003310585808402340686099694875561223528542627305241687384662584800720459747420407932079612561936704783774955098120631185118405491004467371611538045766665598126740554436779653279153431656052947178336317519170235047221802371558224036356653866979262885143993422469873975843844908421404331850896890584228664837810016074731323973918300730457625986589703687e-11"),
           e_float("6.5639431660463211515685953867679157293312877173900879378048961496976585430044156154496290514807594732096304979983453176576189333871875892166475221804085642937449759050096006135468903801283303280552247585621524690438426221671675986005454996699738049323516169408150830872562442669093603511317283375371349655981002946284708880958805720230347178113203082942633980056297645748977171180560060566277928663811"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00692_legendre_qnu_vary_02(const bool b_write_output)
    {
      return TestCase_case_00692_legendre_qnu_vary_02().execute(b_write_output);
    }
  }
}
