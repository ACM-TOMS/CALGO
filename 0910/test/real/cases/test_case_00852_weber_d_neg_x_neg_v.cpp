
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00852_weber_d_neg_x_neg_v : public TestCaseReal
    {
    public:
      TestCase_case_00852_weber_d_neg_x_neg_v() { }
      virtual ~TestCase_case_00852_weber_d_neg_x_neg_v() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00852_weber_d_neg_x_neg_v");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        const e_float pi_over_ten = ef::pi() / static_cast<INT32>(10);
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float v = -ef::euler_gamma() - (k * static_cast<INT32>(10));
          const e_float x = -pi_over_ten       - (k * static_cast<INT32>(20));
          data[k] = ef::weber_d(v, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("1.4447322725995299890073846912344102252000357311718917852274096712350394463188405628131655734992332803049953690995800034333718466039150601970069717641305334078100604595894402322005487051292054563661970771499626025900515590907846040774036093749505157364166712470130391405174143303479736753332652156440084655291143410219400111199477169622710826931821303495306030911952798548734288698820273669888445058269"),
           e_float("4.359248949527492869582351780053199775251697432797438305627497154243278189159549699194856564224260051178396517444396626540743997689552979857798777544335865957032612084123200810593838186922707636451950734908705775759285366777365554879082932185826763640653435792360121897573247162881021569216715514896983220017039016739359833300977662151701841118635151351948909306130055441991364325760517311285146439088e51"),
           e_float("3.1723359774418919855422532666323307967069630262281567713528423908964405880575769390812773915385141189200442829551199789656197793912648540097579839000163668729556671490708029783422775343069488639373235549935420304120277569607490076521939116860403176454686645816480800559055798087531314677650949336993521916442958305326310119259664267851084045966536333082445283945237859229547250417070333913121732605619e190"),
           e_float("1.9076165162532206475331951874485399806865075357712312079117352459188716974625467190741030093153981080322691249194867933053822220531419997150283286133803886949713433976361506870914877975638763078357296018311316061627400932482286011790174957155134233315078523241487875249874401240486694820154919138221709278568405783131022964528285048758501494270139375975518247435894768550021880843732871078479237441713e416"),
           e_float("8.7690558730498646743405557260557922783735374332147876022438170376889460886928269657835155689721310450809744803565098721547553875396561465580060057910010852643674783867251842481582332147708243546252903647050297484078518899603753016242667472839522610394049588992572278231175910965576017560856384933444222748344355374078808909473083411605056524187941108959845582001659678145185640957961317164753813222118e728"),
           e_float("3.0051386843249808675668476828720501970129973523129011735687575968225431866373884010155386658936717886153508048075529826519184048855465878215431329766084842078979378334789790075438222965064326990473919468274786199644511449350578388772217768047201933124647048680518833658181058893290666146201011812674568501673728958319069325992185986127052193643832123811427954437281739382804991504512564676681087194913e1128"),
           e_float("7.591073231397266274113835877549258602248313926157355885084123105434843642298472135269161655446237330797371144751274495598546012908558083555197482096005788312454516056308204961826548239759586233736679284894832319829099577818628362083211930695064387694301508366250288970944918821264844650024121893946455395477154130913822936699651404497738962138102783208684882184185535402452517981542354806206915399184e1614"),
           e_float("1.4048197249689438924298651792024328739495128469160897507279941670157872286844227199016624664708106921489542672089636559045871685775322923001409381674743299671777340908763536659882537844093753438157903572985541656557496610789707907775440705094151894988745454976584028800543547828378258210793643105664028792696468986756626710843510156930870108497090019741580922065737192719466233769013495956957357867404e2188"),
           e_float("1.8976974248367814608852345500974637154001782841009204828014418500043949175958049841127470714665835548835100040246184806697349556645348699464588928937356395605361449965665762282344370363488665838530108806944208939884414052537627289984152632463192050954974805802034087187748888449220628398866922849060645980086072792967603206957140642622091666793735691926196821851676343741829405707145123404676064810017e2848"),
           e_float("1.8667776362124194551479670848297008379946337726481872858142881776930187270258396256959348637859519116573292016403485495962483230060451615739698668527681707095882401779155797692150043447926572795569031487124910765896998289746882392466262076118045410056316984142748703627921225487490081629760976872166626998968407298062096005032338420800454167726942954779364179736114881097987018225979617518193906068462e3595"),
           e_float("1.3350949850662476365348257894287171573136370651822412243415025551083893168930492718084002613674061514228690024343292089594005191294836437917690877728340663282216102764692827283946715401419163517784400675476333632542008838160428855399542262674276940187175583486759412189427735917861734964820319426510104196293645272379650025688128754686051363779514242087065208648444173778987207752216980048995328420501e4429"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00852_weber_d_neg_x_neg_v(const bool b_write_output)
    {
      return TestCase_case_00852_weber_d_neg_x_neg_v().execute(b_write_output);
    }
  }
}
