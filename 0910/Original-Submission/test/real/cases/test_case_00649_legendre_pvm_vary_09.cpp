
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00649_legendre_pvm_vary_09 : public TestCaseReal
    {
    public:
      TestCase_case_00649_legendre_pvm_vary_09() { }
      virtual ~TestCase_case_00649_legendre_pvm_vary_09() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00649_legendre_pvm_vary_09");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_3 = ef::sqrt(ef::third());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const e_float v  = +127 + sqrt_1_3;
          const INT32   m  = +17;
          data[k] = ef::legendre_p(v, m, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("7.4666189718408129602191204827049014438936183925153609092745617298637644566429384716426424267822742961478904861031145810085072954344855037084157056430698851950509811459964982384011060232176955749751561302566682175233859682744257866654964667577627387855931172935992348768176142974331192995082575174466699411252128624186643272083973997559733560504241893537057121260362721178275585631563902300968817658062e35"),
           e_float("-4.3747108679905387119003607347261029981324998436794678418419784638057175267921600281251358710363848430680257059259262935493884105452468793933110231283440753587689654202358881143056717134693694069113437440188520630107615238029838456269297017189077700451422772914538597649467805227794578790946747632950794604083760596021815504668107265210075990755933534647322372845168684988038431010573279922117555270253e34"),
           e_float("5.0216659125336787458385926886100949741965619643075972686228129788763458963322795854351069248892753140871687566824813024234010023444443602121164405205779742360837875949774772346303025450442947621188457032400372941414249514063886539636666214159062041258459771818373158880076424501996313744205956699592572160838274084128983371795933269687108379957373447851936150495382353241410210916336723840158227972395e34"),
           e_float("-2.2023460644214682025393856578283580152452248431249053484854823524495346057573588877304882299896585750146001653166508126421989380131635598725271995804352247658018390357020463395985553585088473835612984141926168810226149971574041054868280381412574320472203096634625412633269323635695532636825915133172101065168274570468309468295340473623915327010810257584927167203536594727989468191408328365918567921324e34"),
           e_float("3.806919718985336907428817167072265450916034751427582897241953238897486255416991567196527330048817376627081438721034505672706111296678704918436098871631594325314702512106260207585530090935587694677600138668587306297146657322520496949724212893903464362010900170979520259473174998556710365505858478917272602320486730207617533638951747594453271888896863591183125406455527979776341059970555171021709341665e34"),
           e_float("4.4542132321972161232577502859482076215227585732968920417742129325747033218955711076651453937631842480717618799064562440954505360027000048118891558930766238651675947588344638938690092282383068220073249042560874995146906057522260153188723231713746098557282124873768878481378673518198474396879896519450512076243320537489314014179289796361262673070094813787459311569444753575205017528296384420759796048391e34"),
           e_float("1.5328548142367544375279541709055402207054161612299640404143986864831880134242674306312546830899125760127424271254375098872341330280305937474701730408077759103115170300814560057881443055433732860589064758706111543912839407173435930173774775943671947563003271791345711503694407639327107092890111693466196554674570707266220336100948989479856880346098685428598692667466414934566690954587796331253121009141e34"),
           e_float("4.5836623807975646014247915143140883936061691876772042603393514103128555601374178217939437507706268435021398398019894041025746260269816444959368954368947279783714091026087573590949617401905637185089723695013565149939754907179559768567590706041140123507255072233590194474839082717592415796430318293897551917145004555230407759136126019717215371641008604879628070248920428587114073642895282588011052915577e34"),
           e_float("-1.7732118997528283664237702409317233051086734750074235435105964962371651432893117070963593266411801298898635506321800551172889069338796259584051781160393309687431652139961914584493825703086360998809375491246639094950541307614438743196520403061856688059255415077346880001221053193221868896296679328288616326592486236992226554427756069339791067680297574013720557103422261244131954640004170181925888597427e34"),
           e_float("-2.7129694457429521994171696500807855154926614107593108118469642231874532172594451582452548612451893477174929138810916523508641649547985632800291162961255870213079575529000238937756889306999600506008459482944794897409595891414165660841942447621965386741559621898508556694973482607584777769174797619171157344841428728557883380505151711920471551339464308771691032205435760891102722948336285514059981364188e34"),
           e_float("-1.7496490399771700698069589098063646995539717045418084707078491626522221939478147135403999528798003547993763981421540219240037108259167231644668756608303854635537598536840490240531776480671494511504378270739787993097958419219110729236191392350265562621014172913393981367185881166249225636638672851805770545914017731897735587730270781783201278182204761730904016044219992448416186410729831832832587965508e34"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00649_legendre_pvm_vary_09(const bool b_write_output)
    {
      return TestCase_case_00649_legendre_pvm_vary_09().execute(b_write_output);
    }
  }
}
