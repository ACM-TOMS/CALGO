
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00804_conf_hyperg_vary4_mpx : public TestCaseReal
    {
    public:
      TestCase_case_00804_conf_hyperg_vary4_mpx() { }
      virtual ~TestCase_case_00804_conf_hyperg_vary4_mpx() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00804_conf_hyperg_vary4_mpx");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float ak = +ef::third()   + static_cast<INT32>(100 - (10 * k));
          const e_float bk = -ef::quarter() - static_cast<INT32>(0   + (10 * k));
          data[k] = ef::conf_hyperg(ak, bk, ef::euler_gamma() + (100 * k));
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("-3.338667194034127265044835471180647903892449011973200918078258355426834807476525729880151590381138316367873695149699302187207076525691167207378413860917404636675286876405587312267571196239770727288504733335170145311739313559724108901876847431875498043761933861409681284905197669898097077148451945637650398213547114898624789243335425135155980536783249743397374171458908105431549346807387529428815815333e7"),
           e_float("-1.1260132963059230556404362970126848039147208231061444323796688249969210571015007565435267639260765156452098437066144500773021565160846057387668151737973676632332169543637892294344089187215389526003406499179683128409515250904289560767530217118013221503582055336414517475856313524827305965043073357346157251318947022794838935459814839236981629233253263175449038765272160033514602902059825554435858979421e125"),
           e_float("-4.5675177027696649347253516867230682395199128025216322362150518602260054884881560883654574598896614982973524732217038512247655827014065017853401436839980211044467699467453160890414913418490019693738788773768831054576751937965934807887403228750004326465532424553484696288957443774447278282513995885369290138334484532476665102631996938716331031574157419003728357872374542351973508630044503509398261771384e195"),
           e_float("-7.5258503573557069414349774721536783194193109317388827399214236716854915421123184375483426376408537390062900729670170382302355048412861122511380712428464172071544906348868691844517257733071486127556589919048290223609173954985612002447365281036595362041235118994765016800825332728595513908500293033922613194117233136301813206766146577625348342637065694624513693114255560903791069293718620808233386595042e256"),
           e_float("-6.953066753962095850354543731239600996374745407083447819009200132845944507124114346567747570505241606787150183388659263337691712068639943207209208829946669649828372885160239195803376708470691669171479221703006251172948086780717836389383147799798168446159508236869361814995673457267932162356600416795386464772759679675053739795791193722683201425998238550161617006845039925639667358196124092618311594388e312"),
           e_float("-1.2390084105109138673379611271580172033210951251541623755020354988671864556926326167126937099909629997582716799040255842649675884296483481454633603903536977506126709498476963702222673939977084371003100010541071924401430903979295098935213812860256247482346415031414465878191857898316673484668196108510166947585288098696439256030633503625994977953643623412594655564075991665595945648675636363491222227149e365"),
           e_float("-2.1108561667560107999036437516698868417890639634083034042458593171073818559495208242075047514268910832516287663281823904457055883115346022569351759679838232820570827374610877698147058888333164775308681487747790126391630715136967145214680652144331331255150165723322209258268910978658630633489575050616953153314203975641750055233320914494425070219634348138450193584593424168338765684296966897398803769834e414"),
           e_float("-6.5055129197127784276480162207477339783017170962666415192347087573526832467200115586288826557664417663088368195153161858858169031449798335222621749967242503057555008981892143614748137887556798109419659146944499965873065864823510075733823725328251893056205057217611267386017419556890270421298687735575245172908796587819038570369740046109008662673480531572516963665709296340038622188527090490131993621944e460"),
           e_float("-3.1951325158996734118634690949697731175723070168566431538179548456265461487763954451377207365951515434824895831648493444078993698435758438415502933234006962610826234564382488314821497584873206655388228942359618484358217025456753947640953153447868776729201504024036164877868446799527928345465424163432640406501170193194992534127697433495972076771035853150100403874998752804172984404588193397310479985168e504"),
           e_float("-6.560495893684765160415476674051261648672659094929374562325586625430145168780892523861949914921885560048774070975005674111342033422656477503109502699748965231595784916579548200167781874504212015640274243772600086117977401604182472739067135560462364247860379023853351767188188327049180837591014638184135510182866910243067921278560584934249706267252535607323044277703550736195567254985080558763559142995e544"),
           e_float("-1.1006234735534730329981667478560413484210690785486290262635668638369332141193756839167026012922032117714042979048832506303299148846173435328420943623160537172516089681217799126771725805963227373331372708901964375297308252298422359210496125365994879112041893742434188517478023880497009968826798073944046906661941438018279589713851801445622067008137151425411130795491777866050834624730219044595064610174e578"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00804_conf_hyperg_vary4_mpx(const bool b_write_output)
    {
      return TestCase_case_00804_conf_hyperg_vary4_mpx().execute(b_write_output);
    }
  }
}
