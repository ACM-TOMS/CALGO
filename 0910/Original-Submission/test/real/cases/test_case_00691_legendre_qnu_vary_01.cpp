
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00691_legendre_qnu_vary_01 : public TestCaseReal
    {
    public:
      TestCase_case_00691_legendre_qnu_vary_01() { }
      virtual ~TestCase_case_00691_legendre_qnu_vary_01() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00691_legendre_qnu_vary_01");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_5 = ef::sqrt(ef::fifth());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const INT32   n  = +((10 - k) * 13);
          const e_float u  = +((10 - k) * 11) + sqrt_1_5;
          data[k] = ef::legendre_q(n, u, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("-1.4060613266327593816908910997483259921904236477268294092946528848161163220383539127972557266232615951314506022311805227314839444683623923290884250843598831046057588843995839896420703410327425181671830066863369483398129872394962645627589742522747662686876948688067654019802252454805075367194441440499746017275795733357930669059431773385008292817376646206369042007159827750631390550081235799569907612081e317"),
           e_float("1.3370837134300488530737119913741093909416365938910761508417694257507429174164378718116520799589037792136163897379494055740003833787026380880645988016145429496513174778596212640460020126547494796034970513843619164346465370763090041504364102723920844344692280219250000905162981747472594150738603710547985950064586343226829705276384319864715923511140206558024976362525809880065893610180430822866107808577e208"),
           e_float("-3.3256664042474474342580203459321991453241609691947647948176810221846107436521087243124089548974127850676300063072064574674551505846147489587037444112977945175651151621035456704293565315022771082968168124849532384941555472062726011777240321202709942001845072489377257491429521485165225073102336753042098591845314362510081788425328936529404661115888579509241170099399281982884875326849886357545653040704e172"),
           e_float("-2.1081316580403024086925810125090691282708715543909662087828802463573721454398756033706478741522624997751999456072485272251770156084511411600659843606983248027991745333312839329299809355246654138047952350977913834681701051864209354659458926859182302778673059951339020112140164874664461987771713894449189573793485690042169529970550269795304766260400053282743560904828231027191764995931752850325745482505e144"),
           e_float("-2.3009362781559569760577981620228813058147833822674947848331625615198486405812355910905352725020801612285309136753640807622102292264044599978005532187464481237464085807964051943865262790755521665697380897293228799911859922422675213122093610445329094130426550963108348951522079297285042619050820871694077016664842528136596691847356168703738619887912938687947734479638161364681389309036537438350487122286e120"),
           e_float("-6.8062291414098181243298294814138780257007568376583345314889823518336969720794042120437140950641404716334682872956089597972927085962027520983058565399869816712197644242984331295276265933107198883812988330334038257762365150058932782604861960061855283630301030997805998604452843877698523076497487932695791825006286089480141095165463654565739133288798208508958037013770752986059204937282292392422625710536e95"),
           e_float("-5.4260753137120073552370088710399027928595290306295834124515675974581960588072255357907751291342545019105054064345953281906019384659711139343153667995049370372365907070412317425523927187008452245461358526790468688485318402368842132195883504367078808917858224595018885576962541948243307496793820688732765532706851435410791856040107805252030776090237027948840042199213456652178138137073696464117152233581e72"),
           e_float("2.9203390139298134921066867167914175686486309827406661752088949482233213802994432359069895605209232254668983834885978732150084412072907558204594008112228556796162269498626503404292641740265125105385139366448839324803640290217432164355399533793575485275091485817535269798434589935310083426096542122023143945620246205974405414392581176827840545712454089555428144195769224476459162889435868398222234884361e50"),
           e_float("-2.1982579297946934983157520514915726788920112968269773006464454366916156062771751279011713683432640166998572747615669308089780898509238650691961413713222597451574339729792650988244690482729035885679572343453670147356326389729933438839867937550385928694855670852386208026238345299243383589812028873044152377158633373714694906890501393665809303539702631466245404328501122396046371561220257907023626874125e28"),
           e_float("-1.4989609132911555921002819221043644328467962178427964574044495984236331139606537414553077467212695798900675625608076242625003730770968781245180775768316214313851072640912539890621872502152210460406909480741322136403736410616473831295328938592973663609891922635503468904100108456918528921359820294393484373340003306132354877821236646813643471001016283057014084714902455803748925464120235376154302732091e12"),
           e_float("0.33599459429074214646840944102652195131442774129242752572764249744218387003669004814317475549314906258070242815957821142214738064530188456932800849951089249926034825694353881168174005658733072245743037358035656050908870586691688086446186775360831270682322442993877212891780892561974336182179980419833180004522980619295634882703566356992088815429686766164327170564968265757476021075874847904405817511646"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00691_legendre_qnu_vary_01(const bool b_write_output)
    {
      return TestCase_case_00691_legendre_qnu_vary_01().execute(b_write_output);
    }
  }
}
