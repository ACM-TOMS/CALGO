
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00610_legendre_pvu_vary_10 : public TestCaseReal
    {
    public:
      TestCase_case_00610_legendre_pvu_vary_10() { }
      virtual ~TestCase_case_00610_legendre_pvu_vary_10() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00610_legendre_pvu_vary_10");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_3 = ef::sqrt(ef::third());
        static const e_float sqrt_1_5 = ef::sqrt(ef::fifth());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const e_float v  = -127 - sqrt_1_3;
          const e_float u  = -17  - sqrt_1_5;
          data[k] = ef::legendre_p(v, u, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("1.3485589185196886016512892390254594906394779468184507264017327609709532445187961966714781054632955913836748290458726491037516371663927806845221677273483880526095463803942160206600736699415137024240660497656678856048406183022802605193044681505426111172775536847771334651317852598095777459628958616650721442503002607156745788742014602019848598363566661017467522418155685889974230442670228314066628565718e-37"),
           e_float("-1.5809552495411460255950552220333172194161209293233475456414944954861904031618066375297325453452130339997548655057541511990735822538355635856824412319825683411014841463984718476619488060365808290302623618982267714002042834475223497855827930124601052244073583996831713021375821446207184129450031946292760987475026644413042629574637194454902421182318913497494898486564850985014843066701923061010743913406e-38"),
           e_float("1.6341467922427437595297327167854460211361379887019670232246263872001708584435762938012163145609697157898007718571238866550637339768255535764454358148904158562950243992976697486155696914510366526980180325310718720044124337779297415771095618588958002695025719968543300420886648816945004117838955048094279945963825605850141587193950205706720431632307602373746721886331134922586353015811165214119694482743e-38"),
           e_float("-1.2150688457267397330413578491555510187592000129803200565271601414568601114034787592455425930049645423604224007667839317055284972066371222082366442106966180563518650350142671785504943516712180540491234104377818504127861612130910917389956618910980378176078712286481246074763378157638173622295482339633107877273641323922483261318075945906559616561000123387809086030061116736151050025398640807229352513232e-38"),
           e_float("4.7451256762180988543980928558019701917833091958963932050618542117323346633516223020395600317596954996202852520266038799124676418822273834143500660508946959888600852487325613585220792703178629243848165733414088633694332089784986649981643452231925851192765725191689812806845776140082213166405024547910334626915044719831006702152882954784798516439147840848268651076209231481711293949562875299606077450642e-39"),
           e_float("7.3055286558762211014795925436470601984639436174060512774890179375961242335243994238784422677662898497225451423924646689221951765617563177288644805309836213915548056004836881192490032198105450058467969505714270311246930345376124417218741768296481240974224981436526754410133779637057980876349397919529685596037084112030267871717757098351058341251792970762163424224290210475474060384062700511094579864812e-39"),
           e_float("-9.9236434758043805199259226756275621828720801311836398969118499889208247004123981647113796229591270055775110885138425258948486989355616893733003582938826106251357688034508911963145990758765731200465343407038085422473349964142683963124480636763788927070995421581213793795950505671908989748427610001867203950787826541332944749928458820269535017261950517963383372244054325792238000031715136575228105599582e-39"),
           e_float("7.4576514193645481391548252191159148407622736360522119284954630496253037824223638404590724804733688400879845387498876789004897575852383748836191996309442254534947234558317574760941005258013459678338788064843480750216331386823210511482905021461518258458703560777152327286644452030911989061424899332890041755236527298179323674496433562778293540735669443242105182073764842101009798265449171636276136144883e-39"),
           e_float("-1.5415534141769904020909812471789902790654209871570997365034984425601953491568466744030767609936083686586637411412951925584523728896692167401453978466638080620957197299782984058067121547785185227022068558193527643031927576719859732136942024801303236123280056047001686893499148791482350336536501518322834284687753325989107124534056641612023514148806898285356239298358952396082418374388481600146595976935e-38"),
           e_float("1.865883275483865609813782504222718185678323218920391116674045804936878772400347425148666177628998456542815827826916213280515777336883784759274769397199864929332379057445557488225279108900339129826532739967586100762527375354958873744893452830289264966071355692405873777058903124978319039822066703983491576862345843046228125494368388262415632284703757216668620185137469062825081851329023352421539432661e-38"),
           e_float("3.6508217076393644968321739049449277912230258769232904038412121407109099503865678100293516865809624553401287782815248331920574258080916817132404150797112377742318280156609307611144312458328221173900309955300596823102787940921787221213057907708948771283973956232930135348912811954668094882027160854496008761123752632639489620559461157120939052308740869545178147400179260476879279717562263959190580365891e-39"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00610_legendre_pvu_vary_10(const bool b_write_output)
    {
      return TestCase_case_00610_legendre_pvu_vary_10().execute(b_write_output);
    }
  }
}
