
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00669_legendre_qvm_vary_09 : public TestCaseReal
    {
    public:
      TestCase_case_00669_legendre_qvm_vary_09() { }
      virtual ~TestCase_case_00669_legendre_qvm_vary_09() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00669_legendre_qvm_vary_09");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_3 = ef::sqrt(ef::third());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const e_float v  = +127 + sqrt_1_3;
          const INT32   m  = +17;
          data[k] = ef::legendre_q(v, m, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("-2.6243737951761984843343311342968977579016486009112425395209279006687348479417128680911739815257052788132136043851950091998008839688179199210000778892305302651834633587361192279918032393282887452314166025733884698521646133236550330094236457093408482080622009052802013432118349427760562961567646791298739896422793548685272403836086256383700643140329036727001658748961491326107933146066214051946310707881e35"),
           e_float("6.0940443258658898041572801988380650232166678454483283989770291674382096086198216472761804019775015921137827780742438266495699540908949172863207514990672405419250254615770988726443685774026188821456338728060585435884960593133521327164547889167711739540186982081062442957280657238818657398295732224963604667278406662799264629266234160775352224974864342145755282964425349006589557164763999371008047805536e34"),
           e_float("9.1421220700854007989837384611759574098909079995671975875608202661960802309024751314034788434399565917221156146514927873863268953417926822798249539929425250485578868913767512570399654359975574468713726469031766865748841058760094775919001192432067028944167558632378810537471742575841127723978101557284946544116443251270862730234099297155475450143450742161223795225676044573350686012510879756473433114412e33"),
           e_float("-6.5603397281969614410347709475836003105092427174688637694079775981873375942552921414292875687480791423501532666352780166361541546320801389959596389550660101960272121008569350044791172315613855872083098391846320157390666565057423710992123077079946438626477652559767079058907896082429088364425654540503530949975999203397106622541156414714012337336910649388311999390686402506821894004072701364740266900125e34"),
           e_float("-3.9631134875250840704205523581636845661709880745908469981125059950736568192404531402787396117700037336156618486644490680150004988234664335418109470242858808655152877805856490147075424393410686553586658295022892533658807325260720892761648715368678648091873414408203196944431392927649747696428166745683466719248699190604115994431257195227740700070597816703430421489593847502729893165110005798870282347469e34"),
           e_float("-1.2309270923851696132509264171941324815261791281290181909992220582851846507149255128971696536200488587785529560193389333890383429492743448482126716574072587774644781288651287700487870385378059754881455392750560002539272853398606180083439125512031402530435478350414499139168462733807234412690515702240004919275121925572497072012147658319972889066920755547745146680827925212077050972279272280997928456727e34"),
           e_float("-6.7578032628045770572899201080541730488287197421085670308902975919828175685053780988066874222792298986417071139909395405605107482980139075969225316546345878662960522336137105203023560346012246110964124811721316390491269435726015214775200098178748694644633126561511011295110128057049097017908003324730666880211211765095389432723451091437713025905108726077392759658217782608999450999016985237819751636239e34"),
           e_float("1.7792588370034639422434978510741521809544546979349275711974236051326103219806242689917563128443959961426037773990946311817101060894396780184904533384192284435320029353126418039803199288921355132565039990319887869845890133084099631624228216613449474970608056839584157663530388244014448087072018226155737767309284903389663078047390420746002164811829899533016253400243146735761959072683442925084071436722e34"),
           e_float("-7.4362862799157164627933269735879824656262748944635202560452451669586528573846183835943346895886093350932024376129824835946847605629027347105880244559674852825876487808559554817987998783484396744117341822440906423105038116003168822793024810625783217116857939481423712394778202971996554596810967456413128339819430396651010436718140514150950847664755235969009433632441780670008443054183517401947143609244e34"),
           e_float("8.136225159058587388780670224861675571995946155624809188338673678223539657478542960610889177867699462420688976887669581362239731416196208198943605231986886459246617467615160642105852601596451892469086274787490336967609772900269580803155918364646122243782848882054408920521513179134352459663387214997277668934217312343248834674447686967437358148625880389225694330354076236540490035379104605393333621138e34"),
           e_float("-1.2015423399852126961794134193195837459960001195321061553447125960724762590892197127859611819239880170448301677143421665299940624003806208903227521761277296402318767181373795388244213488317138146442356118780083419673050371451930842109777889741762202714603545174694396627545882027810213868468592615863886513664219926709408706532810417856215067742195731957050212504515470781005614674375644853755807861705e36"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00669_legendre_qvm_vary_09(const bool b_write_output)
    {
      return TestCase_case_00669_legendre_qvm_vary_09().execute(b_write_output);
    }
  }
}
