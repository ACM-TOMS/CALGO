
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00683_legendre_pnu_vary_03 : public TestCaseReal
    {
    public:
      TestCase_case_00683_legendre_pnu_vary_03() { }
      virtual ~TestCase_case_00683_legendre_pnu_vary_03() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00683_legendre_pnu_vary_03");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_5 = ef::sqrt(ef::fifth());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const INT32   n  = +((10 - k) * 13);
          const e_float u  = -((10 - k) * 11) - sqrt_1_5;
          data[k] = ef::legendre_p(n, u, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("1.1832421268265842485767797101636653350046866919070281672154121745135942165009579363134589416735196597733283551590638686531604614697352329721024268777340564983566938416668185884392705583984747916791525456220092691059806875123370567192929958775034542124570660632020240824702747646275224824046053252643368879960983905225155310848151869406417295297824683968738858776677146061171694396980718419319779596012e-135"),
           e_float("1.3197474514263727977370089131167205191271293071529567681604105298722731295992644901841897734535753929867491088113470278936485836739943983824139443867834038804645514584675188492054379660709403971812748944657116554092042707046271343746726363229482808571564138968229654925990193980205242785882550515451833390180983895002003549241725296122263492486937304914363411275913413772693538525700629689184971506049e-190"),
           e_float("3.3701284630108672784056025501227231502228962011638544611709323835100070478444533140836369367288271535459926023579808733323175099694645425077226050271375515297507443794031942989865466061824056722372913268984075822311368311992707751150277767626808527202264401208685486530132136590698232415030254826968757175738782556599855484553899248883872729453293400401677303577105348924386852682231384400684523381599e-173"),
           e_float("-8.8786221948458364903058526625381253716533834673335107393638963762997518450699516439134432545402237659273085852230219824127060716866985331256282260699155347379460956414315470440299329709418756932227825092299457670666830006588059641879990069228955506686517998588450760790870042316231352183037705678467069285042392906077078935835636441177303824084824007720251174978682807929601002334397860547188646258407e-149"),
           e_float("3.4882591063487830379085724644072710265644457729583131318449971925303229707935486339149397377710892341578367059322505429023863266402524179917754494227203004285497033786963147839971984838126913725777708564240949068649328048431593549434961609867529893478480430286588812294060964660350850878471153853493525560721137585671061351545418672595672713829729971846300277208023415076789970589269487698078810932465e-123"),
           e_float("-1.2513628596550121526307286083022403021478619668937763679396584853078594249197856605499350717406220976521379486140059650031496900551656455301633419108684484837788477761326306822183800459135476953032346251539739737665291074601424385157537160149365236729475920597587612305289371621563274792156836443173942906863632801860861187694690199806858212141255895232605587250471877447586240277826408346163633569876e-98"),
           e_float("6.9220364407807288782563302514847415047989459363429303500366317729882671151892622393459861085687620713346930090881050317951520997566890258395083940466219366401853079977021516923281475352408106339589019297546764969934400491059063991833576009227531180990977978420203556144408651747054142144586934747007459683543432183925050490936454337803807513803696071563558744376088327792589563831914366752885748390832e-75"),
           e_float("1.2005706783491690449614881505029570002973109861418465733290055572874871885704705978200120516578462771418572625043479332434871354375013270713144903808458551039993431886395798344370166287807834985409462785536794091175490919755925564661041109997337830554092212152499134837039075991964169911583788786297216991501174456020994219429587341452748211705352067393194509976390121624645528093235636125239935932089e-52"),
           e_float("3.759494857175723486973644270810570572171137379781848451857958127566782323365019030043100124647785151633883693411515182748744684628084014578110307247496341179178691039268082891424643506082103588667459999696111293151449531220007070777273681075614076836917939683165173888453751918319951110200682354364004597902792167390128583353961231268163421643938713756753840486545824144366065681576585622274681421824e-32"),
           e_float("6.889395126468909274836745741537778766264195108641526965656123312262823512421137457512635583162673500530789015208246957801673945486319555486396421501249369606739958683651918587655345308921868400235908727767963947903995583765828412173195715432360957013783680889203054205724316760796474463299462048506157276345431438066486895622111591385546779142656231748015355063361767153604938348107550655789624242492e-15"),
           e_float("0.30556615792327545396113780701792955328369721714727281452390814782920515061502794206272267901843914493376611092549136870835161185251401320116977955134728752421557155281499725676296213614440821783071034756783954881106457149791287943454222547289779809615854175104248457843720769171097695842755561513752389340820824890407222045828423246181249728718386606427230953883886394546756261361127963935936531078466"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00683_legendre_pnu_vary_03(const bool b_write_output)
    {
      return TestCase_case_00683_legendre_pnu_vary_03().execute(b_write_output);
    }
  }
}
