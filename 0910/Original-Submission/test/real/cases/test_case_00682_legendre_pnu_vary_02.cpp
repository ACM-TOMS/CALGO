
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00682_legendre_pnu_vary_02 : public TestCaseReal
    {
    public:
      TestCase_case_00682_legendre_pnu_vary_02() { }
      virtual ~TestCase_case_00682_legendre_pnu_vary_02() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00682_legendre_pnu_vary_02");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_5 = ef::sqrt(ef::fifth());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const INT32   n  = -((10 - k) * 13);
          const e_float u  = -((10 - k) * 11) - sqrt_1_5;
          data[k] = ef::legendre_p(n, u, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("-1.445090077124886964954827009726816347941776037701058257720133094136212973751239473519002923006030229929770829527533325472220752319588567242427935060638402726708271997275764221899752736905782741420815161661915462100914536337602289870567050115058283606677898042336690577690913609707626716586965035526533793251319653327821941444445811732897421905718579306867377099826326847793698785006847255020215818925e-134"),
           e_float("-1.2159311785807106826451706599040233040017027024514974807972920044906039581755474960704411793646730799252286008562722017741586511022409000154367752359670883484807618234793184776566450116397197278786152259641106528524735887988512060861266840904074434995296975899252271605873551909679777883428085450862881984129543452048547271121157535897956839009457702981654898887723124878215183851414403083726609274302e-189"),
           e_float("-1.8500693684990501043731141385488633037871716573670836577745023736247162496809513597349945767058356030076216512414258579988828265820938433760832389286619047170894173208950313626015693113420100250455195348648464978914637873683498707632967388910037159336243895304880577282670968163524752543499093670830449176819956456108446164512505962064882043145542756391057011140560056676362259443412538376954144917877e-172"),
           e_float("1.3216679559920970699091626854579392645153561579613930556295612484778957107468415582962655411297926074705882044166205269748613934765222113433490454478814942307242784028182280565380872731088638197984516949513850066122518698630423728348421348814171239060719240420434382772231772241012757101636820792773371832940376375377238985213569941657632458423030448527258683538613848205510996241461155240497925465024e-147"),
           e_float("1.5956781479878949870845289640275308810667065243254065833677621919948756189877914738670025914643296115968250006492926052544213691839052620649905197565118886662209157861182109445934121868914290546153664929832169832897333762632967395775419775293307980597412797643906822513558015291200732861078018104305609511449760431680910636199088485933153821493768233511319802991994179540742735960901988073081623308353e-122"),
           e_float("5.7547848853555429062960447288297399028145004710345712188364335884141650637196806504011785170237390064841722293392777362711316734927903700593051221294079669422217976826641461857664687775492494264237768729124845952307852449110084202614602138461541391661970112334580961686230456786880353905043271133666441187897617081831428344892209202331673810449186336488007722241443564348190744361971679202385996512423e-98"),
           e_float("1.4533021382049555182471169158630485738162451723575500417603261555048110934847023206572933780315620381367823093368965603839309534573944466075586058836648488453830305417877795135404212282582625762982217105006206026853468079088358192182705821920009026393534748788331815916316615638662880880281255957234755543917028770143334897953035181866193097001628194741468215983481845251627347961604355413527491927056e-74"),
           e_float("7.1713029229174000076851289838442415102968574384098747863975225451833850187243283737790605707924493837381428232263802975613102413764482309437822949283367118951458369407644932844213886276409449277798895062531270849160272254183042220819124260557331337129870651386289086237586404540494899047080183932445975352874114851483557212158329817430189178661905543518633555805888447027276014627984216413535903753367e-52"),
           e_float("7.0799236002856038153684924619781758956945700101883951314476006635074384468050319575744319870935566034568383161979101914903402373000152242197942467611576223790951297760557072190088368819425677560344349197383573697091173582528330590510139046692634468317303343597846756080672732549147112874055963779024651256741376242662564748808096802020747251965919084479167574421644907442373141025613517391261997492832e-32"),
           e_float("8.7874426247323131713788462003801191013536232930406421181426944323626659988756951000573084576577043409241896980097711359860181371759237526297929059048228726217656944050872032831185783634389078190544182953085028835194041899619146592709682794592351973772753240279841074477788467262017613323441680068419967706272550529259045236149672450037521735636852509454695510625660094715621228505205409060801958872721e-15"),
           e_float("0.30556615792327545396113780701792955328369721714727281452390814782920515061502794206272267901843914493376611092549136870835161185251401320116977955134728752421557155281499725676296213614440821783071034756783954881106457149791287943454222547289779809615854175104248457843720769171097695842755561513752389340820824890407222045828423246181249728718386606427230953883886394546756261361127963935936531078466"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00682_legendre_pnu_vary_02(const bool b_write_output)
    {
      return TestCase_case_00682_legendre_pnu_vary_02().execute(b_write_output);
    }
  }
}
