
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00958_polylog_x_one_neg_n : public TestCaseReal
    {
    public:
      TestCase_case_00958_polylog_x_one_neg_n() { }
      virtual ~TestCase_case_00958_polylog_x_one_neg_n() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00958_polylog_x_one_neg_n");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(21u);
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          data[static_cast<std::size_t>(k)] = ef::poly_logarithm(-50 - static_cast<INT32>(k * 3), ef::one() + (ef::one() / static_cast<INT32>(10000)));
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 21u> a =
        {{
           e_float("-3.049174486774943371330323584056212177141430172193203622439202844033441396415660770390279080669428603484234811789673208003464435137004125791636540031724397193481457212470022602732762428672138184676546138528838690456135565613158173861157243820543625159007568626230001e268"),
           e_float("4.28644058271412257336040745454665699339976872149983387649278089694563351042576075913190250809989616514729656068685727626882038192361108569050546436949782115272874733923985109672509531915660350153751307065374221940579688334494553719765718871677225706341977867984163587594021409910001e285"),
           e_float("-7.1302773940127440721336297591173509528947238505897362594688533719920523932740841833937276505136662470794993092013815818615950660227189490839919712794414855894082229310078435292822363863103577660861935148767680109975489306550177422052108347451618845074163838910968683957040335666734199045944279350001e302"),
           e_float("1.3909977521347291811515653194205802400694745860988001393688801700236104904857855110738166846111330796975031071708483395573805662036722196254728143651149012478208030761139705721570464992143542055454103379099262153402078273217067309439893542955925666562656052785109434757995887571442153749669813709310546725443434870001e320"),
           e_float("-3.156925582741259574023572300542908176481528359758996454568335703294638889128718477031773324722733104395518062351644949737424474951960146866399052356932254942393664574346981785738558118722825511862177014925314304385631114772802261185231225030467917093687988906883307698995251292353976609439677460745250131096904368934020196574079030001e337"),
           e_float("8.27491165920173317525337426698192791697380035623466787155756670666115490672244704668047354147417069889816114988611186675904795587329358488705730865648537774129654161639297171501863477604955273804818242827980363310141090247343085797577595818476338546932804843326392951026202908125669261817409960772905825885311819398741459679126360030704370329032310001e354"),
           e_float("-2.48860608364192983993315216743883954027592429846389637970539740823419818726599909923736063269283660942105395776681777499317193674876789892652493475595184985090246601043112817833007045990942276742446464340654275216816833303415566974228221003254891848722146577867523980710264671811673324494837561608093566867785704877549889375923220460026439835797083531913871533258550001e372"),
           e_float("8.5354570118305492073048503734643594177033267361396846658914630601773713323658140324695490129029210567082371957801511280262430325292568586120071981419786233758645388533213779426536190809403779982195692551026790289285639955101867511137695667568270327218968473209709008504838835102475509132609439819342218006256910884522091157687619063623254925784787990529132239969041342588658611268470001e389"),
           e_float("-3.320312780827296505485903278787101271786849962501729385873402740596858863327533202959328747027012441133429769597480335830678977365322444417061604844609048978240433874319749447675405076271150498335662299417879715239929136868645384836709204563323732210799731089565730482337143194528444235692211208658213193873177149251290157758189200276201981225347630825982340913969160546931593335656094087561022874783e407"),
           e_float("1.4575038795834525994558756360166559154089317877800853901865717198912573506376614392228724819774957803074194844629099874613220178506714976488340259616543081569128807145924367119459125721026706370849529495893286738273670635496744495888698035225371718131256838917960196484296944383088101850140728804378182021110719702412967082709983422880666755023418665588940785281563308787121845541409218762882525902959e425"),
           e_float("-7.1859888973878627494343291499950927929273998003656765832531945721992449260629960641601931661955004394952247767533730106784009032660649594902756393196311123682688438990957746498574289257113302188765732460545560579683010687874423815550342855285114096953405354894870116441068988699069776715215739023192737826906795621247561246268837191423221055815020330513771041129364260977185996893177844486746622505602e442"),
           e_float("3.9621293253543334865575898831578151493508279760023449438529677128552338937072835624476717020048447575341976749135235860974327788046851105904740573961930169175449753987857809963441193404917604328649291575559063264959238590416545571151351197089179596456447284163051601107835560184760738625591876729975765040985507492122734865805564298309715019745627151717660537944849982704082857005053935572787314710268e460"),
           e_float("-2.4332708389887454760424701405839978815979104522533631688636705585722905365968193742360074555355802516818697346683210963544075176789630455724456563114499444144378381557713865841308676889802561888336436086492358038245113194996868768913826229284861105122551736045808189726015858005594937636107001559742172994720059904936369406195461633234765302583008820747550922919188668616309632461098908402378693253531e478"),
           e_float("1.6582405244160694610081717540369380346000389121205245801142589269598593347537330081344299167357266840567873268944968668625790936371940554861088631329965362166182264864731462239262082206971354961464158692425528840845227702028549494330790731097932411426892627563585378907359061721801593740980423672442068838392333484314432481849119417294260340180608192955793706682893782842040991822233685340582121687427e496"),
           e_float("-1.2496384942448259226887379899538183590986589410618245800189501140839044402428976285483894077335475009025934096148288866135851333727871606555649243246689745648753005448763614860780601819099877383326191762539939232456310430765302401055948918936091168909482584493938260742004288996462602442353913502083828741970881426421842609242153940529128369741500824740178394477894808528233798169502686376491839976102e514"),
           e_float("1.0379679501154096542151776419089669472017341872003388292952561702324430516473989743109397762721849454538664499476545537230369656499528079384345338855321903118027436640669432698855894094277291764515136114116024503192877078683632125833741469973829056499503582416214854216271385311002397038348786350769783577540882303792791415584832009083982054324976890888321398263264712809426937100891990411661555788069e532"),
           e_float("-9.4736672847664995923441831576834679502806143729715328710408799266002905587551474521477740621106001458589372946433003855211786813123133964391230467739767094662237632501269500187658188965123930566904185987737962755311396315693102690474907175885276297646258658997922332856613705967564213832976801765428932861402522574005114583139740995660461027146256754518154711385921426457088837860826866572732105181652e549"),
           e_float("9.4741408733893282399631904878110909581761842336544614021770237980735873693564590732549437227012809472760202794456093642664290007724124802168845493076975861089878605045401980989086417785746988259853237274920847969208368490416813161340820518637612390264038367224458578647518213202406834560552653074502693991692958016660058523322061351901969709052878989851168386862534050616334274115320147446425569174305e567"),
           e_float("-1.0353226500459156792612058894122455659610738047276165924476497137425223987727650783594576576346178461114882939937449809015418058698800975919776036049616181642230113763688388243989810902675051566706098551513897450660230374402243035916216005122367445613525269962289627781273029378783583631347063806518576599116593439998758243340951632069127129148123857360563432508093670176874221100935532435991836156698e586"),
           e_float("1.233161049745636855149822612899168863541941728627432328868882944071498122235420889101969795464749985085473981586795338896331903189076690818163476855893172916707077033718210306734877364041312093689927440637655668290546425932325196211038173008817269950438003241548773397918060876363233860190826520929108417293028372800454490187006619000052983429133340266531856568200520680000979375279905515495073667351e604"),
           e_float("-1.5970844412568251028304980499708522400829525333885338782193889840858823351426983291204378993374817470121477767257926974376746338228718971329656428300759859139718474365927101169566716920989506660609971239301482128479613286879243460141257315081716697444839840765147599594593664438679559882215209768031592131496764111245158306389415840450570421395854691547059927975517156678910806010212302757028939462253e622"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00958_polylog_x_one_neg_n(const bool b_write_output)
    {
      return TestCase_case_00958_polylog_x_one_neg_n().execute(b_write_output);
    }
  }
}
