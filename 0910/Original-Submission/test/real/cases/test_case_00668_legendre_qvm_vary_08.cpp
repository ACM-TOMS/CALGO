
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00668_legendre_qvm_vary_08 : public TestCaseReal
    {
    public:
      TestCase_case_00668_legendre_qvm_vary_08() { }
      virtual ~TestCase_case_00668_legendre_qvm_vary_08() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00668_legendre_qvm_vary_08");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_3 = ef::sqrt(ef::third());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const e_float v  = -127 - sqrt_1_3;
          const INT32   m  = +127;
          data[k] = ef::legendre_q(v, m, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("-6.4127954094305328041175557425726184906244037285831242754076590753312435839157752904211846895755623278974735001852309811920930395525781078086071606731139463173403853016435444268220667340179321470482592758744266683189029745176869145605278222960446570573890021544971814708776201706203284259136873862646898903707413061291322642940954216842271951778259963438540703790099077679215609760536928381324462958159e371"),
           e_float("-1.6718849764518431043686055901759607260521199984722620917257252030967587719420304650424433557081784130081059255466480839916962204325746236801924761792238706998529979022669506522984954066291084509067756254590107441301260816959142884193221179410908489985107195060750652926217235960626701759120962989038536161971713821128536542666647038686165010968803126633675833857584104664177525344511182365561419646049e276"),
           e_float("-6.7663000845476587732162199341192164839158343390591413037549062801343350488879437472608041934952549985424485884875612291385173387358284084797219763095783184384912416164588377122634706934531779458859512888294593793767093464139628803296797490774668032386185635987325806101848809507051550680216013538560945411024353012099322563803615332889157779575577828109692651292880710833234920619335439566558128296802e260"),
           e_float("-3.8220326313439065026616198875467383764785405609040885343214874430311289663479054074465914617983968386146506433099437051852326635290275287999124907496183741532778325742520133808856727423646431593645574905322388878954501813480509978132064850134236525167572086514785857372639704667670792510890282405024174877284088979561816528755704648116277280224759228633442496289904564768951043395438311962884710569645e253"),
           e_float("-1.5783539570819420027310146073787705616899672559757122688272731978481220790042736969872705412246719118066775722752953253341151316728441731241800828501191378086824830025741680147322240724779548540937028544263359918687526936548178815527593340966761128755517170953621472459713648846258633873379848695939997749319227477400824079677825227609755318222099851317374098112921660632239349566453464251663683290624e250"),
           e_float("-1.2661339529495774479820042337701551324416942558303827985140111582134445345723183788783765801969274102954809249974592624873502037597646263338064887881831173164067411198655829000877321336210692191074745432180171723948595643341245800381620908804283745618930202089879013485849434564688202322669236513958803914864231061009142141176414225620951041933649763087095574738724367608746850492878116579868947342139e250"),
           e_float("-6.387896974906738673629893146435333484652898643813265264707395402262313404695793113859919864686351120187661706807794152851086126644017961254754764756319199128595463351742700833381432037096889505068525153553082522561510439435166917025693826048213145596988601006796661156237201937756835540018874630194558571560851922180092710672515057320524853966490768455090937342879230553256937814898067248815594560817e250"),
           e_float("-1.5884200062869639796495840344940773888353111113864060623970631885858544710097534014521593181428094460679099291557542194778365860431285138894424222678650303212633342578746185272842749490052815381978065742541954645098559612325860201059889465419509033305205483696400286078576693664668852725842190991531576927192205772770662251486219083642350437386759146120980622253075350068588987910750136873798664618477e254"),
           e_float("-2.8120446583514567927562288880243889739411757614033506646854902337800722659997460497199194893134244113691868020632317685651766055433173047662090870208202005649930335445539276362456243049905009257511195902474935313082966037817965749268361348002875947095362128145790526617689605409571061600879372181547654437670663614866656178973499252630762355549328479961913359449108797738081928917723391989886675859367e261"),
           e_float("-6.948280683184857457296723362726493283119638948214558859219891699248257414304995868315623108199437109286592777237560282172160907459809768587471238830407562479952016421488893751306959548987884248105667526299717907183325624374384162824906825821119520779428913609697213068645107255967915279720955193813787254908351322400394853448185982634392408272589665118281114629876893567114299045736533703220992521815e276"),
           e_float("-2.6651296647886436628861508629435569182723535334027065836807419591716125199373347231610376815742573021816886399173282608779137473583391353276559233659722559502086513042749162865661527318149664106833732098170695796134618326062102989361976159923613420021784127949858726392190947128074747049721057177661705751301640836846212794045359382281511601565672778068487636064351717197986467418952327299699340379942e372"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00668_legendre_qvm_vary_08(const bool b_write_output)
    {
      return TestCase_case_00668_legendre_qvm_vary_08().execute(b_write_output);
    }
  }
}
