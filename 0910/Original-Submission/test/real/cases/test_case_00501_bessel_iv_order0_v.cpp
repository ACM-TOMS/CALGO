
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00501_bessel_iv_order0_v : public TestCaseReal
    {
    public:
      TestCase_case_00501_bessel_iv_order0_v() { }
      virtual ~TestCase_case_00501_bessel_iv_order0_v() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00501_bessel_iv_order0_v");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const INT32 k2 = k * k;
          const INT32 k3 = k * k2;
          const INT32 k7 = (k2 * k2) * k3;
          data[static_cast<std::size_t>(k)] = ef::cyl_bessel_i(ef::euler_gamma() + 1, k7 + ef::pi());
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("3.4141581748917613142297146761222779787297762692536441142930635864862379575227325714837815276332891109449013267934770000395890150021977551613506657509855432516420681358457280749802049851051983975781607990086463570708553819054352592773381684444032296694086662810705955300374670741540874167732414286344694974127933515675621250105444202177771227628561173471635986645763596321685278818941428439568565521005"),
           e_float("9.0629962735701202141217422138900167858378171015231744118271758469840675676598574114785936326001634693366986531929907445445281606620293405896374829642230055162994256685002808120315697497004671167672279886634833022510614904505423800838283652884607069576867763989924939676128774838993180787267444133119131181124757708414481201077753675284105066816299166226523212642789720633263139622837466553255761474651"),
           e_float("3.1073530378685970506226886953538062608270675418105463852567143518836640204097108212924361363319043897258203476165532761203055551628843505012539733077071359015314253184637964222188181465944625146851079105893265471527246543755404517027320918309047360508374496060726316902581447214849032060684847595831184756924039238147285077690742806238145158148877341038002153728902284998112976927364393155022104261529e55"),
           e_float("1.2498570418645643348197789213601716359901732360199980802924512869768709806776436426750263927531606365933692631612074839322153772934130669096710953256959811998561178912627507689491691637069913063401978794634009160519992246315506803865446162328135897233147485053103443733895697055254086865879264934388560522187307453011102015205526370782303082907879937354708278019718880309575395836977302412864711419569e949"),
           e_float("2.1817082193364684219210668838943881115578737378904278444526741355987374178737980850460869010905288837485408666481732601402016459820504455407837401740615141219618090679351078632121598027213174728905787777796706843474503223935183109259844225905241326122625358101557479767695815038788478177759909618257170143374051662923550355294784262021365884956682311632989879024223297387969681898957620827515733268537e7114"),
           e_float("5.9603964175319936380429734371552943209220445602165577667324840356566138530215679588519601835499118607611814976023811802267985880152690824480153911139545395928148134449469668369934892442373979355913629654762515315557127210745495972168652694374427698643640925176070297046256519709391987654903198574892458391721396782436002239640306880846411729078276384265409791504927986246089769114429020801361300763583e33927"),
           e_float("7.9769880121052191446722255500487735260985639872874510068063531212133838703295961318340582276852040384005457079808175655231812197301974894842022339791770714148647729740368415631376852518288998362647660491251885097984945575629499599959379729740855265400033542885384135661525934075431199837220700232951543186448672604707212267144927149918283014326407891435808271113612491130943131714238471949765383427354e121572"),
           e_float("1.5415297513512783010586618052098301650365513512242984147329030563011782282407095601001468841193491091581974088233515532124870590753053502306622552510173230633289350113435588981162662133015083972594240025417406726781363646337408594285527265247394158381791246689175868021644016109923439572832621812157340261984757421603209211331243271720438088386408197076575302861470003190040465222705251380578600214434e357658"),
           e_float("2.2170897624650175341912593390013454735426390986207580155856394202431544904834171462717315907270242892995774851708726526460523028189455688815393145511380537013850801616520512109446469977656279244916873771898869832863750849723811501867133529747373258925032560177713564078214189837103149621835128884073248388643642521802106656062166167227117863409961921536493785523949500343418813181610218866345406087042e910779"),
           e_float("4.6692992354313458338312727260117924215568333724887804879368932315179893571016410655615002813585591823621846650936886543541162705618725783139467561002028252462737133375414446762803026669237854145442843755463146822051046110624249848855439712683382350539027929841839943222518141415561427975916985672975349137885675087069174566026463837299592433408973895173910221498612555130745440853940148195798917938338e2077214"),
           e_float("1.9245040134588976861613424841138881962607791585185754628113585691486996422200424605082091650185007640854584047542263609843293058169657059751164191763729534758582545053172443482665750394200937232774273362027370451887836529896033189552083098068308287858800190400730728159766409788975023362944669073650236807070807191452059800814036589656391071208598607310133298647759681658785012489321747152934881264518e4342942"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00501_bessel_iv_order0_v(const bool b_write_output)
    {
      return TestCase_case_00501_bessel_iv_order0_v().execute(b_write_output);
    }
  }
}
