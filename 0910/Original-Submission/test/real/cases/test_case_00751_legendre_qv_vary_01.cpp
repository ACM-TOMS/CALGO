
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00751_legendre_qv_vary_01 : public TestCaseReal
    {
    public:
      TestCase_case_00751_legendre_qv_vary_01() { }
      virtual ~TestCase_case_00751_legendre_qv_vary_01() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00751_legendre_qv_vary_01");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_3 = ef::sqrt(ef::third());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const e_float v  = +((10 - k) * 13) + sqrt_1_3;
          data[k] = ef::legendre_q(v, x);
        }

      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("-0.29530309104052354460863572142737025609143411957460437256193869983384479715685672816085084323861362807851845054385151432453185256501781757305606746985953791255256435602921084455816468515747642740563065544588176106369356283601092681138174938670857029404065617730545820446545310870407195966179832153871602650358321767936135721573211832532720719729978525336663978839277470394594581010307697226804631334925"),
           e_float("0.11471165960810046623117086980031537581799957393418308345441318802253384523548088202935838672211966411887180893942265860922008047061742355798012191333822911152924869888268314914904198456394934079043186738730195676236701727612088296331867687404016791977141737462433940667953363456523898055718228538036904509988007238806660821048291263163474467309918349544735198474815107263444293273240115660319383133925"),
           e_float("0.13290012629352149226825984618064516330211472721439983204790474556431440146488829922367259835929612294410121628714677769521214082022627681008581541242864392220026779158836169971424915900393099247746924123714056705298728179792040060274072795437135512187839798975794207250919458605250987039091922748012508573694423109168424897076617213803587972748465364109674208947323832576865901140970277775883787766156"),
           e_float("0.11819194524024256607391175649052797690655816424723925112037420561019083006189265134197564787756040150505421972428444945318574718988950207964262751480961530131361146423511981876879985294542424070570425828107041976792888653728789814740481774925626571633650791876338415884180653524583918586578855539668614776960182700368902895917964593408142778952443389844939456769322060817251595026645056789079006853224"),
           e_float("-0.086854508355646672793704887121102844151985778291313882485550603241288963591339971244710767584951808718498036756776978591965465736678331594320610141839851347352778640018142365100282669383039747917956793547735232498172451396155303500289581643227706525012626494473951279818036951508627056101102099561480723656879256735499579086172128338867066498653669619745870879980160324947197530243345242364130870661706"),
           e_float("-0.13337962284603348694192676158740622982094740707807752710620163420724741763243391394775676875114862016650880009696135970718663386110869626883358204021681156991377458587249787442237626838149640415936871807832765677378476484992517139415924248165370005576625172011319592008632750085300546142579006531699594076013742018412043073198248736186072073794706808867265448417280924140720734255907045941456005783297"),
           e_float("-0.0076105029063491724983754196321103647623996367583452010228951217299168006291739781295711496938916240530285760441509060045998216509428763138356311617043226719718770367627781668403670664597600620147734820635113040566871690434731591577285732494676551034541793952992231349688333487936574390429027604557314740396480888863540940516384922269800019299018609922434699351522038857060066521875597835895110125525194"),
           e_float("-0.19229885755215933031550826279517985560466500410152768491685951087598450301432111037319475682752061290811568298896645529604148388436278080229803847921206496210602671016483304472568278672095881454160089860560020464611736048848810732400129854890210789193662923713184854531184797545788663907736419842517982227212570711275907533588100382463979855059542155572300733283105034589442054668864405156122516023979"),
           e_float("0.15558849035879813042013915964984514902935964747832398874922399006941081142713797845631009709711231079479490827547069791023171094139595389420106371658501023836810568280706767295757173596559012241521522583682902199900227039945917747754041812943616538701417297093566428544417435872483530141629774338322923115030574400996338756937985227730029778791985762344073793777387514472006280646913737920224576515417"),
           e_float("-0.36670469274665780206891484809970049813294026428888705997459249076396958964937731540221464594544483497888190966744296150811574495299473243805318793635372231211826641092548016490746646264695586346987653298435617539940480565399536646544822320067899315110308417773207105652889014002621998003765369368679135082969443818274971778403534903115224158316100345463731408574274153283350322365476745782277706889638"),
           e_float("2.230325587340501685602174174867823286606004280625197134426294853302878244410483822623253385791600512857940909966749250509165769700308992286839714242012523616870072098803725885627445915620579976345056217713844470958568822942836687064212925138392392513120612509887025101250995774908660315683879889305357360181764791201982300718279499648189474466481173567596452598334330168811688842709006194793845147522"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00751_legendre_qv_vary_01(const bool b_write_output)
    {
      return TestCase_case_00751_legendre_qv_vary_01().execute(b_write_output);
    }
  }
}
