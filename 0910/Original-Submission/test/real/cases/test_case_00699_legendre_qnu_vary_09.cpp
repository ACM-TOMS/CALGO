
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00699_legendre_qnu_vary_09 : public TestCaseReal
    {
    public:
      TestCase_case_00699_legendre_qnu_vary_09() { }
      virtual ~TestCase_case_00699_legendre_qnu_vary_09() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00699_legendre_qnu_vary_09");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        static const e_float delta = ef::euler_gamma() / 100;
        static const e_float sqrt_1_5 = ef::sqrt(ef::fifth());
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          const e_float xk = ef::one_minus() +  (e_float(k) / 5);
          const e_float x  = k <= 5 ? xk + delta : xk - delta;
          const INT32   n  = +127;
          const e_float u  = +17  + sqrt_1_5;
          data[k] = ef::legendre_q(n, u, x);
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("1.3208712261589347720036507384137345423077840695078489026061454789624350231573740453469310176031721042348689150348824692444284472233707278591585370563329814188503847547513587654381423137500964460408051177200667621456749219527983994506500373393202188318782385090124779754944291812311987288582742116574076758352607031267390260975867976639763661206252113073772861602825647104747699497143666162063126156288e37"),
           e_float("-7.0954324313511805909682966149970833508422597211383175449206030183596291223574889269312790383653688859524182842686679168628711057035220803281538775110319007151137135244133649108031021012437570804697969711060021445308301956871985651275740678345244310019285445210974006691800507743514429733531135657635693795397047586280119622356689325154337770291298579607314759133392930954679863544166337742403715578113e34"),
           e_float("4.3082604021371944887395344738691974073735121744283248727201041789071960948862875291202561197299176103944664238624280521601784959765579037922642204731535073247500823952255725737159810520075289401613014631113688728284052897506205811734660975889892604724155576594379842965782751805974237332133281502653187758149497272102574419864920081891836160307930943065749931245412731673738757577783035373264446049443e35"),
           e_float("-5.9913645498236354500284878571479722067588312917997028759596124432710346296137999345836192764889430617885678795713872272381314217329248517196448380327508865334828770611205995776362709440704844703477387642283593010053973212805553095345266325807386208132404482624290472909396498883669797439881264011545888790524262441870064764082973211540965369347468065864875057384753807575678820059787612734543749651126e35"),
           e_float("-1.4615243476122332179394371000525572032603814655828630778875589763798590107279117534258768641864467357594684404320289516087848586678140088162956134004757061247421793522967279709265310415873676645521164599222294267005790518321998495313161890657381093294420481928423877226600273286521829941942838538048793853364035911594569612036766794775684672725188861080886909618536472238858884432223115205308060431736e35"),
           e_float("1.5239964804967842585324199508198266298471654530961369896734376396536932690360653499213619351433036589796996544839419241748483537533841733156826557584097280823732612803883668609161178027886992963178775792917670493602220217243581778391958793504753055646384297604860155839575179315101258149306453202211902121085003632011651773515781551132890470633133040567038537300566322706247779248972036849632462099899e34"),
           e_float("-5.2905974314733804912675692848635183976324592963904717702146098192451169767635896349633629280190846175933085492900893209706409688496223782393365118676114874600042700951218931826031795931802582619159542540432283383805023558265524237841818343112719615849926555100191745054303641353694827598883288139177406463329332369511874530365576675739927074174619050070330286204055808321372748184319655829017481032226e35"),
           e_float("1.0983690505514827067940586471365909378992250076313543390351489529506130829074477304650755339134851316736505675324940601453754406217187767823319836716264039753946151623039139712005181546444602082931039791144102918932691991542032731070331082801250971346967072960498179054218639834779966403950961216633382293307702183059673866554346985248753027623196390424461287287452481807678222395649832256362828011307e35"),
           e_float("-5.401155318334926627092206538985648526012209674213690150190829399743045226350816266450156038958196370122364781091106933807772828365482518599335234269894614208113399557156631062498128528749586826123002836575619828200281137380480903072895744981159549249270484680390626140782626526048365483474443859085811410368853842436411767440608438885749128456598758768855704930420992832194695474099257810730143550133e35"),
           e_float("7.4060986247000639983092948573157232697589812681300366527570918533979584892304076733877304993267855145520223024206770283312429441377706545092321943028656503784609726182717727589496106279800991478409590175159243137857824024720915996797551877894052151902435406103137611908926073840349763062421511373471090617352015458833052850967535729106191401372259799585708767584709476378819952945194836047249519324899e35"),
           e_float("-2.0335420482405233554505551152890305947381406234265650682731707246172154847649105221381420092188097016808492621322779434574756395982261535372700634458436400655700181682675414079345148112305292828221678938337075599381252419666352575115186722829748121278216126333473335879749458719245477898717258512258721687477773491001317349919924226510601416137793249701902919202218762081032408110472425473461838023489e36"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00699_legendre_qnu_vary_09(const bool b_write_output)
    {
      return TestCase_case_00699_legendre_qnu_vary_09().execute(b_write_output);
    }
  }
}
