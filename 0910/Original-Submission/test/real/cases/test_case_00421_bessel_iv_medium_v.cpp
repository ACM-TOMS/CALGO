
// Automatically generated file
#include <functions/functions.h>
#include <test/real/test_case_real.h>

namespace test
{
  namespace real
  {
    class TestCase_case_00421_bessel_iv_medium_v : public TestCaseReal
    {
    public:
      TestCase_case_00421_bessel_iv_medium_v() { }
      virtual ~TestCase_case_00421_bessel_iv_medium_v() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_00421_bessel_iv_medium_v");
        return str;
      }
      virtual void e_float_test(std::vector<e_float>& data) const
      {
        data.resize(11u);
        for(INT32 k = static_cast<INT32>(0); k < static_cast<INT32>(data.size()); k++)
        {
          data[static_cast<std::size_t>(k)] = ef::cyl_bessel_i(ef::euler_gamma() + (k * 2000),
                                                               ef::hundred() + (500 * (k * k)));
        }
      }
      virtual const std::vector<e_float>& control_data(void) const
      {
        static const std::tr1::array<e_float, 11u> a =
        {{
           e_float("1.0719554223643070906240057974297708038207579057481716137579006704749288953266264328685299940654192581719848040473444418623254878463019969080408179878245475187263037016079381984444805805290030846689534811091773546873263292776751278025353962505161806623008040740443665789987068266043300054203017487171612155019480174901365562380635599646884166131365874310816601613242356462815343763433246305514433580562e42"),
           e_float("3.6400172855702906662395861323490460258334520275909280335296741831784986716499670463011668567095710305682308031186012429229160000680584257632900835197676323078149172436518586745250713672315699593479814725390012783343211853773248092972234365371921498810015002238959564652059675518789988170003742592293350720142970889490081222120786994812946129017733168229668318659587243323825934052198885432108041359147e-763"),
           e_float("1.0771008494025558603611449435428048981424214888722648076518091889739652214999859114638783902805685682481920098878009891296935562099829329528264795147878303631241804715036152785709263969009212071262177552991579518111568705561266433648162599750314685170100159257332984942580716290914484118347728799154445784779603766531208623476292807597382921115995998288786476959551086490145973529440132503887876029508e-473"),
           e_float("5.6004785855576926327696548725232187119124303826304581019458201382296630590580565765076350685002640517342871606512891698479467894714681881760211180423436124876918339570187685787106642810818860380418353494653639176678406157293636808769721517079134358189563762871352405334775325374253812830143755489171532934500504643724679898161629136725964106900682075544605571231575150384152802454573135538685915432325e463"),
           e_float("7.2150136311828200820601473511738639355148052700466083126698603856339200496657978972661652474944816329606742905477542333601736434521639031233359405154932617828303263859014366697272212102801061594556365690569961608367995586460663910180330599891048648366557650737520113460033997395858414220156077916852934083753100409381564095405321623915630759402776849170801814552840699270371704195865308446012046946134e1909"),
           e_float("1.0277121459605243887996673798332746617017947072424843701599870023952702974445125257109563942032665468639962681369069215623370770514095165761120152751621767364359293894228724104810665709896138089976828960718565778784403075858990119840383864592163323345887306596639072448292820363263556124697074842211410668057026527086491402625614374911661462572715048128864895278057365681703933328556821879198946269739e3823"),
           e_float("4.8878418918168413255619103544342794327939742910285626397084279387973269427235036387149350162668286878609309586203290555286989721392415929025100631193994176096579875223505166611826503249180804601988277801373772427173996986297979539921690175428372162477587631682715403727571596626725177991423015491408284949068354732591426248635890616473518585306249794684457003355238183866118087317495376480392663631856e6186"),
           e_float("3.0565457734628225991743454125253129869616822900441449741149814886472058637938022170669838382334923957535292407185433378926720475672827950880837669895867914761850247059645367665337227017955498034531044056881063043749611232740517966260411441151828069460446017292957832509419033626211906886655843193335843407533108610285925905849250289833402946756844562912147819571137142015785582205316713636876967640543e8993"),
           e_float("5.4106243051851108005577779904322870390363678071866509862348079205853146862490886168562706509940286434815523428882950144601851791260090273895221944856095461088055170054896286098157102614444826522621136509618627724268514716827944576017614263577292108060519808967691191093372002441782672177253136733680312502469822169151277915369065837346086241379289920282453100649563493475774298231512293047830549969974e12239"),
           e_float("2.9510091743572614390491038309887960261354447424481388425374711933986065562394776261532234658602155310718586071829186328816477167601350108992753865957996253560277353767275632784384302243175102390902364413675236334811533655171643575728743056430033715446689361411960657495989964002216866242357271945979606887550876037978438359461957458466867920002175607512738436552505058408941089293819630745430492329952e15923"),
           e_float("3.7645257967350779262078232277668376044437367680018542784054034724181584077554078696201116999617359130654446776177685281102209494305385608830330266469761764861760799635188976986051455387156635982829546528881381932805099101985013369223303148899252659738799990482370672683937344990447541080189846022463323196069692064521555582145324623311695990222092955183178488581905976668137423572796462832042703210142e20043"),
        }};
        static const std::vector<e_float> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_00421_bessel_iv_medium_v(const bool b_write_output)
    {
      return TestCase_case_00421_bessel_iv_medium_v().execute(b_write_output);
    }
  }
}
