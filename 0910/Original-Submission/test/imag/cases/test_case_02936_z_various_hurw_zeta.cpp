
// (Manually Modified) Automatically generated file
// Reason: N::meprec: Internal precision limit $MaxExtraPrecision = 50.` reached while evaluating Zeta[-101-I (200+EulerGamma),242/3]. >>
#include <functions/functions.h>
#include <test/imag/test_case_imag.h>

namespace test
{
  namespace imag
  {
    class TestCase_case_02936_z_various_hurw_zeta : public TestCaseImag
    {
    public:
      TestCase_case_02936_z_various_hurw_zeta() { }
      virtual ~TestCase_case_02936_z_various_hurw_zeta() { }
    private:
      virtual const std::string& name(void) const
      {
        static const std::string str("TestCase_case_02936_z_various_hurw_zeta");
        return str;
      }
      virtual void e_float_test(std::vector<ef_complex>& data) const
      {
        data.clear();
        data.push_back(efz::hurwitz_zeta(ef_complex(e_float(-101), -(ef::euler_gamma() + 200)), ef_complex(ef::two_third() + 80)));
        data.push_back(efz::hurwitz_zeta(ef_complex(ef::catalan(), ef::euler_gamma()),  0));
        data.push_back(efz::hurwitz_zeta(ef_complex(ef::catalan(), ef::euler_gamma()),  1));
        data.push_back(efz::hurwitz_zeta(ef_complex(ef::catalan(), ef::euler_gamma()),  2));
        data.push_back(efz::hurwitz_zeta(ef_complex(ef::catalan(), ef::euler_gamma()), 17));
      }
      virtual const std::vector<ef_complex>& control_data(void) const
      {
        static const std::tr1::array<ef_complex, 5u> a =
        {{
           ef_complex(e_float("9.35151100143289555316690659940217225274930851884874779023117086289644227513871582637201348728376654005028156158155418116437878237403474913157973671730498877013022926822542843576494609019459373614294149554688031363130333067421555903815541128595050999547209142360699476575418148014986359434232063523890329769382385967973744602285444877893511776696336906711455655250176570965016328841753941424798456483e190"), e_float("8.580486260373256678120122366734002140633220813475820537539138176604772700583880851112740910837962468866616884134562182370282716281222082447013525396707918583184241172456959766837818765607655980687343546157584568990153599278026727288257890498812215195821733674367616093513549054658654005480638875903767469333329744398960625243567048197137284028311231730498315441219552587846359267835168043244070019208e191")),
           ef_complex(e_float("0.325671981638097870030342004357772951849493450846265330594716232298514061854685499971840687663664072054266496728817412354439068628734360226132388859632155164479688931367790273754916131906129750063655519316669358081072882838949106149474253738388976150704090344645953505837053689385977931422538442335778293309149945341739420479978929862127155312870782153960261925985029952129966495730698079666830067262"), e_float("-1.6539291393449923056691918003732185720595964159282854659603583935084691406804292169375974077377455317965630021833440049034687097079419743666054448435939069349764676241651809611395156932596337486332151408380255654781988347690861572114585472892875818559705369016441451246053456324043376985407573790197456392148215448319236030884438705620223419137031522061060282391150868290640924360840273828657165847533")),
           ef_complex(e_float("0.325671981638097870030342004357772951849493450846265330594716232298514061854685499971840687663664072054266496728817412354439068628734360226132388859632155164479688931367790273754916131906129750063655519316669358081072882838949106149474253738388976150704090344645953505837053689385977931422538442335778293309149945341739420479978929862127155312870782153960261925985029952129966495730698079666830067262"), e_float("-1.6539291393449923056691918003732185720595964159282854659603583935084691406804292169375974077377455317965630021833440049034687097079419743666054448435939069349764676241651809611395156932596337486332151408380255654781988347690861572114585472892875818559705369016441451246053456324043376985407573790197456392148215448319236030884438705620223419137031522061060282391150868290640924360840273828657165847533")),
           ef_complex(e_float("-0.674328018361902129969657995642227048150506549153734669405283767701485938145314500028159312336335927945733503271182587645560931371265639773867611140367844835520311068632209726245083868093870249936344480683330641918927117161050893850525746261611023849295909655354046494162946310614022068577461557664221706690850054658260579520021070137872844687129217846039738074014970047870033504269301920333169932738"), e_float("-1.6539291393449923056691918003732185720595964159282854659603583935084691406804292169375974077377455317965630021833440049034687097079419743666054448435939069349764676241651809611395156932596337486332151408380255654781988347690861572114585472892875818559705369016441451246053456324043376985407573790197456392148215448319236030884438705620223419137031522061060282391150868290640924360840273828657165847533")),
           ef_complex(e_float("-2.1300582077234260691943499993626659675658369541285621083126361408677478865387589751914349194688645323142767477508940134533959528626388250909734483326154346254226193040424577534796464296743554291199736262943513946931677570247279338937213934467266420110155273559900111726008721016240753087591116794095587834237928348090580431187319684106136061392253794717871230601543019662427712291850227136102494442507"), e_float("0.4140514555641036947990468434946900590253782614907803444330676030740297395659745363498526493697970484380119001708681873702953496763087661813232579092644383505286520151391741207454483783733602749705044083334650939014838833357368774289237027306313936648285312637337762669638399450088049111470257373467958336851239262404503308039407045434702967942490302281431934559064067300456271642675771954546451498229")),
        }};
        static const std::vector<ef_complex> v(a.begin(), a.end());
        return v;
      }
    };

    bool test_case_02936_z_various_hurw_zeta(const bool b_write_output)
    {
      return TestCase_case_02936_z_various_hurw_zeta().execute(b_write_output);
    }
  }
}
