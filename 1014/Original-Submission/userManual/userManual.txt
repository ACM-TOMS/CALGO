
#  USER GUIDE
#
# Brief descriptions of the functions in this file and their use.
#
# function julia11hypot(x, y)
# A direct copy of the original Julia 1.1 hypot code.
#
# function MyHypot1(x,y)
# Implements the Naive (Unfused) algorithm from the paper.
#
# function MyHypot2(x,y)
# Implements the Naive (Fused) algorithm from the paper.
#
# function MyHypot3(x,y)
# Implements the Corrected (Unfused) algorithm from the paper.
#
# function MyHypot4(x,y)
# Implements the Corrected (Fused) algorithm from the paper.
#
# function MyHypot5(x,y)
# Implements the Fully Corrected (Fused) algorithm from the paper.
#
# function testuniform(n, m)
# Runs n random trials of the first six algorithms with x,y~U(1,2) and computes
# percentage of incorrectly rounded results.
# The optional argument m rescales so that x~U(m,2*m).
# This code is used to generate the data in table 2.
#
# function multiscaletestuniform(n)
# Runs the testuniform code on a range of relative scales 2^k for k=0..11.
# Returns a matrix with the resulting error rates where each row corresponds
# to a relative scale of the operands and each column to one of the six
# methods.
# Input variable n is the number of trials to run at each scale.
# This code generates the data in table 2 by calling testuniform().
#
# function testnormal(n)
# Runs n random trials of the algorithms with x,y~N(0,1) and computes
# percentage of one ulp and two ulp errors.
# This code was used to create table 1 in the paper.
